var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__8038 = x == null ? null : x;
  if(p[goog.typeOf(x__8038)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__8039__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__8039 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8039__delegate.call(this, array, i, idxs)
    };
    G__8039.cljs$lang$maxFixedArity = 2;
    G__8039.cljs$lang$applyTo = function(arglist__8040) {
      var array = cljs.core.first(arglist__8040);
      var i = cljs.core.first(cljs.core.next(arglist__8040));
      var idxs = cljs.core.rest(cljs.core.next(arglist__8040));
      return G__8039__delegate(array, i, idxs)
    };
    G__8039.cljs$lang$arity$variadic = G__8039__delegate;
    return G__8039
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____8125 = this$;
      if(and__3822__auto____8125) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____8125
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____8126 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8127 = cljs.core._invoke[goog.typeOf(x__2363__auto____8126)];
        if(or__3824__auto____8127) {
          return or__3824__auto____8127
        }else {
          var or__3824__auto____8128 = cljs.core._invoke["_"];
          if(or__3824__auto____8128) {
            return or__3824__auto____8128
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____8129 = this$;
      if(and__3822__auto____8129) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____8129
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____8130 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8131 = cljs.core._invoke[goog.typeOf(x__2363__auto____8130)];
        if(or__3824__auto____8131) {
          return or__3824__auto____8131
        }else {
          var or__3824__auto____8132 = cljs.core._invoke["_"];
          if(or__3824__auto____8132) {
            return or__3824__auto____8132
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____8133 = this$;
      if(and__3822__auto____8133) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____8133
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____8134 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8135 = cljs.core._invoke[goog.typeOf(x__2363__auto____8134)];
        if(or__3824__auto____8135) {
          return or__3824__auto____8135
        }else {
          var or__3824__auto____8136 = cljs.core._invoke["_"];
          if(or__3824__auto____8136) {
            return or__3824__auto____8136
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____8137 = this$;
      if(and__3822__auto____8137) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____8137
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____8138 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8139 = cljs.core._invoke[goog.typeOf(x__2363__auto____8138)];
        if(or__3824__auto____8139) {
          return or__3824__auto____8139
        }else {
          var or__3824__auto____8140 = cljs.core._invoke["_"];
          if(or__3824__auto____8140) {
            return or__3824__auto____8140
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____8141 = this$;
      if(and__3822__auto____8141) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____8141
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____8142 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8143 = cljs.core._invoke[goog.typeOf(x__2363__auto____8142)];
        if(or__3824__auto____8143) {
          return or__3824__auto____8143
        }else {
          var or__3824__auto____8144 = cljs.core._invoke["_"];
          if(or__3824__auto____8144) {
            return or__3824__auto____8144
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____8145 = this$;
      if(and__3822__auto____8145) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____8145
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____8146 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8147 = cljs.core._invoke[goog.typeOf(x__2363__auto____8146)];
        if(or__3824__auto____8147) {
          return or__3824__auto____8147
        }else {
          var or__3824__auto____8148 = cljs.core._invoke["_"];
          if(or__3824__auto____8148) {
            return or__3824__auto____8148
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____8149 = this$;
      if(and__3822__auto____8149) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____8149
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____8150 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8151 = cljs.core._invoke[goog.typeOf(x__2363__auto____8150)];
        if(or__3824__auto____8151) {
          return or__3824__auto____8151
        }else {
          var or__3824__auto____8152 = cljs.core._invoke["_"];
          if(or__3824__auto____8152) {
            return or__3824__auto____8152
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____8153 = this$;
      if(and__3822__auto____8153) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____8153
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____8154 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8155 = cljs.core._invoke[goog.typeOf(x__2363__auto____8154)];
        if(or__3824__auto____8155) {
          return or__3824__auto____8155
        }else {
          var or__3824__auto____8156 = cljs.core._invoke["_"];
          if(or__3824__auto____8156) {
            return or__3824__auto____8156
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____8157 = this$;
      if(and__3822__auto____8157) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____8157
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____8158 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8159 = cljs.core._invoke[goog.typeOf(x__2363__auto____8158)];
        if(or__3824__auto____8159) {
          return or__3824__auto____8159
        }else {
          var or__3824__auto____8160 = cljs.core._invoke["_"];
          if(or__3824__auto____8160) {
            return or__3824__auto____8160
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____8161 = this$;
      if(and__3822__auto____8161) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____8161
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____8162 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8163 = cljs.core._invoke[goog.typeOf(x__2363__auto____8162)];
        if(or__3824__auto____8163) {
          return or__3824__auto____8163
        }else {
          var or__3824__auto____8164 = cljs.core._invoke["_"];
          if(or__3824__auto____8164) {
            return or__3824__auto____8164
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____8165 = this$;
      if(and__3822__auto____8165) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____8165
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____8166 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8167 = cljs.core._invoke[goog.typeOf(x__2363__auto____8166)];
        if(or__3824__auto____8167) {
          return or__3824__auto____8167
        }else {
          var or__3824__auto____8168 = cljs.core._invoke["_"];
          if(or__3824__auto____8168) {
            return or__3824__auto____8168
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____8169 = this$;
      if(and__3822__auto____8169) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____8169
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____8170 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8171 = cljs.core._invoke[goog.typeOf(x__2363__auto____8170)];
        if(or__3824__auto____8171) {
          return or__3824__auto____8171
        }else {
          var or__3824__auto____8172 = cljs.core._invoke["_"];
          if(or__3824__auto____8172) {
            return or__3824__auto____8172
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____8173 = this$;
      if(and__3822__auto____8173) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____8173
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____8174 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8175 = cljs.core._invoke[goog.typeOf(x__2363__auto____8174)];
        if(or__3824__auto____8175) {
          return or__3824__auto____8175
        }else {
          var or__3824__auto____8176 = cljs.core._invoke["_"];
          if(or__3824__auto____8176) {
            return or__3824__auto____8176
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____8177 = this$;
      if(and__3822__auto____8177) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____8177
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____8178 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8179 = cljs.core._invoke[goog.typeOf(x__2363__auto____8178)];
        if(or__3824__auto____8179) {
          return or__3824__auto____8179
        }else {
          var or__3824__auto____8180 = cljs.core._invoke["_"];
          if(or__3824__auto____8180) {
            return or__3824__auto____8180
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____8181 = this$;
      if(and__3822__auto____8181) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____8181
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____8182 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8183 = cljs.core._invoke[goog.typeOf(x__2363__auto____8182)];
        if(or__3824__auto____8183) {
          return or__3824__auto____8183
        }else {
          var or__3824__auto____8184 = cljs.core._invoke["_"];
          if(or__3824__auto____8184) {
            return or__3824__auto____8184
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____8185 = this$;
      if(and__3822__auto____8185) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____8185
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____8186 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8187 = cljs.core._invoke[goog.typeOf(x__2363__auto____8186)];
        if(or__3824__auto____8187) {
          return or__3824__auto____8187
        }else {
          var or__3824__auto____8188 = cljs.core._invoke["_"];
          if(or__3824__auto____8188) {
            return or__3824__auto____8188
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____8189 = this$;
      if(and__3822__auto____8189) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____8189
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____8190 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8191 = cljs.core._invoke[goog.typeOf(x__2363__auto____8190)];
        if(or__3824__auto____8191) {
          return or__3824__auto____8191
        }else {
          var or__3824__auto____8192 = cljs.core._invoke["_"];
          if(or__3824__auto____8192) {
            return or__3824__auto____8192
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____8193 = this$;
      if(and__3822__auto____8193) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____8193
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____8194 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8195 = cljs.core._invoke[goog.typeOf(x__2363__auto____8194)];
        if(or__3824__auto____8195) {
          return or__3824__auto____8195
        }else {
          var or__3824__auto____8196 = cljs.core._invoke["_"];
          if(or__3824__auto____8196) {
            return or__3824__auto____8196
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____8197 = this$;
      if(and__3822__auto____8197) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____8197
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____8198 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8199 = cljs.core._invoke[goog.typeOf(x__2363__auto____8198)];
        if(or__3824__auto____8199) {
          return or__3824__auto____8199
        }else {
          var or__3824__auto____8200 = cljs.core._invoke["_"];
          if(or__3824__auto____8200) {
            return or__3824__auto____8200
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____8201 = this$;
      if(and__3822__auto____8201) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____8201
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____8202 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8203 = cljs.core._invoke[goog.typeOf(x__2363__auto____8202)];
        if(or__3824__auto____8203) {
          return or__3824__auto____8203
        }else {
          var or__3824__auto____8204 = cljs.core._invoke["_"];
          if(or__3824__auto____8204) {
            return or__3824__auto____8204
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____8205 = this$;
      if(and__3822__auto____8205) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____8205
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____8206 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8207 = cljs.core._invoke[goog.typeOf(x__2363__auto____8206)];
        if(or__3824__auto____8207) {
          return or__3824__auto____8207
        }else {
          var or__3824__auto____8208 = cljs.core._invoke["_"];
          if(or__3824__auto____8208) {
            return or__3824__auto____8208
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____8213 = coll;
    if(and__3822__auto____8213) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____8213
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____8214 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8215 = cljs.core._count[goog.typeOf(x__2363__auto____8214)];
      if(or__3824__auto____8215) {
        return or__3824__auto____8215
      }else {
        var or__3824__auto____8216 = cljs.core._count["_"];
        if(or__3824__auto____8216) {
          return or__3824__auto____8216
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____8221 = coll;
    if(and__3822__auto____8221) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____8221
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____8222 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8223 = cljs.core._empty[goog.typeOf(x__2363__auto____8222)];
      if(or__3824__auto____8223) {
        return or__3824__auto____8223
      }else {
        var or__3824__auto____8224 = cljs.core._empty["_"];
        if(or__3824__auto____8224) {
          return or__3824__auto____8224
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____8229 = coll;
    if(and__3822__auto____8229) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____8229
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____8230 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8231 = cljs.core._conj[goog.typeOf(x__2363__auto____8230)];
      if(or__3824__auto____8231) {
        return or__3824__auto____8231
      }else {
        var or__3824__auto____8232 = cljs.core._conj["_"];
        if(or__3824__auto____8232) {
          return or__3824__auto____8232
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____8241 = coll;
      if(and__3822__auto____8241) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____8241
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____8242 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8243 = cljs.core._nth[goog.typeOf(x__2363__auto____8242)];
        if(or__3824__auto____8243) {
          return or__3824__auto____8243
        }else {
          var or__3824__auto____8244 = cljs.core._nth["_"];
          if(or__3824__auto____8244) {
            return or__3824__auto____8244
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____8245 = coll;
      if(and__3822__auto____8245) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____8245
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____8246 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8247 = cljs.core._nth[goog.typeOf(x__2363__auto____8246)];
        if(or__3824__auto____8247) {
          return or__3824__auto____8247
        }else {
          var or__3824__auto____8248 = cljs.core._nth["_"];
          if(or__3824__auto____8248) {
            return or__3824__auto____8248
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____8253 = coll;
    if(and__3822__auto____8253) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____8253
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____8254 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8255 = cljs.core._first[goog.typeOf(x__2363__auto____8254)];
      if(or__3824__auto____8255) {
        return or__3824__auto____8255
      }else {
        var or__3824__auto____8256 = cljs.core._first["_"];
        if(or__3824__auto____8256) {
          return or__3824__auto____8256
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____8261 = coll;
    if(and__3822__auto____8261) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____8261
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____8262 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8263 = cljs.core._rest[goog.typeOf(x__2363__auto____8262)];
      if(or__3824__auto____8263) {
        return or__3824__auto____8263
      }else {
        var or__3824__auto____8264 = cljs.core._rest["_"];
        if(or__3824__auto____8264) {
          return or__3824__auto____8264
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____8269 = coll;
    if(and__3822__auto____8269) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____8269
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____8270 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8271 = cljs.core._next[goog.typeOf(x__2363__auto____8270)];
      if(or__3824__auto____8271) {
        return or__3824__auto____8271
      }else {
        var or__3824__auto____8272 = cljs.core._next["_"];
        if(or__3824__auto____8272) {
          return or__3824__auto____8272
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____8281 = o;
      if(and__3822__auto____8281) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____8281
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____8282 = o == null ? null : o;
      return function() {
        var or__3824__auto____8283 = cljs.core._lookup[goog.typeOf(x__2363__auto____8282)];
        if(or__3824__auto____8283) {
          return or__3824__auto____8283
        }else {
          var or__3824__auto____8284 = cljs.core._lookup["_"];
          if(or__3824__auto____8284) {
            return or__3824__auto____8284
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____8285 = o;
      if(and__3822__auto____8285) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____8285
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____8286 = o == null ? null : o;
      return function() {
        var or__3824__auto____8287 = cljs.core._lookup[goog.typeOf(x__2363__auto____8286)];
        if(or__3824__auto____8287) {
          return or__3824__auto____8287
        }else {
          var or__3824__auto____8288 = cljs.core._lookup["_"];
          if(or__3824__auto____8288) {
            return or__3824__auto____8288
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____8293 = coll;
    if(and__3822__auto____8293) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____8293
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____8294 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8295 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____8294)];
      if(or__3824__auto____8295) {
        return or__3824__auto____8295
      }else {
        var or__3824__auto____8296 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____8296) {
          return or__3824__auto____8296
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____8301 = coll;
    if(and__3822__auto____8301) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____8301
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____8302 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8303 = cljs.core._assoc[goog.typeOf(x__2363__auto____8302)];
      if(or__3824__auto____8303) {
        return or__3824__auto____8303
      }else {
        var or__3824__auto____8304 = cljs.core._assoc["_"];
        if(or__3824__auto____8304) {
          return or__3824__auto____8304
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____8309 = coll;
    if(and__3822__auto____8309) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____8309
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____8310 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8311 = cljs.core._dissoc[goog.typeOf(x__2363__auto____8310)];
      if(or__3824__auto____8311) {
        return or__3824__auto____8311
      }else {
        var or__3824__auto____8312 = cljs.core._dissoc["_"];
        if(or__3824__auto____8312) {
          return or__3824__auto____8312
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____8317 = coll;
    if(and__3822__auto____8317) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____8317
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____8318 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8319 = cljs.core._key[goog.typeOf(x__2363__auto____8318)];
      if(or__3824__auto____8319) {
        return or__3824__auto____8319
      }else {
        var or__3824__auto____8320 = cljs.core._key["_"];
        if(or__3824__auto____8320) {
          return or__3824__auto____8320
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____8325 = coll;
    if(and__3822__auto____8325) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____8325
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____8326 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8327 = cljs.core._val[goog.typeOf(x__2363__auto____8326)];
      if(or__3824__auto____8327) {
        return or__3824__auto____8327
      }else {
        var or__3824__auto____8328 = cljs.core._val["_"];
        if(or__3824__auto____8328) {
          return or__3824__auto____8328
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____8333 = coll;
    if(and__3822__auto____8333) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____8333
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____8334 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8335 = cljs.core._disjoin[goog.typeOf(x__2363__auto____8334)];
      if(or__3824__auto____8335) {
        return or__3824__auto____8335
      }else {
        var or__3824__auto____8336 = cljs.core._disjoin["_"];
        if(or__3824__auto____8336) {
          return or__3824__auto____8336
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____8341 = coll;
    if(and__3822__auto____8341) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____8341
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____8342 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8343 = cljs.core._peek[goog.typeOf(x__2363__auto____8342)];
      if(or__3824__auto____8343) {
        return or__3824__auto____8343
      }else {
        var or__3824__auto____8344 = cljs.core._peek["_"];
        if(or__3824__auto____8344) {
          return or__3824__auto____8344
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____8349 = coll;
    if(and__3822__auto____8349) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____8349
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____8350 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8351 = cljs.core._pop[goog.typeOf(x__2363__auto____8350)];
      if(or__3824__auto____8351) {
        return or__3824__auto____8351
      }else {
        var or__3824__auto____8352 = cljs.core._pop["_"];
        if(or__3824__auto____8352) {
          return or__3824__auto____8352
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____8357 = coll;
    if(and__3822__auto____8357) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____8357
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____8358 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8359 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____8358)];
      if(or__3824__auto____8359) {
        return or__3824__auto____8359
      }else {
        var or__3824__auto____8360 = cljs.core._assoc_n["_"];
        if(or__3824__auto____8360) {
          return or__3824__auto____8360
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____8365 = o;
    if(and__3822__auto____8365) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____8365
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____8366 = o == null ? null : o;
    return function() {
      var or__3824__auto____8367 = cljs.core._deref[goog.typeOf(x__2363__auto____8366)];
      if(or__3824__auto____8367) {
        return or__3824__auto____8367
      }else {
        var or__3824__auto____8368 = cljs.core._deref["_"];
        if(or__3824__auto____8368) {
          return or__3824__auto____8368
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____8373 = o;
    if(and__3822__auto____8373) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____8373
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____8374 = o == null ? null : o;
    return function() {
      var or__3824__auto____8375 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____8374)];
      if(or__3824__auto____8375) {
        return or__3824__auto____8375
      }else {
        var or__3824__auto____8376 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____8376) {
          return or__3824__auto____8376
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____8381 = o;
    if(and__3822__auto____8381) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____8381
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____8382 = o == null ? null : o;
    return function() {
      var or__3824__auto____8383 = cljs.core._meta[goog.typeOf(x__2363__auto____8382)];
      if(or__3824__auto____8383) {
        return or__3824__auto____8383
      }else {
        var or__3824__auto____8384 = cljs.core._meta["_"];
        if(or__3824__auto____8384) {
          return or__3824__auto____8384
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____8389 = o;
    if(and__3822__auto____8389) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____8389
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____8390 = o == null ? null : o;
    return function() {
      var or__3824__auto____8391 = cljs.core._with_meta[goog.typeOf(x__2363__auto____8390)];
      if(or__3824__auto____8391) {
        return or__3824__auto____8391
      }else {
        var or__3824__auto____8392 = cljs.core._with_meta["_"];
        if(or__3824__auto____8392) {
          return or__3824__auto____8392
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____8401 = coll;
      if(and__3822__auto____8401) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____8401
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____8402 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8403 = cljs.core._reduce[goog.typeOf(x__2363__auto____8402)];
        if(or__3824__auto____8403) {
          return or__3824__auto____8403
        }else {
          var or__3824__auto____8404 = cljs.core._reduce["_"];
          if(or__3824__auto____8404) {
            return or__3824__auto____8404
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____8405 = coll;
      if(and__3822__auto____8405) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____8405
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____8406 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8407 = cljs.core._reduce[goog.typeOf(x__2363__auto____8406)];
        if(or__3824__auto____8407) {
          return or__3824__auto____8407
        }else {
          var or__3824__auto____8408 = cljs.core._reduce["_"];
          if(or__3824__auto____8408) {
            return or__3824__auto____8408
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____8413 = coll;
    if(and__3822__auto____8413) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____8413
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____8414 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8415 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____8414)];
      if(or__3824__auto____8415) {
        return or__3824__auto____8415
      }else {
        var or__3824__auto____8416 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____8416) {
          return or__3824__auto____8416
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____8421 = o;
    if(and__3822__auto____8421) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____8421
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____8422 = o == null ? null : o;
    return function() {
      var or__3824__auto____8423 = cljs.core._equiv[goog.typeOf(x__2363__auto____8422)];
      if(or__3824__auto____8423) {
        return or__3824__auto____8423
      }else {
        var or__3824__auto____8424 = cljs.core._equiv["_"];
        if(or__3824__auto____8424) {
          return or__3824__auto____8424
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8429 = o;
    if(and__3822__auto____8429) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8429
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____8430 = o == null ? null : o;
    return function() {
      var or__3824__auto____8431 = cljs.core._hash[goog.typeOf(x__2363__auto____8430)];
      if(or__3824__auto____8431) {
        return or__3824__auto____8431
      }else {
        var or__3824__auto____8432 = cljs.core._hash["_"];
        if(or__3824__auto____8432) {
          return or__3824__auto____8432
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8437 = o;
    if(and__3822__auto____8437) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8437
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____8438 = o == null ? null : o;
    return function() {
      var or__3824__auto____8439 = cljs.core._seq[goog.typeOf(x__2363__auto____8438)];
      if(or__3824__auto____8439) {
        return or__3824__auto____8439
      }else {
        var or__3824__auto____8440 = cljs.core._seq["_"];
        if(or__3824__auto____8440) {
          return or__3824__auto____8440
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8445 = coll;
    if(and__3822__auto____8445) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8445
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____8446 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8447 = cljs.core._rseq[goog.typeOf(x__2363__auto____8446)];
      if(or__3824__auto____8447) {
        return or__3824__auto____8447
      }else {
        var or__3824__auto____8448 = cljs.core._rseq["_"];
        if(or__3824__auto____8448) {
          return or__3824__auto____8448
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8453 = coll;
    if(and__3822__auto____8453) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8453
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____8454 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8455 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____8454)];
      if(or__3824__auto____8455) {
        return or__3824__auto____8455
      }else {
        var or__3824__auto____8456 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8456) {
          return or__3824__auto____8456
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8461 = coll;
    if(and__3822__auto____8461) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8461
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____8462 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8463 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____8462)];
      if(or__3824__auto____8463) {
        return or__3824__auto____8463
      }else {
        var or__3824__auto____8464 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8464) {
          return or__3824__auto____8464
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8469 = coll;
    if(and__3822__auto____8469) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8469
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____8470 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8471 = cljs.core._entry_key[goog.typeOf(x__2363__auto____8470)];
      if(or__3824__auto____8471) {
        return or__3824__auto____8471
      }else {
        var or__3824__auto____8472 = cljs.core._entry_key["_"];
        if(or__3824__auto____8472) {
          return or__3824__auto____8472
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8477 = coll;
    if(and__3822__auto____8477) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8477
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____8478 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8479 = cljs.core._comparator[goog.typeOf(x__2363__auto____8478)];
      if(or__3824__auto____8479) {
        return or__3824__auto____8479
      }else {
        var or__3824__auto____8480 = cljs.core._comparator["_"];
        if(or__3824__auto____8480) {
          return or__3824__auto____8480
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8485 = o;
    if(and__3822__auto____8485) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8485
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____8486 = o == null ? null : o;
    return function() {
      var or__3824__auto____8487 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____8486)];
      if(or__3824__auto____8487) {
        return or__3824__auto____8487
      }else {
        var or__3824__auto____8488 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8488) {
          return or__3824__auto____8488
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8493 = d;
    if(and__3822__auto____8493) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8493
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____8494 = d == null ? null : d;
    return function() {
      var or__3824__auto____8495 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____8494)];
      if(or__3824__auto____8495) {
        return or__3824__auto____8495
      }else {
        var or__3824__auto____8496 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8496) {
          return or__3824__auto____8496
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8501 = this$;
    if(and__3822__auto____8501) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8501
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____8502 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8503 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____8502)];
      if(or__3824__auto____8503) {
        return or__3824__auto____8503
      }else {
        var or__3824__auto____8504 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8504) {
          return or__3824__auto____8504
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8509 = this$;
    if(and__3822__auto____8509) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8509
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____8510 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8511 = cljs.core._add_watch[goog.typeOf(x__2363__auto____8510)];
      if(or__3824__auto____8511) {
        return or__3824__auto____8511
      }else {
        var or__3824__auto____8512 = cljs.core._add_watch["_"];
        if(or__3824__auto____8512) {
          return or__3824__auto____8512
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8517 = this$;
    if(and__3822__auto____8517) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8517
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____8518 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8519 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____8518)];
      if(or__3824__auto____8519) {
        return or__3824__auto____8519
      }else {
        var or__3824__auto____8520 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8520) {
          return or__3824__auto____8520
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8525 = coll;
    if(and__3822__auto____8525) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8525
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____8526 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8527 = cljs.core._as_transient[goog.typeOf(x__2363__auto____8526)];
      if(or__3824__auto____8527) {
        return or__3824__auto____8527
      }else {
        var or__3824__auto____8528 = cljs.core._as_transient["_"];
        if(or__3824__auto____8528) {
          return or__3824__auto____8528
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8533 = tcoll;
    if(and__3822__auto____8533) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8533
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____8534 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8535 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____8534)];
      if(or__3824__auto____8535) {
        return or__3824__auto____8535
      }else {
        var or__3824__auto____8536 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8536) {
          return or__3824__auto____8536
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8541 = tcoll;
    if(and__3822__auto____8541) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8541
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____8542 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8543 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____8542)];
      if(or__3824__auto____8543) {
        return or__3824__auto____8543
      }else {
        var or__3824__auto____8544 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8544) {
          return or__3824__auto____8544
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8549 = tcoll;
    if(and__3822__auto____8549) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8549
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____8550 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8551 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____8550)];
      if(or__3824__auto____8551) {
        return or__3824__auto____8551
      }else {
        var or__3824__auto____8552 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8552) {
          return or__3824__auto____8552
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8557 = tcoll;
    if(and__3822__auto____8557) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8557
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____8558 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8559 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____8558)];
      if(or__3824__auto____8559) {
        return or__3824__auto____8559
      }else {
        var or__3824__auto____8560 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8560) {
          return or__3824__auto____8560
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8565 = tcoll;
    if(and__3822__auto____8565) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8565
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____8566 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8567 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____8566)];
      if(or__3824__auto____8567) {
        return or__3824__auto____8567
      }else {
        var or__3824__auto____8568 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8568) {
          return or__3824__auto____8568
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8573 = tcoll;
    if(and__3822__auto____8573) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8573
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____8574 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8575 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____8574)];
      if(or__3824__auto____8575) {
        return or__3824__auto____8575
      }else {
        var or__3824__auto____8576 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8576) {
          return or__3824__auto____8576
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8581 = tcoll;
    if(and__3822__auto____8581) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8581
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____8582 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8583 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____8582)];
      if(or__3824__auto____8583) {
        return or__3824__auto____8583
      }else {
        var or__3824__auto____8584 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8584) {
          return or__3824__auto____8584
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8589 = x;
    if(and__3822__auto____8589) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8589
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____8590 = x == null ? null : x;
    return function() {
      var or__3824__auto____8591 = cljs.core._compare[goog.typeOf(x__2363__auto____8590)];
      if(or__3824__auto____8591) {
        return or__3824__auto____8591
      }else {
        var or__3824__auto____8592 = cljs.core._compare["_"];
        if(or__3824__auto____8592) {
          return or__3824__auto____8592
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8597 = coll;
    if(and__3822__auto____8597) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8597
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____8598 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8599 = cljs.core._drop_first[goog.typeOf(x__2363__auto____8598)];
      if(or__3824__auto____8599) {
        return or__3824__auto____8599
      }else {
        var or__3824__auto____8600 = cljs.core._drop_first["_"];
        if(or__3824__auto____8600) {
          return or__3824__auto____8600
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8605 = coll;
    if(and__3822__auto____8605) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8605
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____8606 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8607 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____8606)];
      if(or__3824__auto____8607) {
        return or__3824__auto____8607
      }else {
        var or__3824__auto____8608 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8608) {
          return or__3824__auto____8608
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8613 = coll;
    if(and__3822__auto____8613) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8613
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____8614 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8615 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____8614)];
      if(or__3824__auto____8615) {
        return or__3824__auto____8615
      }else {
        var or__3824__auto____8616 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8616) {
          return or__3824__auto____8616
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8621 = coll;
    if(and__3822__auto____8621) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8621
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____8622 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8623 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____8622)];
      if(or__3824__auto____8623) {
        return or__3824__auto____8623
      }else {
        var or__3824__auto____8624 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8624) {
          return or__3824__auto____8624
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8626 = x === y;
    if(or__3824__auto____8626) {
      return or__3824__auto____8626
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8627__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8628 = y;
            var G__8629 = cljs.core.first.call(null, more);
            var G__8630 = cljs.core.next.call(null, more);
            x = G__8628;
            y = G__8629;
            more = G__8630;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8627 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8627__delegate.call(this, x, y, more)
    };
    G__8627.cljs$lang$maxFixedArity = 2;
    G__8627.cljs$lang$applyTo = function(arglist__8631) {
      var x = cljs.core.first(arglist__8631);
      var y = cljs.core.first(cljs.core.next(arglist__8631));
      var more = cljs.core.rest(cljs.core.next(arglist__8631));
      return G__8627__delegate(x, y, more)
    };
    G__8627.cljs$lang$arity$variadic = G__8627__delegate;
    return G__8627
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8632 = null;
  var G__8632__2 = function(o, k) {
    return null
  };
  var G__8632__3 = function(o, k, not_found) {
    return not_found
  };
  G__8632 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8632__2.call(this, o, k);
      case 3:
        return G__8632__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8632
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8633 = null;
  var G__8633__2 = function(_, f) {
    return f.call(null)
  };
  var G__8633__3 = function(_, f, start) {
    return start
  };
  G__8633 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8633__2.call(this, _, f);
      case 3:
        return G__8633__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8633
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8634 = null;
  var G__8634__2 = function(_, n) {
    return null
  };
  var G__8634__3 = function(_, n, not_found) {
    return not_found
  };
  G__8634 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8634__2.call(this, _, n);
      case 3:
        return G__8634__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8634
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8635 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8635) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8635
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8648 = cljs.core._count.call(null, cicoll);
    if(cnt__8648 === 0) {
      return f.call(null)
    }else {
      var val__8649 = cljs.core._nth.call(null, cicoll, 0);
      var n__8650 = 1;
      while(true) {
        if(n__8650 < cnt__8648) {
          var nval__8651 = f.call(null, val__8649, cljs.core._nth.call(null, cicoll, n__8650));
          if(cljs.core.reduced_QMARK_.call(null, nval__8651)) {
            return cljs.core.deref.call(null, nval__8651)
          }else {
            var G__8660 = nval__8651;
            var G__8661 = n__8650 + 1;
            val__8649 = G__8660;
            n__8650 = G__8661;
            continue
          }
        }else {
          return val__8649
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8652 = cljs.core._count.call(null, cicoll);
    var val__8653 = val;
    var n__8654 = 0;
    while(true) {
      if(n__8654 < cnt__8652) {
        var nval__8655 = f.call(null, val__8653, cljs.core._nth.call(null, cicoll, n__8654));
        if(cljs.core.reduced_QMARK_.call(null, nval__8655)) {
          return cljs.core.deref.call(null, nval__8655)
        }else {
          var G__8662 = nval__8655;
          var G__8663 = n__8654 + 1;
          val__8653 = G__8662;
          n__8654 = G__8663;
          continue
        }
      }else {
        return val__8653
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8656 = cljs.core._count.call(null, cicoll);
    var val__8657 = val;
    var n__8658 = idx;
    while(true) {
      if(n__8658 < cnt__8656) {
        var nval__8659 = f.call(null, val__8657, cljs.core._nth.call(null, cicoll, n__8658));
        if(cljs.core.reduced_QMARK_.call(null, nval__8659)) {
          return cljs.core.deref.call(null, nval__8659)
        }else {
          var G__8664 = nval__8659;
          var G__8665 = n__8658 + 1;
          val__8657 = G__8664;
          n__8658 = G__8665;
          continue
        }
      }else {
        return val__8657
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8678 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8679 = arr[0];
      var n__8680 = 1;
      while(true) {
        if(n__8680 < cnt__8678) {
          var nval__8681 = f.call(null, val__8679, arr[n__8680]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8681)) {
            return cljs.core.deref.call(null, nval__8681)
          }else {
            var G__8690 = nval__8681;
            var G__8691 = n__8680 + 1;
            val__8679 = G__8690;
            n__8680 = G__8691;
            continue
          }
        }else {
          return val__8679
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8682 = arr.length;
    var val__8683 = val;
    var n__8684 = 0;
    while(true) {
      if(n__8684 < cnt__8682) {
        var nval__8685 = f.call(null, val__8683, arr[n__8684]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8685)) {
          return cljs.core.deref.call(null, nval__8685)
        }else {
          var G__8692 = nval__8685;
          var G__8693 = n__8684 + 1;
          val__8683 = G__8692;
          n__8684 = G__8693;
          continue
        }
      }else {
        return val__8683
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8686 = arr.length;
    var val__8687 = val;
    var n__8688 = idx;
    while(true) {
      if(n__8688 < cnt__8686) {
        var nval__8689 = f.call(null, val__8687, arr[n__8688]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8689)) {
          return cljs.core.deref.call(null, nval__8689)
        }else {
          var G__8694 = nval__8689;
          var G__8695 = n__8688 + 1;
          val__8687 = G__8694;
          n__8688 = G__8695;
          continue
        }
      }else {
        return val__8687
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8696 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8697 = this;
  if(this__8697.i + 1 < this__8697.a.length) {
    return new cljs.core.IndexedSeq(this__8697.a, this__8697.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8698 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8699 = this;
  var c__8700 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8700 > 0) {
    return new cljs.core.RSeq(coll, c__8700 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8701 = this;
  var this__8702 = this;
  return cljs.core.pr_str.call(null, this__8702)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8703 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8703.a)) {
    return cljs.core.ci_reduce.call(null, this__8703.a, f, this__8703.a[this__8703.i], this__8703.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8703.a[this__8703.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8704 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8704.a)) {
    return cljs.core.ci_reduce.call(null, this__8704.a, f, start, this__8704.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8705 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8706 = this;
  return this__8706.a.length - this__8706.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8707 = this;
  return this__8707.a[this__8707.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8708 = this;
  if(this__8708.i + 1 < this__8708.a.length) {
    return new cljs.core.IndexedSeq(this__8708.a, this__8708.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8709 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8710 = this;
  var i__8711 = n + this__8710.i;
  if(i__8711 < this__8710.a.length) {
    return this__8710.a[i__8711]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8712 = this;
  var i__8713 = n + this__8712.i;
  if(i__8713 < this__8712.a.length) {
    return this__8712.a[i__8713]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8714 = null;
  var G__8714__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8714__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8714 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8714__2.call(this, array, f);
      case 3:
        return G__8714__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8714
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8715 = null;
  var G__8715__2 = function(array, k) {
    return array[k]
  };
  var G__8715__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8715 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8715__2.call(this, array, k);
      case 3:
        return G__8715__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8715
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8716 = null;
  var G__8716__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8716__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8716 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8716__2.call(this, array, n);
      case 3:
        return G__8716__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8716
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8717 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8718 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8719 = this;
  var this__8720 = this;
  return cljs.core.pr_str.call(null, this__8720)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8721 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8722 = this;
  return this__8722.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8723 = this;
  return cljs.core._nth.call(null, this__8723.ci, this__8723.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8724 = this;
  if(this__8724.i > 0) {
    return new cljs.core.RSeq(this__8724.ci, this__8724.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8725 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8726 = this;
  return new cljs.core.RSeq(this__8726.ci, this__8726.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8727 = this;
  return this__8727.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8731__8732 = coll;
      if(G__8731__8732) {
        if(function() {
          var or__3824__auto____8733 = G__8731__8732.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8733) {
            return or__3824__auto____8733
          }else {
            return G__8731__8732.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8731__8732.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8731__8732)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8731__8732)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8738__8739 = coll;
      if(G__8738__8739) {
        if(function() {
          var or__3824__auto____8740 = G__8738__8739.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8740) {
            return or__3824__auto____8740
          }else {
            return G__8738__8739.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8738__8739.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8738__8739)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8738__8739)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8741 = cljs.core.seq.call(null, coll);
      if(s__8741 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8741)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8746__8747 = coll;
      if(G__8746__8747) {
        if(function() {
          var or__3824__auto____8748 = G__8746__8747.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8748) {
            return or__3824__auto____8748
          }else {
            return G__8746__8747.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8746__8747.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8746__8747)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8746__8747)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8749 = cljs.core.seq.call(null, coll);
      if(!(s__8749 == null)) {
        return cljs.core._rest.call(null, s__8749)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8753__8754 = coll;
      if(G__8753__8754) {
        if(function() {
          var or__3824__auto____8755 = G__8753__8754.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8755) {
            return or__3824__auto____8755
          }else {
            return G__8753__8754.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8753__8754.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8753__8754)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8753__8754)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8757 = cljs.core.next.call(null, s);
    if(!(sn__8757 == null)) {
      var G__8758 = sn__8757;
      s = G__8758;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8759__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8760 = conj.call(null, coll, x);
          var G__8761 = cljs.core.first.call(null, xs);
          var G__8762 = cljs.core.next.call(null, xs);
          coll = G__8760;
          x = G__8761;
          xs = G__8762;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8759 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8759__delegate.call(this, coll, x, xs)
    };
    G__8759.cljs$lang$maxFixedArity = 2;
    G__8759.cljs$lang$applyTo = function(arglist__8763) {
      var coll = cljs.core.first(arglist__8763);
      var x = cljs.core.first(cljs.core.next(arglist__8763));
      var xs = cljs.core.rest(cljs.core.next(arglist__8763));
      return G__8759__delegate(coll, x, xs)
    };
    G__8759.cljs$lang$arity$variadic = G__8759__delegate;
    return G__8759
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8766 = cljs.core.seq.call(null, coll);
  var acc__8767 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8766)) {
      return acc__8767 + cljs.core._count.call(null, s__8766)
    }else {
      var G__8768 = cljs.core.next.call(null, s__8766);
      var G__8769 = acc__8767 + 1;
      s__8766 = G__8768;
      acc__8767 = G__8769;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8776__8777 = coll;
        if(G__8776__8777) {
          if(function() {
            var or__3824__auto____8778 = G__8776__8777.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8778) {
              return or__3824__auto____8778
            }else {
              return G__8776__8777.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8776__8777.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8776__8777)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8776__8777)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8779__8780 = coll;
        if(G__8779__8780) {
          if(function() {
            var or__3824__auto____8781 = G__8779__8780.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8781) {
              return or__3824__auto____8781
            }else {
              return G__8779__8780.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8779__8780.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8779__8780)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8779__8780)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8784__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8783 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8785 = ret__8783;
          var G__8786 = cljs.core.first.call(null, kvs);
          var G__8787 = cljs.core.second.call(null, kvs);
          var G__8788 = cljs.core.nnext.call(null, kvs);
          coll = G__8785;
          k = G__8786;
          v = G__8787;
          kvs = G__8788;
          continue
        }else {
          return ret__8783
        }
        break
      }
    };
    var G__8784 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8784__delegate.call(this, coll, k, v, kvs)
    };
    G__8784.cljs$lang$maxFixedArity = 3;
    G__8784.cljs$lang$applyTo = function(arglist__8789) {
      var coll = cljs.core.first(arglist__8789);
      var k = cljs.core.first(cljs.core.next(arglist__8789));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8789)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8789)));
      return G__8784__delegate(coll, k, v, kvs)
    };
    G__8784.cljs$lang$arity$variadic = G__8784__delegate;
    return G__8784
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8792__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8791 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8793 = ret__8791;
          var G__8794 = cljs.core.first.call(null, ks);
          var G__8795 = cljs.core.next.call(null, ks);
          coll = G__8793;
          k = G__8794;
          ks = G__8795;
          continue
        }else {
          return ret__8791
        }
        break
      }
    };
    var G__8792 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8792__delegate.call(this, coll, k, ks)
    };
    G__8792.cljs$lang$maxFixedArity = 2;
    G__8792.cljs$lang$applyTo = function(arglist__8796) {
      var coll = cljs.core.first(arglist__8796);
      var k = cljs.core.first(cljs.core.next(arglist__8796));
      var ks = cljs.core.rest(cljs.core.next(arglist__8796));
      return G__8792__delegate(coll, k, ks)
    };
    G__8792.cljs$lang$arity$variadic = G__8792__delegate;
    return G__8792
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8800__8801 = o;
    if(G__8800__8801) {
      if(function() {
        var or__3824__auto____8802 = G__8800__8801.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8802) {
          return or__3824__auto____8802
        }else {
          return G__8800__8801.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8800__8801.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8800__8801)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8800__8801)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8805__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8804 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8806 = ret__8804;
          var G__8807 = cljs.core.first.call(null, ks);
          var G__8808 = cljs.core.next.call(null, ks);
          coll = G__8806;
          k = G__8807;
          ks = G__8808;
          continue
        }else {
          return ret__8804
        }
        break
      }
    };
    var G__8805 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8805__delegate.call(this, coll, k, ks)
    };
    G__8805.cljs$lang$maxFixedArity = 2;
    G__8805.cljs$lang$applyTo = function(arglist__8809) {
      var coll = cljs.core.first(arglist__8809);
      var k = cljs.core.first(cljs.core.next(arglist__8809));
      var ks = cljs.core.rest(cljs.core.next(arglist__8809));
      return G__8805__delegate(coll, k, ks)
    };
    G__8805.cljs$lang$arity$variadic = G__8805__delegate;
    return G__8805
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8811 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8811;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8811
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8813 = cljs.core.string_hash_cache[k];
  if(!(h__8813 == null)) {
    return h__8813
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8815 = goog.isString(o);
      if(and__3822__auto____8815) {
        return check_cache
      }else {
        return and__3822__auto____8815
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8819__8820 = x;
    if(G__8819__8820) {
      if(function() {
        var or__3824__auto____8821 = G__8819__8820.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8821) {
          return or__3824__auto____8821
        }else {
          return G__8819__8820.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8819__8820.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8819__8820)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8819__8820)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8825__8826 = x;
    if(G__8825__8826) {
      if(function() {
        var or__3824__auto____8827 = G__8825__8826.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8827) {
          return or__3824__auto____8827
        }else {
          return G__8825__8826.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8825__8826.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8825__8826)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8825__8826)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8831__8832 = x;
  if(G__8831__8832) {
    if(function() {
      var or__3824__auto____8833 = G__8831__8832.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8833) {
        return or__3824__auto____8833
      }else {
        return G__8831__8832.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8831__8832.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8831__8832)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8831__8832)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8837__8838 = x;
  if(G__8837__8838) {
    if(function() {
      var or__3824__auto____8839 = G__8837__8838.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8839) {
        return or__3824__auto____8839
      }else {
        return G__8837__8838.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8837__8838.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8837__8838)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8837__8838)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8843__8844 = x;
  if(G__8843__8844) {
    if(function() {
      var or__3824__auto____8845 = G__8843__8844.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8845) {
        return or__3824__auto____8845
      }else {
        return G__8843__8844.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8843__8844.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8843__8844)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8843__8844)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8849__8850 = x;
  if(G__8849__8850) {
    if(function() {
      var or__3824__auto____8851 = G__8849__8850.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8851) {
        return or__3824__auto____8851
      }else {
        return G__8849__8850.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8849__8850.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8849__8850)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8849__8850)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8855__8856 = x;
  if(G__8855__8856) {
    if(function() {
      var or__3824__auto____8857 = G__8855__8856.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8857) {
        return or__3824__auto____8857
      }else {
        return G__8855__8856.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8855__8856.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8855__8856)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8855__8856)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8861__8862 = x;
    if(G__8861__8862) {
      if(function() {
        var or__3824__auto____8863 = G__8861__8862.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8863) {
          return or__3824__auto____8863
        }else {
          return G__8861__8862.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8861__8862.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8861__8862)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8861__8862)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8867__8868 = x;
  if(G__8867__8868) {
    if(function() {
      var or__3824__auto____8869 = G__8867__8868.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8869) {
        return or__3824__auto____8869
      }else {
        return G__8867__8868.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8867__8868.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8867__8868)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8867__8868)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8873__8874 = x;
  if(G__8873__8874) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8875 = null;
      if(cljs.core.truth_(or__3824__auto____8875)) {
        return or__3824__auto____8875
      }else {
        return G__8873__8874.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8873__8874.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8873__8874)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8873__8874)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8876__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8876 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8876__delegate.call(this, keyvals)
    };
    G__8876.cljs$lang$maxFixedArity = 0;
    G__8876.cljs$lang$applyTo = function(arglist__8877) {
      var keyvals = cljs.core.seq(arglist__8877);
      return G__8876__delegate(keyvals)
    };
    G__8876.cljs$lang$arity$variadic = G__8876__delegate;
    return G__8876
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8879 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8879.push(key)
  });
  return keys__8879
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8883 = i;
  var j__8884 = j;
  var len__8885 = len;
  while(true) {
    if(len__8885 === 0) {
      return to
    }else {
      to[j__8884] = from[i__8883];
      var G__8886 = i__8883 + 1;
      var G__8887 = j__8884 + 1;
      var G__8888 = len__8885 - 1;
      i__8883 = G__8886;
      j__8884 = G__8887;
      len__8885 = G__8888;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8892 = i + (len - 1);
  var j__8893 = j + (len - 1);
  var len__8894 = len;
  while(true) {
    if(len__8894 === 0) {
      return to
    }else {
      to[j__8893] = from[i__8892];
      var G__8895 = i__8892 - 1;
      var G__8896 = j__8893 - 1;
      var G__8897 = len__8894 - 1;
      i__8892 = G__8895;
      j__8893 = G__8896;
      len__8894 = G__8897;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8901__8902 = s;
    if(G__8901__8902) {
      if(function() {
        var or__3824__auto____8903 = G__8901__8902.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8903) {
          return or__3824__auto____8903
        }else {
          return G__8901__8902.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8901__8902.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8901__8902)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8901__8902)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8907__8908 = s;
  if(G__8907__8908) {
    if(function() {
      var or__3824__auto____8909 = G__8907__8908.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8909) {
        return or__3824__auto____8909
      }else {
        return G__8907__8908.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8907__8908.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8907__8908)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8907__8908)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8912 = goog.isString(x);
  if(and__3822__auto____8912) {
    return!function() {
      var or__3824__auto____8913 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8913) {
        return or__3824__auto____8913
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8912
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8915 = goog.isString(x);
  if(and__3822__auto____8915) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8915
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8917 = goog.isString(x);
  if(and__3822__auto____8917) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8917
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8922 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8922) {
    return or__3824__auto____8922
  }else {
    var G__8923__8924 = f;
    if(G__8923__8924) {
      if(function() {
        var or__3824__auto____8925 = G__8923__8924.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8925) {
          return or__3824__auto____8925
        }else {
          return G__8923__8924.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8923__8924.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8923__8924)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8923__8924)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8927 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8927) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8927
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8930 = coll;
    if(cljs.core.truth_(and__3822__auto____8930)) {
      var and__3822__auto____8931 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8931) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8931
      }
    }else {
      return and__3822__auto____8930
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8940__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8936 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8937 = more;
        while(true) {
          var x__8938 = cljs.core.first.call(null, xs__8937);
          var etc__8939 = cljs.core.next.call(null, xs__8937);
          if(cljs.core.truth_(xs__8937)) {
            if(cljs.core.contains_QMARK_.call(null, s__8936, x__8938)) {
              return false
            }else {
              var G__8941 = cljs.core.conj.call(null, s__8936, x__8938);
              var G__8942 = etc__8939;
              s__8936 = G__8941;
              xs__8937 = G__8942;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8940 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8940__delegate.call(this, x, y, more)
    };
    G__8940.cljs$lang$maxFixedArity = 2;
    G__8940.cljs$lang$applyTo = function(arglist__8943) {
      var x = cljs.core.first(arglist__8943);
      var y = cljs.core.first(cljs.core.next(arglist__8943));
      var more = cljs.core.rest(cljs.core.next(arglist__8943));
      return G__8940__delegate(x, y, more)
    };
    G__8940.cljs$lang$arity$variadic = G__8940__delegate;
    return G__8940
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8947__8948 = x;
            if(G__8947__8948) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8949 = null;
                if(cljs.core.truth_(or__3824__auto____8949)) {
                  return or__3824__auto____8949
                }else {
                  return G__8947__8948.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8947__8948.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8947__8948)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8947__8948)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8954 = cljs.core.count.call(null, xs);
    var yl__8955 = cljs.core.count.call(null, ys);
    if(xl__8954 < yl__8955) {
      return-1
    }else {
      if(xl__8954 > yl__8955) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8954, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8956 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8957 = d__8956 === 0;
        if(and__3822__auto____8957) {
          return n + 1 < len
        }else {
          return and__3822__auto____8957
        }
      }()) {
        var G__8958 = xs;
        var G__8959 = ys;
        var G__8960 = len;
        var G__8961 = n + 1;
        xs = G__8958;
        ys = G__8959;
        len = G__8960;
        n = G__8961;
        continue
      }else {
        return d__8956
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8963 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8963)) {
        return r__8963
      }else {
        if(cljs.core.truth_(r__8963)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8965 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8965, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8965)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8971 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8971) {
      var s__8972 = temp__3971__auto____8971;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8972), cljs.core.next.call(null, s__8972))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8973 = val;
    var coll__8974 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8974) {
        var nval__8975 = f.call(null, val__8973, cljs.core.first.call(null, coll__8974));
        if(cljs.core.reduced_QMARK_.call(null, nval__8975)) {
          return cljs.core.deref.call(null, nval__8975)
        }else {
          var G__8976 = nval__8975;
          var G__8977 = cljs.core.next.call(null, coll__8974);
          val__8973 = G__8976;
          coll__8974 = G__8977;
          continue
        }
      }else {
        return val__8973
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8979 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8979);
  return cljs.core.vec.call(null, a__8979)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8986__8987 = coll;
      if(G__8986__8987) {
        if(function() {
          var or__3824__auto____8988 = G__8986__8987.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8988) {
            return or__3824__auto____8988
          }else {
            return G__8986__8987.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8986__8987.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8986__8987)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8986__8987)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8989__8990 = coll;
      if(G__8989__8990) {
        if(function() {
          var or__3824__auto____8991 = G__8989__8990.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8991) {
            return or__3824__auto____8991
          }else {
            return G__8989__8990.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8989__8990.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8989__8990)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8989__8990)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8992 = this;
  return this__8992.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8993__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8993 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8993__delegate.call(this, x, y, more)
    };
    G__8993.cljs$lang$maxFixedArity = 2;
    G__8993.cljs$lang$applyTo = function(arglist__8994) {
      var x = cljs.core.first(arglist__8994);
      var y = cljs.core.first(cljs.core.next(arglist__8994));
      var more = cljs.core.rest(cljs.core.next(arglist__8994));
      return G__8993__delegate(x, y, more)
    };
    G__8993.cljs$lang$arity$variadic = G__8993__delegate;
    return G__8993
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8995__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8995 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8995__delegate.call(this, x, y, more)
    };
    G__8995.cljs$lang$maxFixedArity = 2;
    G__8995.cljs$lang$applyTo = function(arglist__8996) {
      var x = cljs.core.first(arglist__8996);
      var y = cljs.core.first(cljs.core.next(arglist__8996));
      var more = cljs.core.rest(cljs.core.next(arglist__8996));
      return G__8995__delegate(x, y, more)
    };
    G__8995.cljs$lang$arity$variadic = G__8995__delegate;
    return G__8995
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8997__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8997 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8997__delegate.call(this, x, y, more)
    };
    G__8997.cljs$lang$maxFixedArity = 2;
    G__8997.cljs$lang$applyTo = function(arglist__8998) {
      var x = cljs.core.first(arglist__8998);
      var y = cljs.core.first(cljs.core.next(arglist__8998));
      var more = cljs.core.rest(cljs.core.next(arglist__8998));
      return G__8997__delegate(x, y, more)
    };
    G__8997.cljs$lang$arity$variadic = G__8997__delegate;
    return G__8997
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8999__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8999 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8999__delegate.call(this, x, y, more)
    };
    G__8999.cljs$lang$maxFixedArity = 2;
    G__8999.cljs$lang$applyTo = function(arglist__9000) {
      var x = cljs.core.first(arglist__9000);
      var y = cljs.core.first(cljs.core.next(arglist__9000));
      var more = cljs.core.rest(cljs.core.next(arglist__9000));
      return G__8999__delegate(x, y, more)
    };
    G__8999.cljs$lang$arity$variadic = G__8999__delegate;
    return G__8999
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__9001__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__9002 = y;
            var G__9003 = cljs.core.first.call(null, more);
            var G__9004 = cljs.core.next.call(null, more);
            x = G__9002;
            y = G__9003;
            more = G__9004;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9001 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9001__delegate.call(this, x, y, more)
    };
    G__9001.cljs$lang$maxFixedArity = 2;
    G__9001.cljs$lang$applyTo = function(arglist__9005) {
      var x = cljs.core.first(arglist__9005);
      var y = cljs.core.first(cljs.core.next(arglist__9005));
      var more = cljs.core.rest(cljs.core.next(arglist__9005));
      return G__9001__delegate(x, y, more)
    };
    G__9001.cljs$lang$arity$variadic = G__9001__delegate;
    return G__9001
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__9006__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9007 = y;
            var G__9008 = cljs.core.first.call(null, more);
            var G__9009 = cljs.core.next.call(null, more);
            x = G__9007;
            y = G__9008;
            more = G__9009;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9006 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9006__delegate.call(this, x, y, more)
    };
    G__9006.cljs$lang$maxFixedArity = 2;
    G__9006.cljs$lang$applyTo = function(arglist__9010) {
      var x = cljs.core.first(arglist__9010);
      var y = cljs.core.first(cljs.core.next(arglist__9010));
      var more = cljs.core.rest(cljs.core.next(arglist__9010));
      return G__9006__delegate(x, y, more)
    };
    G__9006.cljs$lang$arity$variadic = G__9006__delegate;
    return G__9006
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__9011__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__9012 = y;
            var G__9013 = cljs.core.first.call(null, more);
            var G__9014 = cljs.core.next.call(null, more);
            x = G__9012;
            y = G__9013;
            more = G__9014;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9011 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9011__delegate.call(this, x, y, more)
    };
    G__9011.cljs$lang$maxFixedArity = 2;
    G__9011.cljs$lang$applyTo = function(arglist__9015) {
      var x = cljs.core.first(arglist__9015);
      var y = cljs.core.first(cljs.core.next(arglist__9015));
      var more = cljs.core.rest(cljs.core.next(arglist__9015));
      return G__9011__delegate(x, y, more)
    };
    G__9011.cljs$lang$arity$variadic = G__9011__delegate;
    return G__9011
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__9016__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9017 = y;
            var G__9018 = cljs.core.first.call(null, more);
            var G__9019 = cljs.core.next.call(null, more);
            x = G__9017;
            y = G__9018;
            more = G__9019;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9016 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9016__delegate.call(this, x, y, more)
    };
    G__9016.cljs$lang$maxFixedArity = 2;
    G__9016.cljs$lang$applyTo = function(arglist__9020) {
      var x = cljs.core.first(arglist__9020);
      var y = cljs.core.first(cljs.core.next(arglist__9020));
      var more = cljs.core.rest(cljs.core.next(arglist__9020));
      return G__9016__delegate(x, y, more)
    };
    G__9016.cljs$lang$arity$variadic = G__9016__delegate;
    return G__9016
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__9021__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__9021 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9021__delegate.call(this, x, y, more)
    };
    G__9021.cljs$lang$maxFixedArity = 2;
    G__9021.cljs$lang$applyTo = function(arglist__9022) {
      var x = cljs.core.first(arglist__9022);
      var y = cljs.core.first(cljs.core.next(arglist__9022));
      var more = cljs.core.rest(cljs.core.next(arglist__9022));
      return G__9021__delegate(x, y, more)
    };
    G__9021.cljs$lang$arity$variadic = G__9021__delegate;
    return G__9021
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__9023__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__9023 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9023__delegate.call(this, x, y, more)
    };
    G__9023.cljs$lang$maxFixedArity = 2;
    G__9023.cljs$lang$applyTo = function(arglist__9024) {
      var x = cljs.core.first(arglist__9024);
      var y = cljs.core.first(cljs.core.next(arglist__9024));
      var more = cljs.core.rest(cljs.core.next(arglist__9024));
      return G__9023__delegate(x, y, more)
    };
    G__9023.cljs$lang$arity$variadic = G__9023__delegate;
    return G__9023
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__9026 = n % d;
  return cljs.core.fix.call(null, (n - rem__9026) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__9028 = cljs.core.quot.call(null, n, d);
  return n - d * q__9028
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__9031 = v - (v >> 1 & 1431655765);
  var v__9032 = (v__9031 & 858993459) + (v__9031 >> 2 & 858993459);
  return(v__9032 + (v__9032 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__9033__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9034 = y;
            var G__9035 = cljs.core.first.call(null, more);
            var G__9036 = cljs.core.next.call(null, more);
            x = G__9034;
            y = G__9035;
            more = G__9036;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9033 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9033__delegate.call(this, x, y, more)
    };
    G__9033.cljs$lang$maxFixedArity = 2;
    G__9033.cljs$lang$applyTo = function(arglist__9037) {
      var x = cljs.core.first(arglist__9037);
      var y = cljs.core.first(cljs.core.next(arglist__9037));
      var more = cljs.core.rest(cljs.core.next(arglist__9037));
      return G__9033__delegate(x, y, more)
    };
    G__9033.cljs$lang$arity$variadic = G__9033__delegate;
    return G__9033
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__9041 = n;
  var xs__9042 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____9043 = xs__9042;
      if(and__3822__auto____9043) {
        return n__9041 > 0
      }else {
        return and__3822__auto____9043
      }
    }())) {
      var G__9044 = n__9041 - 1;
      var G__9045 = cljs.core.next.call(null, xs__9042);
      n__9041 = G__9044;
      xs__9042 = G__9045;
      continue
    }else {
      return xs__9042
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__9046__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9047 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__9048 = cljs.core.next.call(null, more);
            sb = G__9047;
            more = G__9048;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__9046 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9046__delegate.call(this, x, ys)
    };
    G__9046.cljs$lang$maxFixedArity = 1;
    G__9046.cljs$lang$applyTo = function(arglist__9049) {
      var x = cljs.core.first(arglist__9049);
      var ys = cljs.core.rest(arglist__9049);
      return G__9046__delegate(x, ys)
    };
    G__9046.cljs$lang$arity$variadic = G__9046__delegate;
    return G__9046
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__9050__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9051 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__9052 = cljs.core.next.call(null, more);
            sb = G__9051;
            more = G__9052;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__9050 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9050__delegate.call(this, x, ys)
    };
    G__9050.cljs$lang$maxFixedArity = 1;
    G__9050.cljs$lang$applyTo = function(arglist__9053) {
      var x = cljs.core.first(arglist__9053);
      var ys = cljs.core.rest(arglist__9053);
      return G__9050__delegate(x, ys)
    };
    G__9050.cljs$lang$arity$variadic = G__9050__delegate;
    return G__9050
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__9054) {
    var fmt = cljs.core.first(arglist__9054);
    var args = cljs.core.rest(arglist__9054);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__9057 = cljs.core.seq.call(null, x);
    var ys__9058 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__9057 == null) {
        return ys__9058 == null
      }else {
        if(ys__9058 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__9057), cljs.core.first.call(null, ys__9058))) {
            var G__9059 = cljs.core.next.call(null, xs__9057);
            var G__9060 = cljs.core.next.call(null, ys__9058);
            xs__9057 = G__9059;
            ys__9058 = G__9060;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__9061_SHARP_, p2__9062_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__9061_SHARP_, cljs.core.hash.call(null, p2__9062_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__9066 = 0;
  var s__9067 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__9067) {
      var e__9068 = cljs.core.first.call(null, s__9067);
      var G__9069 = (h__9066 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__9068)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__9068)))) % 4503599627370496;
      var G__9070 = cljs.core.next.call(null, s__9067);
      h__9066 = G__9069;
      s__9067 = G__9070;
      continue
    }else {
      return h__9066
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__9074 = 0;
  var s__9075 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__9075) {
      var e__9076 = cljs.core.first.call(null, s__9075);
      var G__9077 = (h__9074 + cljs.core.hash.call(null, e__9076)) % 4503599627370496;
      var G__9078 = cljs.core.next.call(null, s__9075);
      h__9074 = G__9077;
      s__9075 = G__9078;
      continue
    }else {
      return h__9074
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__9099__9100 = cljs.core.seq.call(null, fn_map);
  if(G__9099__9100) {
    var G__9102__9104 = cljs.core.first.call(null, G__9099__9100);
    var vec__9103__9105 = G__9102__9104;
    var key_name__9106 = cljs.core.nth.call(null, vec__9103__9105, 0, null);
    var f__9107 = cljs.core.nth.call(null, vec__9103__9105, 1, null);
    var G__9099__9108 = G__9099__9100;
    var G__9102__9109 = G__9102__9104;
    var G__9099__9110 = G__9099__9108;
    while(true) {
      var vec__9111__9112 = G__9102__9109;
      var key_name__9113 = cljs.core.nth.call(null, vec__9111__9112, 0, null);
      var f__9114 = cljs.core.nth.call(null, vec__9111__9112, 1, null);
      var G__9099__9115 = G__9099__9110;
      var str_name__9116 = cljs.core.name.call(null, key_name__9113);
      obj[str_name__9116] = f__9114;
      var temp__3974__auto____9117 = cljs.core.next.call(null, G__9099__9115);
      if(temp__3974__auto____9117) {
        var G__9099__9118 = temp__3974__auto____9117;
        var G__9119 = cljs.core.first.call(null, G__9099__9118);
        var G__9120 = G__9099__9118;
        G__9102__9109 = G__9119;
        G__9099__9110 = G__9120;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9121 = this;
  var h__2192__auto____9122 = this__9121.__hash;
  if(!(h__2192__auto____9122 == null)) {
    return h__2192__auto____9122
  }else {
    var h__2192__auto____9123 = cljs.core.hash_coll.call(null, coll);
    this__9121.__hash = h__2192__auto____9123;
    return h__2192__auto____9123
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9124 = this;
  if(this__9124.count === 1) {
    return null
  }else {
    return this__9124.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9125 = this;
  return new cljs.core.List(this__9125.meta, o, coll, this__9125.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__9126 = this;
  var this__9127 = this;
  return cljs.core.pr_str.call(null, this__9127)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9128 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9129 = this;
  return this__9129.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9130 = this;
  return this__9130.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9131 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9132 = this;
  return this__9132.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9133 = this;
  if(this__9133.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__9133.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9134 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9135 = this;
  return new cljs.core.List(meta, this__9135.first, this__9135.rest, this__9135.count, this__9135.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9136 = this;
  return this__9136.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9137 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9138 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9139 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9140 = this;
  return new cljs.core.List(this__9140.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__9141 = this;
  var this__9142 = this;
  return cljs.core.pr_str.call(null, this__9142)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9143 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9144 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9145 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9146 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9147 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9148 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9149 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9150 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9151 = this;
  return this__9151.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9152 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9156__9157 = coll;
  if(G__9156__9157) {
    if(function() {
      var or__3824__auto____9158 = G__9156__9157.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____9158) {
        return or__3824__auto____9158
      }else {
        return G__9156__9157.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__9156__9157.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9156__9157)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9156__9157)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__9159__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__9159 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9159__delegate.call(this, x, y, z, items)
    };
    G__9159.cljs$lang$maxFixedArity = 3;
    G__9159.cljs$lang$applyTo = function(arglist__9160) {
      var x = cljs.core.first(arglist__9160);
      var y = cljs.core.first(cljs.core.next(arglist__9160));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9160)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9160)));
      return G__9159__delegate(x, y, z, items)
    };
    G__9159.cljs$lang$arity$variadic = G__9159__delegate;
    return G__9159
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9161 = this;
  var h__2192__auto____9162 = this__9161.__hash;
  if(!(h__2192__auto____9162 == null)) {
    return h__2192__auto____9162
  }else {
    var h__2192__auto____9163 = cljs.core.hash_coll.call(null, coll);
    this__9161.__hash = h__2192__auto____9163;
    return h__2192__auto____9163
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9164 = this;
  if(this__9164.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__9164.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9165 = this;
  return new cljs.core.Cons(null, o, coll, this__9165.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__9166 = this;
  var this__9167 = this;
  return cljs.core.pr_str.call(null, this__9167)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9168 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9169 = this;
  return this__9169.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9170 = this;
  if(this__9170.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9170.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9171 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9172 = this;
  return new cljs.core.Cons(meta, this__9172.first, this__9172.rest, this__9172.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9173 = this;
  return this__9173.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9174 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9174.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____9179 = coll == null;
    if(or__3824__auto____9179) {
      return or__3824__auto____9179
    }else {
      var G__9180__9181 = coll;
      if(G__9180__9181) {
        if(function() {
          var or__3824__auto____9182 = G__9180__9181.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9182) {
            return or__3824__auto____9182
          }else {
            return G__9180__9181.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9180__9181.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9180__9181)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9180__9181)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9186__9187 = x;
  if(G__9186__9187) {
    if(function() {
      var or__3824__auto____9188 = G__9186__9187.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____9188) {
        return or__3824__auto____9188
      }else {
        return G__9186__9187.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__9186__9187.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9186__9187)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9186__9187)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__9189 = null;
  var G__9189__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__9189__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__9189 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9189__2.call(this, string, f);
      case 3:
        return G__9189__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9189
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__9190 = null;
  var G__9190__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__9190__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__9190 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9190__2.call(this, string, k);
      case 3:
        return G__9190__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9190
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__9191 = null;
  var G__9191__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__9191__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__9191 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9191__2.call(this, string, n);
      case 3:
        return G__9191__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9191
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__9203 = null;
  var G__9203__2 = function(this_sym9194, coll) {
    var this__9196 = this;
    var this_sym9194__9197 = this;
    var ___9198 = this_sym9194__9197;
    if(coll == null) {
      return null
    }else {
      var strobj__9199 = coll.strobj;
      if(strobj__9199 == null) {
        return cljs.core._lookup.call(null, coll, this__9196.k, null)
      }else {
        return strobj__9199[this__9196.k]
      }
    }
  };
  var G__9203__3 = function(this_sym9195, coll, not_found) {
    var this__9196 = this;
    var this_sym9195__9200 = this;
    var ___9201 = this_sym9195__9200;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__9196.k, not_found)
    }
  };
  G__9203 = function(this_sym9195, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9203__2.call(this, this_sym9195, coll);
      case 3:
        return G__9203__3.call(this, this_sym9195, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9203
}();
cljs.core.Keyword.prototype.apply = function(this_sym9192, args9193) {
  var this__9202 = this;
  return this_sym9192.call.apply(this_sym9192, [this_sym9192].concat(args9193.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__9212 = null;
  var G__9212__2 = function(this_sym9206, coll) {
    var this_sym9206__9208 = this;
    var this__9209 = this_sym9206__9208;
    return cljs.core._lookup.call(null, coll, this__9209.toString(), null)
  };
  var G__9212__3 = function(this_sym9207, coll, not_found) {
    var this_sym9207__9210 = this;
    var this__9211 = this_sym9207__9210;
    return cljs.core._lookup.call(null, coll, this__9211.toString(), not_found)
  };
  G__9212 = function(this_sym9207, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9212__2.call(this, this_sym9207, coll);
      case 3:
        return G__9212__3.call(this, this_sym9207, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9212
}();
String.prototype.apply = function(this_sym9204, args9205) {
  return this_sym9204.call.apply(this_sym9204, [this_sym9204].concat(args9205.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__9214 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__9214
  }else {
    lazy_seq.x = x__9214.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9215 = this;
  var h__2192__auto____9216 = this__9215.__hash;
  if(!(h__2192__auto____9216 == null)) {
    return h__2192__auto____9216
  }else {
    var h__2192__auto____9217 = cljs.core.hash_coll.call(null, coll);
    this__9215.__hash = h__2192__auto____9217;
    return h__2192__auto____9217
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9218 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9219 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__9220 = this;
  var this__9221 = this;
  return cljs.core.pr_str.call(null, this__9221)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9222 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9223 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9224 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9225 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9226 = this;
  return new cljs.core.LazySeq(meta, this__9226.realized, this__9226.x, this__9226.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9227 = this;
  return this__9227.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9228 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9228.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9229 = this;
  return this__9229.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__9230 = this;
  var ___9231 = this;
  this__9230.buf[this__9230.end] = o;
  return this__9230.end = this__9230.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__9232 = this;
  var ___9233 = this;
  var ret__9234 = new cljs.core.ArrayChunk(this__9232.buf, 0, this__9232.end);
  this__9232.buf = null;
  return ret__9234
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9235 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__9235.arr[this__9235.off], this__9235.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9236 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__9236.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__9237 = this;
  if(this__9237.off === this__9237.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__9237.arr, this__9237.off + 1, this__9237.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__9238 = this;
  return this__9238.arr[this__9238.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__9239 = this;
  if(function() {
    var and__3822__auto____9240 = i >= 0;
    if(and__3822__auto____9240) {
      return i < this__9239.end - this__9239.off
    }else {
      return and__3822__auto____9240
    }
  }()) {
    return this__9239.arr[this__9239.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9241 = this;
  return this__9241.end - this__9241.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__9242 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9243 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9244 = this;
  return cljs.core._nth.call(null, this__9244.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9245 = this;
  if(cljs.core._count.call(null, this__9245.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__9245.chunk), this__9245.more, this__9245.meta)
  }else {
    if(this__9245.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__9245.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9246 = this;
  if(this__9246.more == null) {
    return null
  }else {
    return this__9246.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9247 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9248 = this;
  return new cljs.core.ChunkedCons(this__9248.chunk, this__9248.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9249 = this;
  return this__9249.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9250 = this;
  return this__9250.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9251 = this;
  if(this__9251.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9251.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__9255__9256 = s;
    if(G__9255__9256) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____9257 = null;
        if(cljs.core.truth_(or__3824__auto____9257)) {
          return or__3824__auto____9257
        }else {
          return G__9255__9256.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__9255__9256.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9255__9256)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9255__9256)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__9260 = [];
  var s__9261 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__9261)) {
      ary__9260.push(cljs.core.first.call(null, s__9261));
      var G__9262 = cljs.core.next.call(null, s__9261);
      s__9261 = G__9262;
      continue
    }else {
      return ary__9260
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__9266 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__9267 = 0;
  var xs__9268 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__9268) {
      ret__9266[i__9267] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__9268));
      var G__9269 = i__9267 + 1;
      var G__9270 = cljs.core.next.call(null, xs__9268);
      i__9267 = G__9269;
      xs__9268 = G__9270;
      continue
    }else {
    }
    break
  }
  return ret__9266
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__9278 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9279 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9280 = 0;
      var s__9281 = s__9279;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9282 = s__9281;
          if(and__3822__auto____9282) {
            return i__9280 < size
          }else {
            return and__3822__auto____9282
          }
        }())) {
          a__9278[i__9280] = cljs.core.first.call(null, s__9281);
          var G__9285 = i__9280 + 1;
          var G__9286 = cljs.core.next.call(null, s__9281);
          i__9280 = G__9285;
          s__9281 = G__9286;
          continue
        }else {
          return a__9278
        }
        break
      }
    }else {
      var n__2527__auto____9283 = size;
      var i__9284 = 0;
      while(true) {
        if(i__9284 < n__2527__auto____9283) {
          a__9278[i__9284] = init_val_or_seq;
          var G__9287 = i__9284 + 1;
          i__9284 = G__9287;
          continue
        }else {
        }
        break
      }
      return a__9278
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__9295 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9296 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9297 = 0;
      var s__9298 = s__9296;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9299 = s__9298;
          if(and__3822__auto____9299) {
            return i__9297 < size
          }else {
            return and__3822__auto____9299
          }
        }())) {
          a__9295[i__9297] = cljs.core.first.call(null, s__9298);
          var G__9302 = i__9297 + 1;
          var G__9303 = cljs.core.next.call(null, s__9298);
          i__9297 = G__9302;
          s__9298 = G__9303;
          continue
        }else {
          return a__9295
        }
        break
      }
    }else {
      var n__2527__auto____9300 = size;
      var i__9301 = 0;
      while(true) {
        if(i__9301 < n__2527__auto____9300) {
          a__9295[i__9301] = init_val_or_seq;
          var G__9304 = i__9301 + 1;
          i__9301 = G__9304;
          continue
        }else {
        }
        break
      }
      return a__9295
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__9312 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9313 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9314 = 0;
      var s__9315 = s__9313;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9316 = s__9315;
          if(and__3822__auto____9316) {
            return i__9314 < size
          }else {
            return and__3822__auto____9316
          }
        }())) {
          a__9312[i__9314] = cljs.core.first.call(null, s__9315);
          var G__9319 = i__9314 + 1;
          var G__9320 = cljs.core.next.call(null, s__9315);
          i__9314 = G__9319;
          s__9315 = G__9320;
          continue
        }else {
          return a__9312
        }
        break
      }
    }else {
      var n__2527__auto____9317 = size;
      var i__9318 = 0;
      while(true) {
        if(i__9318 < n__2527__auto____9317) {
          a__9312[i__9318] = init_val_or_seq;
          var G__9321 = i__9318 + 1;
          i__9318 = G__9321;
          continue
        }else {
        }
        break
      }
      return a__9312
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__9326 = s;
    var i__9327 = n;
    var sum__9328 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____9329 = i__9327 > 0;
        if(and__3822__auto____9329) {
          return cljs.core.seq.call(null, s__9326)
        }else {
          return and__3822__auto____9329
        }
      }())) {
        var G__9330 = cljs.core.next.call(null, s__9326);
        var G__9331 = i__9327 - 1;
        var G__9332 = sum__9328 + 1;
        s__9326 = G__9330;
        i__9327 = G__9331;
        sum__9328 = G__9332;
        continue
      }else {
        return sum__9328
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__9337 = cljs.core.seq.call(null, x);
      if(s__9337) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9337)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__9337), concat.call(null, cljs.core.chunk_rest.call(null, s__9337), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__9337), concat.call(null, cljs.core.rest.call(null, s__9337), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__9341__delegate = function(x, y, zs) {
      var cat__9340 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__9339 = cljs.core.seq.call(null, xys);
          if(xys__9339) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__9339)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__9339), cat.call(null, cljs.core.chunk_rest.call(null, xys__9339), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__9339), cat.call(null, cljs.core.rest.call(null, xys__9339), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__9340.call(null, concat.call(null, x, y), zs)
    };
    var G__9341 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9341__delegate.call(this, x, y, zs)
    };
    G__9341.cljs$lang$maxFixedArity = 2;
    G__9341.cljs$lang$applyTo = function(arglist__9342) {
      var x = cljs.core.first(arglist__9342);
      var y = cljs.core.first(cljs.core.next(arglist__9342));
      var zs = cljs.core.rest(cljs.core.next(arglist__9342));
      return G__9341__delegate(x, y, zs)
    };
    G__9341.cljs$lang$arity$variadic = G__9341__delegate;
    return G__9341
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__9343__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__9343 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9343__delegate.call(this, a, b, c, d, more)
    };
    G__9343.cljs$lang$maxFixedArity = 4;
    G__9343.cljs$lang$applyTo = function(arglist__9344) {
      var a = cljs.core.first(arglist__9344);
      var b = cljs.core.first(cljs.core.next(arglist__9344));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9344)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9344))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9344))));
      return G__9343__delegate(a, b, c, d, more)
    };
    G__9343.cljs$lang$arity$variadic = G__9343__delegate;
    return G__9343
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__9386 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__9387 = cljs.core._first.call(null, args__9386);
    var args__9388 = cljs.core._rest.call(null, args__9386);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__9387)
      }else {
        return f.call(null, a__9387)
      }
    }else {
      var b__9389 = cljs.core._first.call(null, args__9388);
      var args__9390 = cljs.core._rest.call(null, args__9388);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__9387, b__9389)
        }else {
          return f.call(null, a__9387, b__9389)
        }
      }else {
        var c__9391 = cljs.core._first.call(null, args__9390);
        var args__9392 = cljs.core._rest.call(null, args__9390);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__9387, b__9389, c__9391)
          }else {
            return f.call(null, a__9387, b__9389, c__9391)
          }
        }else {
          var d__9393 = cljs.core._first.call(null, args__9392);
          var args__9394 = cljs.core._rest.call(null, args__9392);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__9387, b__9389, c__9391, d__9393)
            }else {
              return f.call(null, a__9387, b__9389, c__9391, d__9393)
            }
          }else {
            var e__9395 = cljs.core._first.call(null, args__9394);
            var args__9396 = cljs.core._rest.call(null, args__9394);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__9387, b__9389, c__9391, d__9393, e__9395)
              }else {
                return f.call(null, a__9387, b__9389, c__9391, d__9393, e__9395)
              }
            }else {
              var f__9397 = cljs.core._first.call(null, args__9396);
              var args__9398 = cljs.core._rest.call(null, args__9396);
              if(argc === 6) {
                if(f__9397.cljs$lang$arity$6) {
                  return f__9397.cljs$lang$arity$6(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397)
                }else {
                  return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397)
                }
              }else {
                var g__9399 = cljs.core._first.call(null, args__9398);
                var args__9400 = cljs.core._rest.call(null, args__9398);
                if(argc === 7) {
                  if(f__9397.cljs$lang$arity$7) {
                    return f__9397.cljs$lang$arity$7(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399)
                  }else {
                    return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399)
                  }
                }else {
                  var h__9401 = cljs.core._first.call(null, args__9400);
                  var args__9402 = cljs.core._rest.call(null, args__9400);
                  if(argc === 8) {
                    if(f__9397.cljs$lang$arity$8) {
                      return f__9397.cljs$lang$arity$8(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401)
                    }else {
                      return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401)
                    }
                  }else {
                    var i__9403 = cljs.core._first.call(null, args__9402);
                    var args__9404 = cljs.core._rest.call(null, args__9402);
                    if(argc === 9) {
                      if(f__9397.cljs$lang$arity$9) {
                        return f__9397.cljs$lang$arity$9(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403)
                      }else {
                        return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403)
                      }
                    }else {
                      var j__9405 = cljs.core._first.call(null, args__9404);
                      var args__9406 = cljs.core._rest.call(null, args__9404);
                      if(argc === 10) {
                        if(f__9397.cljs$lang$arity$10) {
                          return f__9397.cljs$lang$arity$10(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405)
                        }else {
                          return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405)
                        }
                      }else {
                        var k__9407 = cljs.core._first.call(null, args__9406);
                        var args__9408 = cljs.core._rest.call(null, args__9406);
                        if(argc === 11) {
                          if(f__9397.cljs$lang$arity$11) {
                            return f__9397.cljs$lang$arity$11(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407)
                          }else {
                            return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407)
                          }
                        }else {
                          var l__9409 = cljs.core._first.call(null, args__9408);
                          var args__9410 = cljs.core._rest.call(null, args__9408);
                          if(argc === 12) {
                            if(f__9397.cljs$lang$arity$12) {
                              return f__9397.cljs$lang$arity$12(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409)
                            }else {
                              return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409)
                            }
                          }else {
                            var m__9411 = cljs.core._first.call(null, args__9410);
                            var args__9412 = cljs.core._rest.call(null, args__9410);
                            if(argc === 13) {
                              if(f__9397.cljs$lang$arity$13) {
                                return f__9397.cljs$lang$arity$13(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411)
                              }else {
                                return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411)
                              }
                            }else {
                              var n__9413 = cljs.core._first.call(null, args__9412);
                              var args__9414 = cljs.core._rest.call(null, args__9412);
                              if(argc === 14) {
                                if(f__9397.cljs$lang$arity$14) {
                                  return f__9397.cljs$lang$arity$14(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413)
                                }else {
                                  return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413)
                                }
                              }else {
                                var o__9415 = cljs.core._first.call(null, args__9414);
                                var args__9416 = cljs.core._rest.call(null, args__9414);
                                if(argc === 15) {
                                  if(f__9397.cljs$lang$arity$15) {
                                    return f__9397.cljs$lang$arity$15(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415)
                                  }else {
                                    return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415)
                                  }
                                }else {
                                  var p__9417 = cljs.core._first.call(null, args__9416);
                                  var args__9418 = cljs.core._rest.call(null, args__9416);
                                  if(argc === 16) {
                                    if(f__9397.cljs$lang$arity$16) {
                                      return f__9397.cljs$lang$arity$16(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417)
                                    }else {
                                      return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417)
                                    }
                                  }else {
                                    var q__9419 = cljs.core._first.call(null, args__9418);
                                    var args__9420 = cljs.core._rest.call(null, args__9418);
                                    if(argc === 17) {
                                      if(f__9397.cljs$lang$arity$17) {
                                        return f__9397.cljs$lang$arity$17(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419)
                                      }else {
                                        return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419)
                                      }
                                    }else {
                                      var r__9421 = cljs.core._first.call(null, args__9420);
                                      var args__9422 = cljs.core._rest.call(null, args__9420);
                                      if(argc === 18) {
                                        if(f__9397.cljs$lang$arity$18) {
                                          return f__9397.cljs$lang$arity$18(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421)
                                        }else {
                                          return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421)
                                        }
                                      }else {
                                        var s__9423 = cljs.core._first.call(null, args__9422);
                                        var args__9424 = cljs.core._rest.call(null, args__9422);
                                        if(argc === 19) {
                                          if(f__9397.cljs$lang$arity$19) {
                                            return f__9397.cljs$lang$arity$19(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421, s__9423)
                                          }else {
                                            return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421, s__9423)
                                          }
                                        }else {
                                          var t__9425 = cljs.core._first.call(null, args__9424);
                                          var args__9426 = cljs.core._rest.call(null, args__9424);
                                          if(argc === 20) {
                                            if(f__9397.cljs$lang$arity$20) {
                                              return f__9397.cljs$lang$arity$20(a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421, s__9423, t__9425)
                                            }else {
                                              return f__9397.call(null, a__9387, b__9389, c__9391, d__9393, e__9395, f__9397, g__9399, h__9401, i__9403, j__9405, k__9407, l__9409, m__9411, n__9413, o__9415, p__9417, q__9419, r__9421, s__9423, t__9425)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9441 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9442 = cljs.core.bounded_count.call(null, args, fixed_arity__9441 + 1);
      if(bc__9442 <= fixed_arity__9441) {
        return cljs.core.apply_to.call(null, f, bc__9442, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9443 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9444 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9445 = cljs.core.bounded_count.call(null, arglist__9443, fixed_arity__9444 + 1);
      if(bc__9445 <= fixed_arity__9444) {
        return cljs.core.apply_to.call(null, f, bc__9445, arglist__9443)
      }else {
        return f.cljs$lang$applyTo(arglist__9443)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9443))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9446 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9447 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9448 = cljs.core.bounded_count.call(null, arglist__9446, fixed_arity__9447 + 1);
      if(bc__9448 <= fixed_arity__9447) {
        return cljs.core.apply_to.call(null, f, bc__9448, arglist__9446)
      }else {
        return f.cljs$lang$applyTo(arglist__9446)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9446))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9449 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9450 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9451 = cljs.core.bounded_count.call(null, arglist__9449, fixed_arity__9450 + 1);
      if(bc__9451 <= fixed_arity__9450) {
        return cljs.core.apply_to.call(null, f, bc__9451, arglist__9449)
      }else {
        return f.cljs$lang$applyTo(arglist__9449)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9449))
    }
  };
  var apply__6 = function() {
    var G__9455__delegate = function(f, a, b, c, d, args) {
      var arglist__9452 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9453 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__9454 = cljs.core.bounded_count.call(null, arglist__9452, fixed_arity__9453 + 1);
        if(bc__9454 <= fixed_arity__9453) {
          return cljs.core.apply_to.call(null, f, bc__9454, arglist__9452)
        }else {
          return f.cljs$lang$applyTo(arglist__9452)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9452))
      }
    };
    var G__9455 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9455__delegate.call(this, f, a, b, c, d, args)
    };
    G__9455.cljs$lang$maxFixedArity = 5;
    G__9455.cljs$lang$applyTo = function(arglist__9456) {
      var f = cljs.core.first(arglist__9456);
      var a = cljs.core.first(cljs.core.next(arglist__9456));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9456)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9456))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9456)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9456)))));
      return G__9455__delegate(f, a, b, c, d, args)
    };
    G__9455.cljs$lang$arity$variadic = G__9455__delegate;
    return G__9455
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9457) {
    var obj = cljs.core.first(arglist__9457);
    var f = cljs.core.first(cljs.core.next(arglist__9457));
    var args = cljs.core.rest(cljs.core.next(arglist__9457));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9458__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9458 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9458__delegate.call(this, x, y, more)
    };
    G__9458.cljs$lang$maxFixedArity = 2;
    G__9458.cljs$lang$applyTo = function(arglist__9459) {
      var x = cljs.core.first(arglist__9459);
      var y = cljs.core.first(cljs.core.next(arglist__9459));
      var more = cljs.core.rest(cljs.core.next(arglist__9459));
      return G__9458__delegate(x, y, more)
    };
    G__9458.cljs$lang$arity$variadic = G__9458__delegate;
    return G__9458
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9460 = pred;
        var G__9461 = cljs.core.next.call(null, coll);
        pred = G__9460;
        coll = G__9461;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9463 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9463)) {
        return or__3824__auto____9463
      }else {
        var G__9464 = pred;
        var G__9465 = cljs.core.next.call(null, coll);
        pred = G__9464;
        coll = G__9465;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9466 = null;
    var G__9466__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9466__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9466__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9466__3 = function() {
      var G__9467__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9467 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9467__delegate.call(this, x, y, zs)
      };
      G__9467.cljs$lang$maxFixedArity = 2;
      G__9467.cljs$lang$applyTo = function(arglist__9468) {
        var x = cljs.core.first(arglist__9468);
        var y = cljs.core.first(cljs.core.next(arglist__9468));
        var zs = cljs.core.rest(cljs.core.next(arglist__9468));
        return G__9467__delegate(x, y, zs)
      };
      G__9467.cljs$lang$arity$variadic = G__9467__delegate;
      return G__9467
    }();
    G__9466 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9466__0.call(this);
        case 1:
          return G__9466__1.call(this, x);
        case 2:
          return G__9466__2.call(this, x, y);
        default:
          return G__9466__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9466.cljs$lang$maxFixedArity = 2;
    G__9466.cljs$lang$applyTo = G__9466__3.cljs$lang$applyTo;
    return G__9466
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9469__delegate = function(args) {
      return x
    };
    var G__9469 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9469__delegate.call(this, args)
    };
    G__9469.cljs$lang$maxFixedArity = 0;
    G__9469.cljs$lang$applyTo = function(arglist__9470) {
      var args = cljs.core.seq(arglist__9470);
      return G__9469__delegate(args)
    };
    G__9469.cljs$lang$arity$variadic = G__9469__delegate;
    return G__9469
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9477 = null;
      var G__9477__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9477__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9477__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9477__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9477__4 = function() {
        var G__9478__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9478 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9478__delegate.call(this, x, y, z, args)
        };
        G__9478.cljs$lang$maxFixedArity = 3;
        G__9478.cljs$lang$applyTo = function(arglist__9479) {
          var x = cljs.core.first(arglist__9479);
          var y = cljs.core.first(cljs.core.next(arglist__9479));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9479)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9479)));
          return G__9478__delegate(x, y, z, args)
        };
        G__9478.cljs$lang$arity$variadic = G__9478__delegate;
        return G__9478
      }();
      G__9477 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9477__0.call(this);
          case 1:
            return G__9477__1.call(this, x);
          case 2:
            return G__9477__2.call(this, x, y);
          case 3:
            return G__9477__3.call(this, x, y, z);
          default:
            return G__9477__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9477.cljs$lang$maxFixedArity = 3;
      G__9477.cljs$lang$applyTo = G__9477__4.cljs$lang$applyTo;
      return G__9477
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9480 = null;
      var G__9480__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9480__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9480__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9480__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9480__4 = function() {
        var G__9481__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9481 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9481__delegate.call(this, x, y, z, args)
        };
        G__9481.cljs$lang$maxFixedArity = 3;
        G__9481.cljs$lang$applyTo = function(arglist__9482) {
          var x = cljs.core.first(arglist__9482);
          var y = cljs.core.first(cljs.core.next(arglist__9482));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9482)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9482)));
          return G__9481__delegate(x, y, z, args)
        };
        G__9481.cljs$lang$arity$variadic = G__9481__delegate;
        return G__9481
      }();
      G__9480 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9480__0.call(this);
          case 1:
            return G__9480__1.call(this, x);
          case 2:
            return G__9480__2.call(this, x, y);
          case 3:
            return G__9480__3.call(this, x, y, z);
          default:
            return G__9480__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9480.cljs$lang$maxFixedArity = 3;
      G__9480.cljs$lang$applyTo = G__9480__4.cljs$lang$applyTo;
      return G__9480
    }()
  };
  var comp__4 = function() {
    var G__9483__delegate = function(f1, f2, f3, fs) {
      var fs__9474 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9484__delegate = function(args) {
          var ret__9475 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9474), args);
          var fs__9476 = cljs.core.next.call(null, fs__9474);
          while(true) {
            if(fs__9476) {
              var G__9485 = cljs.core.first.call(null, fs__9476).call(null, ret__9475);
              var G__9486 = cljs.core.next.call(null, fs__9476);
              ret__9475 = G__9485;
              fs__9476 = G__9486;
              continue
            }else {
              return ret__9475
            }
            break
          }
        };
        var G__9484 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9484__delegate.call(this, args)
        };
        G__9484.cljs$lang$maxFixedArity = 0;
        G__9484.cljs$lang$applyTo = function(arglist__9487) {
          var args = cljs.core.seq(arglist__9487);
          return G__9484__delegate(args)
        };
        G__9484.cljs$lang$arity$variadic = G__9484__delegate;
        return G__9484
      }()
    };
    var G__9483 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9483__delegate.call(this, f1, f2, f3, fs)
    };
    G__9483.cljs$lang$maxFixedArity = 3;
    G__9483.cljs$lang$applyTo = function(arglist__9488) {
      var f1 = cljs.core.first(arglist__9488);
      var f2 = cljs.core.first(cljs.core.next(arglist__9488));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9488)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9488)));
      return G__9483__delegate(f1, f2, f3, fs)
    };
    G__9483.cljs$lang$arity$variadic = G__9483__delegate;
    return G__9483
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9489__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9489 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9489__delegate.call(this, args)
      };
      G__9489.cljs$lang$maxFixedArity = 0;
      G__9489.cljs$lang$applyTo = function(arglist__9490) {
        var args = cljs.core.seq(arglist__9490);
        return G__9489__delegate(args)
      };
      G__9489.cljs$lang$arity$variadic = G__9489__delegate;
      return G__9489
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9491__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9491 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9491__delegate.call(this, args)
      };
      G__9491.cljs$lang$maxFixedArity = 0;
      G__9491.cljs$lang$applyTo = function(arglist__9492) {
        var args = cljs.core.seq(arglist__9492);
        return G__9491__delegate(args)
      };
      G__9491.cljs$lang$arity$variadic = G__9491__delegate;
      return G__9491
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9493__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9493 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9493__delegate.call(this, args)
      };
      G__9493.cljs$lang$maxFixedArity = 0;
      G__9493.cljs$lang$applyTo = function(arglist__9494) {
        var args = cljs.core.seq(arglist__9494);
        return G__9493__delegate(args)
      };
      G__9493.cljs$lang$arity$variadic = G__9493__delegate;
      return G__9493
    }()
  };
  var partial__5 = function() {
    var G__9495__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9496__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9496 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9496__delegate.call(this, args)
        };
        G__9496.cljs$lang$maxFixedArity = 0;
        G__9496.cljs$lang$applyTo = function(arglist__9497) {
          var args = cljs.core.seq(arglist__9497);
          return G__9496__delegate(args)
        };
        G__9496.cljs$lang$arity$variadic = G__9496__delegate;
        return G__9496
      }()
    };
    var G__9495 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9495__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9495.cljs$lang$maxFixedArity = 4;
    G__9495.cljs$lang$applyTo = function(arglist__9498) {
      var f = cljs.core.first(arglist__9498);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9498));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9498)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9498))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9498))));
      return G__9495__delegate(f, arg1, arg2, arg3, more)
    };
    G__9495.cljs$lang$arity$variadic = G__9495__delegate;
    return G__9495
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9499 = null;
      var G__9499__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9499__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9499__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9499__4 = function() {
        var G__9500__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9500 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9500__delegate.call(this, a, b, c, ds)
        };
        G__9500.cljs$lang$maxFixedArity = 3;
        G__9500.cljs$lang$applyTo = function(arglist__9501) {
          var a = cljs.core.first(arglist__9501);
          var b = cljs.core.first(cljs.core.next(arglist__9501));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9501)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9501)));
          return G__9500__delegate(a, b, c, ds)
        };
        G__9500.cljs$lang$arity$variadic = G__9500__delegate;
        return G__9500
      }();
      G__9499 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9499__1.call(this, a);
          case 2:
            return G__9499__2.call(this, a, b);
          case 3:
            return G__9499__3.call(this, a, b, c);
          default:
            return G__9499__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9499.cljs$lang$maxFixedArity = 3;
      G__9499.cljs$lang$applyTo = G__9499__4.cljs$lang$applyTo;
      return G__9499
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9502 = null;
      var G__9502__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9502__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9502__4 = function() {
        var G__9503__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9503 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9503__delegate.call(this, a, b, c, ds)
        };
        G__9503.cljs$lang$maxFixedArity = 3;
        G__9503.cljs$lang$applyTo = function(arglist__9504) {
          var a = cljs.core.first(arglist__9504);
          var b = cljs.core.first(cljs.core.next(arglist__9504));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9504)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9504)));
          return G__9503__delegate(a, b, c, ds)
        };
        G__9503.cljs$lang$arity$variadic = G__9503__delegate;
        return G__9503
      }();
      G__9502 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9502__2.call(this, a, b);
          case 3:
            return G__9502__3.call(this, a, b, c);
          default:
            return G__9502__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9502.cljs$lang$maxFixedArity = 3;
      G__9502.cljs$lang$applyTo = G__9502__4.cljs$lang$applyTo;
      return G__9502
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9505 = null;
      var G__9505__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9505__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9505__4 = function() {
        var G__9506__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9506 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9506__delegate.call(this, a, b, c, ds)
        };
        G__9506.cljs$lang$maxFixedArity = 3;
        G__9506.cljs$lang$applyTo = function(arglist__9507) {
          var a = cljs.core.first(arglist__9507);
          var b = cljs.core.first(cljs.core.next(arglist__9507));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9507)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9507)));
          return G__9506__delegate(a, b, c, ds)
        };
        G__9506.cljs$lang$arity$variadic = G__9506__delegate;
        return G__9506
      }();
      G__9505 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9505__2.call(this, a, b);
          case 3:
            return G__9505__3.call(this, a, b, c);
          default:
            return G__9505__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9505.cljs$lang$maxFixedArity = 3;
      G__9505.cljs$lang$applyTo = G__9505__4.cljs$lang$applyTo;
      return G__9505
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9523 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9531 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9531) {
        var s__9532 = temp__3974__auto____9531;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9532)) {
          var c__9533 = cljs.core.chunk_first.call(null, s__9532);
          var size__9534 = cljs.core.count.call(null, c__9533);
          var b__9535 = cljs.core.chunk_buffer.call(null, size__9534);
          var n__2527__auto____9536 = size__9534;
          var i__9537 = 0;
          while(true) {
            if(i__9537 < n__2527__auto____9536) {
              cljs.core.chunk_append.call(null, b__9535, f.call(null, idx + i__9537, cljs.core._nth.call(null, c__9533, i__9537)));
              var G__9538 = i__9537 + 1;
              i__9537 = G__9538;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9535), mapi.call(null, idx + size__9534, cljs.core.chunk_rest.call(null, s__9532)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9532)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9532)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9523.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9548 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9548) {
      var s__9549 = temp__3974__auto____9548;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9549)) {
        var c__9550 = cljs.core.chunk_first.call(null, s__9549);
        var size__9551 = cljs.core.count.call(null, c__9550);
        var b__9552 = cljs.core.chunk_buffer.call(null, size__9551);
        var n__2527__auto____9553 = size__9551;
        var i__9554 = 0;
        while(true) {
          if(i__9554 < n__2527__auto____9553) {
            var x__9555 = f.call(null, cljs.core._nth.call(null, c__9550, i__9554));
            if(x__9555 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9552, x__9555)
            }
            var G__9557 = i__9554 + 1;
            i__9554 = G__9557;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9552), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9549)))
      }else {
        var x__9556 = f.call(null, cljs.core.first.call(null, s__9549));
        if(x__9556 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9549))
        }else {
          return cljs.core.cons.call(null, x__9556, keep.call(null, f, cljs.core.rest.call(null, s__9549)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9583 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9593 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9593) {
        var s__9594 = temp__3974__auto____9593;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9594)) {
          var c__9595 = cljs.core.chunk_first.call(null, s__9594);
          var size__9596 = cljs.core.count.call(null, c__9595);
          var b__9597 = cljs.core.chunk_buffer.call(null, size__9596);
          var n__2527__auto____9598 = size__9596;
          var i__9599 = 0;
          while(true) {
            if(i__9599 < n__2527__auto____9598) {
              var x__9600 = f.call(null, idx + i__9599, cljs.core._nth.call(null, c__9595, i__9599));
              if(x__9600 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9597, x__9600)
              }
              var G__9602 = i__9599 + 1;
              i__9599 = G__9602;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9597), keepi.call(null, idx + size__9596, cljs.core.chunk_rest.call(null, s__9594)))
        }else {
          var x__9601 = f.call(null, idx, cljs.core.first.call(null, s__9594));
          if(x__9601 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9594))
          }else {
            return cljs.core.cons.call(null, x__9601, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9594)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9583.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9688 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9688)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9688
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9689 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9689)) {
            var and__3822__auto____9690 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9690)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9690
            }
          }else {
            return and__3822__auto____9689
          }
        }())
      };
      var ep1__4 = function() {
        var G__9759__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9691 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9691)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9691
            }
          }())
        };
        var G__9759 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9759__delegate.call(this, x, y, z, args)
        };
        G__9759.cljs$lang$maxFixedArity = 3;
        G__9759.cljs$lang$applyTo = function(arglist__9760) {
          var x = cljs.core.first(arglist__9760);
          var y = cljs.core.first(cljs.core.next(arglist__9760));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9760)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9760)));
          return G__9759__delegate(x, y, z, args)
        };
        G__9759.cljs$lang$arity$variadic = G__9759__delegate;
        return G__9759
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9703 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9703)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9703
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9704 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9704)) {
            var and__3822__auto____9705 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9705)) {
              var and__3822__auto____9706 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9706)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9706
              }
            }else {
              return and__3822__auto____9705
            }
          }else {
            return and__3822__auto____9704
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9707 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9707)) {
            var and__3822__auto____9708 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9708)) {
              var and__3822__auto____9709 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9709)) {
                var and__3822__auto____9710 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9710)) {
                  var and__3822__auto____9711 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9711)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9711
                  }
                }else {
                  return and__3822__auto____9710
                }
              }else {
                return and__3822__auto____9709
              }
            }else {
              return and__3822__auto____9708
            }
          }else {
            return and__3822__auto____9707
          }
        }())
      };
      var ep2__4 = function() {
        var G__9761__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9712 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9712)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9558_SHARP_) {
                var and__3822__auto____9713 = p1.call(null, p1__9558_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9713)) {
                  return p2.call(null, p1__9558_SHARP_)
                }else {
                  return and__3822__auto____9713
                }
              }, args)
            }else {
              return and__3822__auto____9712
            }
          }())
        };
        var G__9761 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9761__delegate.call(this, x, y, z, args)
        };
        G__9761.cljs$lang$maxFixedArity = 3;
        G__9761.cljs$lang$applyTo = function(arglist__9762) {
          var x = cljs.core.first(arglist__9762);
          var y = cljs.core.first(cljs.core.next(arglist__9762));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9762)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9762)));
          return G__9761__delegate(x, y, z, args)
        };
        G__9761.cljs$lang$arity$variadic = G__9761__delegate;
        return G__9761
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9732 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9732)) {
            var and__3822__auto____9733 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9733)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9733
            }
          }else {
            return and__3822__auto____9732
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9734 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9734)) {
            var and__3822__auto____9735 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9735)) {
              var and__3822__auto____9736 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9736)) {
                var and__3822__auto____9737 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9737)) {
                  var and__3822__auto____9738 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9738)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9738
                  }
                }else {
                  return and__3822__auto____9737
                }
              }else {
                return and__3822__auto____9736
              }
            }else {
              return and__3822__auto____9735
            }
          }else {
            return and__3822__auto____9734
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9739 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9739)) {
            var and__3822__auto____9740 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9740)) {
              var and__3822__auto____9741 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9741)) {
                var and__3822__auto____9742 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9742)) {
                  var and__3822__auto____9743 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9743)) {
                    var and__3822__auto____9744 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9744)) {
                      var and__3822__auto____9745 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9745)) {
                        var and__3822__auto____9746 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9746)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9746
                        }
                      }else {
                        return and__3822__auto____9745
                      }
                    }else {
                      return and__3822__auto____9744
                    }
                  }else {
                    return and__3822__auto____9743
                  }
                }else {
                  return and__3822__auto____9742
                }
              }else {
                return and__3822__auto____9741
              }
            }else {
              return and__3822__auto____9740
            }
          }else {
            return and__3822__auto____9739
          }
        }())
      };
      var ep3__4 = function() {
        var G__9763__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9747 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9747)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9559_SHARP_) {
                var and__3822__auto____9748 = p1.call(null, p1__9559_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9748)) {
                  var and__3822__auto____9749 = p2.call(null, p1__9559_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9749)) {
                    return p3.call(null, p1__9559_SHARP_)
                  }else {
                    return and__3822__auto____9749
                  }
                }else {
                  return and__3822__auto____9748
                }
              }, args)
            }else {
              return and__3822__auto____9747
            }
          }())
        };
        var G__9763 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9763__delegate.call(this, x, y, z, args)
        };
        G__9763.cljs$lang$maxFixedArity = 3;
        G__9763.cljs$lang$applyTo = function(arglist__9764) {
          var x = cljs.core.first(arglist__9764);
          var y = cljs.core.first(cljs.core.next(arglist__9764));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9764)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9764)));
          return G__9763__delegate(x, y, z, args)
        };
        G__9763.cljs$lang$arity$variadic = G__9763__delegate;
        return G__9763
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9765__delegate = function(p1, p2, p3, ps) {
      var ps__9750 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9560_SHARP_) {
            return p1__9560_SHARP_.call(null, x)
          }, ps__9750)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9561_SHARP_) {
            var and__3822__auto____9755 = p1__9561_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9755)) {
              return p1__9561_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9755
            }
          }, ps__9750)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9562_SHARP_) {
            var and__3822__auto____9756 = p1__9562_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9756)) {
              var and__3822__auto____9757 = p1__9562_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9757)) {
                return p1__9562_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9757
              }
            }else {
              return and__3822__auto____9756
            }
          }, ps__9750)
        };
        var epn__4 = function() {
          var G__9766__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9758 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9758)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9563_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9563_SHARP_, args)
                }, ps__9750)
              }else {
                return and__3822__auto____9758
              }
            }())
          };
          var G__9766 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9766__delegate.call(this, x, y, z, args)
          };
          G__9766.cljs$lang$maxFixedArity = 3;
          G__9766.cljs$lang$applyTo = function(arglist__9767) {
            var x = cljs.core.first(arglist__9767);
            var y = cljs.core.first(cljs.core.next(arglist__9767));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9767)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9767)));
            return G__9766__delegate(x, y, z, args)
          };
          G__9766.cljs$lang$arity$variadic = G__9766__delegate;
          return G__9766
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9765 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9765__delegate.call(this, p1, p2, p3, ps)
    };
    G__9765.cljs$lang$maxFixedArity = 3;
    G__9765.cljs$lang$applyTo = function(arglist__9768) {
      var p1 = cljs.core.first(arglist__9768);
      var p2 = cljs.core.first(cljs.core.next(arglist__9768));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9768)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9768)));
      return G__9765__delegate(p1, p2, p3, ps)
    };
    G__9765.cljs$lang$arity$variadic = G__9765__delegate;
    return G__9765
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9849 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9849)) {
          return or__3824__auto____9849
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9850 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9850)) {
          return or__3824__auto____9850
        }else {
          var or__3824__auto____9851 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9851)) {
            return or__3824__auto____9851
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9920__delegate = function(x, y, z, args) {
          var or__3824__auto____9852 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9852)) {
            return or__3824__auto____9852
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9920 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9920__delegate.call(this, x, y, z, args)
        };
        G__9920.cljs$lang$maxFixedArity = 3;
        G__9920.cljs$lang$applyTo = function(arglist__9921) {
          var x = cljs.core.first(arglist__9921);
          var y = cljs.core.first(cljs.core.next(arglist__9921));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9921)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9921)));
          return G__9920__delegate(x, y, z, args)
        };
        G__9920.cljs$lang$arity$variadic = G__9920__delegate;
        return G__9920
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9864 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9864)) {
          return or__3824__auto____9864
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9865 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9865)) {
          return or__3824__auto____9865
        }else {
          var or__3824__auto____9866 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9866)) {
            return or__3824__auto____9866
          }else {
            var or__3824__auto____9867 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9867)) {
              return or__3824__auto____9867
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9868 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9868)) {
          return or__3824__auto____9868
        }else {
          var or__3824__auto____9869 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9869)) {
            return or__3824__auto____9869
          }else {
            var or__3824__auto____9870 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9870)) {
              return or__3824__auto____9870
            }else {
              var or__3824__auto____9871 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9871)) {
                return or__3824__auto____9871
              }else {
                var or__3824__auto____9872 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9872)) {
                  return or__3824__auto____9872
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9922__delegate = function(x, y, z, args) {
          var or__3824__auto____9873 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9873)) {
            return or__3824__auto____9873
          }else {
            return cljs.core.some.call(null, function(p1__9603_SHARP_) {
              var or__3824__auto____9874 = p1.call(null, p1__9603_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9874)) {
                return or__3824__auto____9874
              }else {
                return p2.call(null, p1__9603_SHARP_)
              }
            }, args)
          }
        };
        var G__9922 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9922__delegate.call(this, x, y, z, args)
        };
        G__9922.cljs$lang$maxFixedArity = 3;
        G__9922.cljs$lang$applyTo = function(arglist__9923) {
          var x = cljs.core.first(arglist__9923);
          var y = cljs.core.first(cljs.core.next(arglist__9923));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9923)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9923)));
          return G__9922__delegate(x, y, z, args)
        };
        G__9922.cljs$lang$arity$variadic = G__9922__delegate;
        return G__9922
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9893 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9893)) {
          return or__3824__auto____9893
        }else {
          var or__3824__auto____9894 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9894)) {
            return or__3824__auto____9894
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9895 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9895)) {
          return or__3824__auto____9895
        }else {
          var or__3824__auto____9896 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9896)) {
            return or__3824__auto____9896
          }else {
            var or__3824__auto____9897 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9897)) {
              return or__3824__auto____9897
            }else {
              var or__3824__auto____9898 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9898)) {
                return or__3824__auto____9898
              }else {
                var or__3824__auto____9899 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9899)) {
                  return or__3824__auto____9899
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9900 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9900)) {
          return or__3824__auto____9900
        }else {
          var or__3824__auto____9901 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9901)) {
            return or__3824__auto____9901
          }else {
            var or__3824__auto____9902 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9902)) {
              return or__3824__auto____9902
            }else {
              var or__3824__auto____9903 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9903)) {
                return or__3824__auto____9903
              }else {
                var or__3824__auto____9904 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9904)) {
                  return or__3824__auto____9904
                }else {
                  var or__3824__auto____9905 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9905)) {
                    return or__3824__auto____9905
                  }else {
                    var or__3824__auto____9906 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9906)) {
                      return or__3824__auto____9906
                    }else {
                      var or__3824__auto____9907 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9907)) {
                        return or__3824__auto____9907
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9924__delegate = function(x, y, z, args) {
          var or__3824__auto____9908 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9908)) {
            return or__3824__auto____9908
          }else {
            return cljs.core.some.call(null, function(p1__9604_SHARP_) {
              var or__3824__auto____9909 = p1.call(null, p1__9604_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9909)) {
                return or__3824__auto____9909
              }else {
                var or__3824__auto____9910 = p2.call(null, p1__9604_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9910)) {
                  return or__3824__auto____9910
                }else {
                  return p3.call(null, p1__9604_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9924 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9924__delegate.call(this, x, y, z, args)
        };
        G__9924.cljs$lang$maxFixedArity = 3;
        G__9924.cljs$lang$applyTo = function(arglist__9925) {
          var x = cljs.core.first(arglist__9925);
          var y = cljs.core.first(cljs.core.next(arglist__9925));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9925)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9925)));
          return G__9924__delegate(x, y, z, args)
        };
        G__9924.cljs$lang$arity$variadic = G__9924__delegate;
        return G__9924
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9926__delegate = function(p1, p2, p3, ps) {
      var ps__9911 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9605_SHARP_) {
            return p1__9605_SHARP_.call(null, x)
          }, ps__9911)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9606_SHARP_) {
            var or__3824__auto____9916 = p1__9606_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9916)) {
              return or__3824__auto____9916
            }else {
              return p1__9606_SHARP_.call(null, y)
            }
          }, ps__9911)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9607_SHARP_) {
            var or__3824__auto____9917 = p1__9607_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9917)) {
              return or__3824__auto____9917
            }else {
              var or__3824__auto____9918 = p1__9607_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9918)) {
                return or__3824__auto____9918
              }else {
                return p1__9607_SHARP_.call(null, z)
              }
            }
          }, ps__9911)
        };
        var spn__4 = function() {
          var G__9927__delegate = function(x, y, z, args) {
            var or__3824__auto____9919 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9919)) {
              return or__3824__auto____9919
            }else {
              return cljs.core.some.call(null, function(p1__9608_SHARP_) {
                return cljs.core.some.call(null, p1__9608_SHARP_, args)
              }, ps__9911)
            }
          };
          var G__9927 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9927__delegate.call(this, x, y, z, args)
          };
          G__9927.cljs$lang$maxFixedArity = 3;
          G__9927.cljs$lang$applyTo = function(arglist__9928) {
            var x = cljs.core.first(arglist__9928);
            var y = cljs.core.first(cljs.core.next(arglist__9928));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9928)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9928)));
            return G__9927__delegate(x, y, z, args)
          };
          G__9927.cljs$lang$arity$variadic = G__9927__delegate;
          return G__9927
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9926 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9926__delegate.call(this, p1, p2, p3, ps)
    };
    G__9926.cljs$lang$maxFixedArity = 3;
    G__9926.cljs$lang$applyTo = function(arglist__9929) {
      var p1 = cljs.core.first(arglist__9929);
      var p2 = cljs.core.first(cljs.core.next(arglist__9929));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9929)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9929)));
      return G__9926__delegate(p1, p2, p3, ps)
    };
    G__9926.cljs$lang$arity$variadic = G__9926__delegate;
    return G__9926
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9948 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9948) {
        var s__9949 = temp__3974__auto____9948;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9949)) {
          var c__9950 = cljs.core.chunk_first.call(null, s__9949);
          var size__9951 = cljs.core.count.call(null, c__9950);
          var b__9952 = cljs.core.chunk_buffer.call(null, size__9951);
          var n__2527__auto____9953 = size__9951;
          var i__9954 = 0;
          while(true) {
            if(i__9954 < n__2527__auto____9953) {
              cljs.core.chunk_append.call(null, b__9952, f.call(null, cljs.core._nth.call(null, c__9950, i__9954)));
              var G__9966 = i__9954 + 1;
              i__9954 = G__9966;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9952), map.call(null, f, cljs.core.chunk_rest.call(null, s__9949)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9949)), map.call(null, f, cljs.core.rest.call(null, s__9949)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9955 = cljs.core.seq.call(null, c1);
      var s2__9956 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9957 = s1__9955;
        if(and__3822__auto____9957) {
          return s2__9956
        }else {
          return and__3822__auto____9957
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9955), cljs.core.first.call(null, s2__9956)), map.call(null, f, cljs.core.rest.call(null, s1__9955), cljs.core.rest.call(null, s2__9956)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9958 = cljs.core.seq.call(null, c1);
      var s2__9959 = cljs.core.seq.call(null, c2);
      var s3__9960 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9961 = s1__9958;
        if(and__3822__auto____9961) {
          var and__3822__auto____9962 = s2__9959;
          if(and__3822__auto____9962) {
            return s3__9960
          }else {
            return and__3822__auto____9962
          }
        }else {
          return and__3822__auto____9961
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9958), cljs.core.first.call(null, s2__9959), cljs.core.first.call(null, s3__9960)), map.call(null, f, cljs.core.rest.call(null, s1__9958), cljs.core.rest.call(null, s2__9959), cljs.core.rest.call(null, s3__9960)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9967__delegate = function(f, c1, c2, c3, colls) {
      var step__9965 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9964 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9964)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9964), step.call(null, map.call(null, cljs.core.rest, ss__9964)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9769_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9769_SHARP_)
      }, step__9965.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9967 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9967__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9967.cljs$lang$maxFixedArity = 4;
    G__9967.cljs$lang$applyTo = function(arglist__9968) {
      var f = cljs.core.first(arglist__9968);
      var c1 = cljs.core.first(cljs.core.next(arglist__9968));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9968)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9968))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9968))));
      return G__9967__delegate(f, c1, c2, c3, colls)
    };
    G__9967.cljs$lang$arity$variadic = G__9967__delegate;
    return G__9967
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9971 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9971) {
        var s__9972 = temp__3974__auto____9971;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9972), take.call(null, n - 1, cljs.core.rest.call(null, s__9972)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9978 = function(n, coll) {
    while(true) {
      var s__9976 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9977 = n > 0;
        if(and__3822__auto____9977) {
          return s__9976
        }else {
          return and__3822__auto____9977
        }
      }())) {
        var G__9979 = n - 1;
        var G__9980 = cljs.core.rest.call(null, s__9976);
        n = G__9979;
        coll = G__9980;
        continue
      }else {
        return s__9976
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9978.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9983 = cljs.core.seq.call(null, coll);
  var lead__9984 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9984) {
      var G__9985 = cljs.core.next.call(null, s__9983);
      var G__9986 = cljs.core.next.call(null, lead__9984);
      s__9983 = G__9985;
      lead__9984 = G__9986;
      continue
    }else {
      return s__9983
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9992 = function(pred, coll) {
    while(true) {
      var s__9990 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9991 = s__9990;
        if(and__3822__auto____9991) {
          return pred.call(null, cljs.core.first.call(null, s__9990))
        }else {
          return and__3822__auto____9991
        }
      }())) {
        var G__9993 = pred;
        var G__9994 = cljs.core.rest.call(null, s__9990);
        pred = G__9993;
        coll = G__9994;
        continue
      }else {
        return s__9990
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9992.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9997 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9997) {
      var s__9998 = temp__3974__auto____9997;
      return cljs.core.concat.call(null, s__9998, cycle.call(null, s__9998))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10003 = cljs.core.seq.call(null, c1);
      var s2__10004 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____10005 = s1__10003;
        if(and__3822__auto____10005) {
          return s2__10004
        }else {
          return and__3822__auto____10005
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__10003), cljs.core.cons.call(null, cljs.core.first.call(null, s2__10004), interleave.call(null, cljs.core.rest.call(null, s1__10003), cljs.core.rest.call(null, s2__10004))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__10007__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__10006 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__10006)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__10006), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__10006)))
        }else {
          return null
        }
      }, null)
    };
    var G__10007 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10007__delegate.call(this, c1, c2, colls)
    };
    G__10007.cljs$lang$maxFixedArity = 2;
    G__10007.cljs$lang$applyTo = function(arglist__10008) {
      var c1 = cljs.core.first(arglist__10008);
      var c2 = cljs.core.first(cljs.core.next(arglist__10008));
      var colls = cljs.core.rest(cljs.core.next(arglist__10008));
      return G__10007__delegate(c1, c2, colls)
    };
    G__10007.cljs$lang$arity$variadic = G__10007__delegate;
    return G__10007
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__10018 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10016 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10016) {
        var coll__10017 = temp__3971__auto____10016;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__10017), cat.call(null, cljs.core.rest.call(null, coll__10017), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__10018.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__10019__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__10019 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10019__delegate.call(this, f, coll, colls)
    };
    G__10019.cljs$lang$maxFixedArity = 2;
    G__10019.cljs$lang$applyTo = function(arglist__10020) {
      var f = cljs.core.first(arglist__10020);
      var coll = cljs.core.first(cljs.core.next(arglist__10020));
      var colls = cljs.core.rest(cljs.core.next(arglist__10020));
      return G__10019__delegate(f, coll, colls)
    };
    G__10019.cljs$lang$arity$variadic = G__10019__delegate;
    return G__10019
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10030 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10030) {
      var s__10031 = temp__3974__auto____10030;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10031)) {
        var c__10032 = cljs.core.chunk_first.call(null, s__10031);
        var size__10033 = cljs.core.count.call(null, c__10032);
        var b__10034 = cljs.core.chunk_buffer.call(null, size__10033);
        var n__2527__auto____10035 = size__10033;
        var i__10036 = 0;
        while(true) {
          if(i__10036 < n__2527__auto____10035) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__10032, i__10036)))) {
              cljs.core.chunk_append.call(null, b__10034, cljs.core._nth.call(null, c__10032, i__10036))
            }else {
            }
            var G__10039 = i__10036 + 1;
            i__10036 = G__10039;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10034), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__10031)))
      }else {
        var f__10037 = cljs.core.first.call(null, s__10031);
        var r__10038 = cljs.core.rest.call(null, s__10031);
        if(cljs.core.truth_(pred.call(null, f__10037))) {
          return cljs.core.cons.call(null, f__10037, filter.call(null, pred, r__10038))
        }else {
          return filter.call(null, pred, r__10038)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__10042 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__10042.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10040_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10040_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__10046__10047 = to;
    if(G__10046__10047) {
      if(function() {
        var or__3824__auto____10048 = G__10046__10047.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____10048) {
          return or__3824__auto____10048
        }else {
          return G__10046__10047.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__10046__10047.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10046__10047)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10046__10047)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__10049__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__10049 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10049__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10049.cljs$lang$maxFixedArity = 4;
    G__10049.cljs$lang$applyTo = function(arglist__10050) {
      var f = cljs.core.first(arglist__10050);
      var c1 = cljs.core.first(cljs.core.next(arglist__10050));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10050)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10050))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10050))));
      return G__10049__delegate(f, c1, c2, c3, colls)
    };
    G__10049.cljs$lang$arity$variadic = G__10049__delegate;
    return G__10049
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10057 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10057) {
        var s__10058 = temp__3974__auto____10057;
        var p__10059 = cljs.core.take.call(null, n, s__10058);
        if(n === cljs.core.count.call(null, p__10059)) {
          return cljs.core.cons.call(null, p__10059, partition.call(null, n, step, cljs.core.drop.call(null, step, s__10058)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10060 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10060) {
        var s__10061 = temp__3974__auto____10060;
        var p__10062 = cljs.core.take.call(null, n, s__10061);
        if(n === cljs.core.count.call(null, p__10062)) {
          return cljs.core.cons.call(null, p__10062, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__10061)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__10062, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__10067 = cljs.core.lookup_sentinel;
    var m__10068 = m;
    var ks__10069 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__10069) {
        var m__10070 = cljs.core._lookup.call(null, m__10068, cljs.core.first.call(null, ks__10069), sentinel__10067);
        if(sentinel__10067 === m__10070) {
          return not_found
        }else {
          var G__10071 = sentinel__10067;
          var G__10072 = m__10070;
          var G__10073 = cljs.core.next.call(null, ks__10069);
          sentinel__10067 = G__10071;
          m__10068 = G__10072;
          ks__10069 = G__10073;
          continue
        }
      }else {
        return m__10068
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__10074, v) {
  var vec__10079__10080 = p__10074;
  var k__10081 = cljs.core.nth.call(null, vec__10079__10080, 0, null);
  var ks__10082 = cljs.core.nthnext.call(null, vec__10079__10080, 1);
  if(cljs.core.truth_(ks__10082)) {
    return cljs.core.assoc.call(null, m, k__10081, assoc_in.call(null, cljs.core._lookup.call(null, m, k__10081, null), ks__10082, v))
  }else {
    return cljs.core.assoc.call(null, m, k__10081, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__10083, f, args) {
    var vec__10088__10089 = p__10083;
    var k__10090 = cljs.core.nth.call(null, vec__10088__10089, 0, null);
    var ks__10091 = cljs.core.nthnext.call(null, vec__10088__10089, 1);
    if(cljs.core.truth_(ks__10091)) {
      return cljs.core.assoc.call(null, m, k__10090, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__10090, null), ks__10091, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__10090, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__10090, null), args))
    }
  };
  var update_in = function(m, p__10083, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__10083, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__10092) {
    var m = cljs.core.first(arglist__10092);
    var p__10083 = cljs.core.first(cljs.core.next(arglist__10092));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10092)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10092)));
    return update_in__delegate(m, p__10083, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10095 = this;
  var h__2192__auto____10096 = this__10095.__hash;
  if(!(h__2192__auto____10096 == null)) {
    return h__2192__auto____10096
  }else {
    var h__2192__auto____10097 = cljs.core.hash_coll.call(null, coll);
    this__10095.__hash = h__2192__auto____10097;
    return h__2192__auto____10097
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10098 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10099 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10100 = this;
  var new_array__10101 = this__10100.array.slice();
  new_array__10101[k] = v;
  return new cljs.core.Vector(this__10100.meta, new_array__10101, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__10132 = null;
  var G__10132__2 = function(this_sym10102, k) {
    var this__10104 = this;
    var this_sym10102__10105 = this;
    var coll__10106 = this_sym10102__10105;
    return coll__10106.cljs$core$ILookup$_lookup$arity$2(coll__10106, k)
  };
  var G__10132__3 = function(this_sym10103, k, not_found) {
    var this__10104 = this;
    var this_sym10103__10107 = this;
    var coll__10108 = this_sym10103__10107;
    return coll__10108.cljs$core$ILookup$_lookup$arity$3(coll__10108, k, not_found)
  };
  G__10132 = function(this_sym10103, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10132__2.call(this, this_sym10103, k);
      case 3:
        return G__10132__3.call(this, this_sym10103, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10132
}();
cljs.core.Vector.prototype.apply = function(this_sym10093, args10094) {
  var this__10109 = this;
  return this_sym10093.call.apply(this_sym10093, [this_sym10093].concat(args10094.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10110 = this;
  var new_array__10111 = this__10110.array.slice();
  new_array__10111.push(o);
  return new cljs.core.Vector(this__10110.meta, new_array__10111, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__10112 = this;
  var this__10113 = this;
  return cljs.core.pr_str.call(null, this__10113)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10114 = this;
  return cljs.core.ci_reduce.call(null, this__10114.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10115 = this;
  return cljs.core.ci_reduce.call(null, this__10115.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10116 = this;
  if(this__10116.array.length > 0) {
    var vector_seq__10117 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__10116.array.length) {
          return cljs.core.cons.call(null, this__10116.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__10117.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10118 = this;
  return this__10118.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10119 = this;
  var count__10120 = this__10119.array.length;
  if(count__10120 > 0) {
    return this__10119.array[count__10120 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10121 = this;
  if(this__10121.array.length > 0) {
    var new_array__10122 = this__10121.array.slice();
    new_array__10122.pop();
    return new cljs.core.Vector(this__10121.meta, new_array__10122, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10123 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10124 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10125 = this;
  return new cljs.core.Vector(meta, this__10125.array, this__10125.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10126 = this;
  return this__10126.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10127 = this;
  if(function() {
    var and__3822__auto____10128 = 0 <= n;
    if(and__3822__auto____10128) {
      return n < this__10127.array.length
    }else {
      return and__3822__auto____10128
    }
  }()) {
    return this__10127.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10129 = this;
  if(function() {
    var and__3822__auto____10130 = 0 <= n;
    if(and__3822__auto____10130) {
      return n < this__10129.array.length
    }else {
      return and__3822__auto____10130
    }
  }()) {
    return this__10129.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10131 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10131.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__10134 = pv.cnt;
  if(cnt__10134 < 32) {
    return 0
  }else {
    return cnt__10134 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__10140 = level;
  var ret__10141 = node;
  while(true) {
    if(ll__10140 === 0) {
      return ret__10141
    }else {
      var embed__10142 = ret__10141;
      var r__10143 = cljs.core.pv_fresh_node.call(null, edit);
      var ___10144 = cljs.core.pv_aset.call(null, r__10143, 0, embed__10142);
      var G__10145 = ll__10140 - 5;
      var G__10146 = r__10143;
      ll__10140 = G__10145;
      ret__10141 = G__10146;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__10152 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__10153 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__10152, subidx__10153, tailnode);
    return ret__10152
  }else {
    var child__10154 = cljs.core.pv_aget.call(null, parent, subidx__10153);
    if(!(child__10154 == null)) {
      var node_to_insert__10155 = push_tail.call(null, pv, level - 5, child__10154, tailnode);
      cljs.core.pv_aset.call(null, ret__10152, subidx__10153, node_to_insert__10155);
      return ret__10152
    }else {
      var node_to_insert__10156 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__10152, subidx__10153, node_to_insert__10156);
      return ret__10152
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____10160 = 0 <= i;
    if(and__3822__auto____10160) {
      return i < pv.cnt
    }else {
      return and__3822__auto____10160
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__10161 = pv.root;
      var level__10162 = pv.shift;
      while(true) {
        if(level__10162 > 0) {
          var G__10163 = cljs.core.pv_aget.call(null, node__10161, i >>> level__10162 & 31);
          var G__10164 = level__10162 - 5;
          node__10161 = G__10163;
          level__10162 = G__10164;
          continue
        }else {
          return node__10161.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__10167 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__10167, i & 31, val);
    return ret__10167
  }else {
    var subidx__10168 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__10167, subidx__10168, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10168), i, val));
    return ret__10167
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__10174 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10175 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10174));
    if(function() {
      var and__3822__auto____10176 = new_child__10175 == null;
      if(and__3822__auto____10176) {
        return subidx__10174 === 0
      }else {
        return and__3822__auto____10176
      }
    }()) {
      return null
    }else {
      var ret__10177 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__10177, subidx__10174, new_child__10175);
      return ret__10177
    }
  }else {
    if(subidx__10174 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__10178 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__10178, subidx__10174, null);
        return ret__10178
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10181 = this;
  return new cljs.core.TransientVector(this__10181.cnt, this__10181.shift, cljs.core.tv_editable_root.call(null, this__10181.root), cljs.core.tv_editable_tail.call(null, this__10181.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10182 = this;
  var h__2192__auto____10183 = this__10182.__hash;
  if(!(h__2192__auto____10183 == null)) {
    return h__2192__auto____10183
  }else {
    var h__2192__auto____10184 = cljs.core.hash_coll.call(null, coll);
    this__10182.__hash = h__2192__auto____10184;
    return h__2192__auto____10184
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10185 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10186 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10187 = this;
  if(function() {
    var and__3822__auto____10188 = 0 <= k;
    if(and__3822__auto____10188) {
      return k < this__10187.cnt
    }else {
      return and__3822__auto____10188
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__10189 = this__10187.tail.slice();
      new_tail__10189[k & 31] = v;
      return new cljs.core.PersistentVector(this__10187.meta, this__10187.cnt, this__10187.shift, this__10187.root, new_tail__10189, null)
    }else {
      return new cljs.core.PersistentVector(this__10187.meta, this__10187.cnt, this__10187.shift, cljs.core.do_assoc.call(null, coll, this__10187.shift, this__10187.root, k, v), this__10187.tail, null)
    }
  }else {
    if(k === this__10187.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__10187.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10237 = null;
  var G__10237__2 = function(this_sym10190, k) {
    var this__10192 = this;
    var this_sym10190__10193 = this;
    var coll__10194 = this_sym10190__10193;
    return coll__10194.cljs$core$ILookup$_lookup$arity$2(coll__10194, k)
  };
  var G__10237__3 = function(this_sym10191, k, not_found) {
    var this__10192 = this;
    var this_sym10191__10195 = this;
    var coll__10196 = this_sym10191__10195;
    return coll__10196.cljs$core$ILookup$_lookup$arity$3(coll__10196, k, not_found)
  };
  G__10237 = function(this_sym10191, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10237__2.call(this, this_sym10191, k);
      case 3:
        return G__10237__3.call(this, this_sym10191, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10237
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym10179, args10180) {
  var this__10197 = this;
  return this_sym10179.call.apply(this_sym10179, [this_sym10179].concat(args10180.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__10198 = this;
  var step_init__10199 = [0, init];
  var i__10200 = 0;
  while(true) {
    if(i__10200 < this__10198.cnt) {
      var arr__10201 = cljs.core.array_for.call(null, v, i__10200);
      var len__10202 = arr__10201.length;
      var init__10206 = function() {
        var j__10203 = 0;
        var init__10204 = step_init__10199[1];
        while(true) {
          if(j__10203 < len__10202) {
            var init__10205 = f.call(null, init__10204, j__10203 + i__10200, arr__10201[j__10203]);
            if(cljs.core.reduced_QMARK_.call(null, init__10205)) {
              return init__10205
            }else {
              var G__10238 = j__10203 + 1;
              var G__10239 = init__10205;
              j__10203 = G__10238;
              init__10204 = G__10239;
              continue
            }
          }else {
            step_init__10199[0] = len__10202;
            step_init__10199[1] = init__10204;
            return init__10204
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10206)) {
        return cljs.core.deref.call(null, init__10206)
      }else {
        var G__10240 = i__10200 + step_init__10199[0];
        i__10200 = G__10240;
        continue
      }
    }else {
      return step_init__10199[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10207 = this;
  if(this__10207.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__10208 = this__10207.tail.slice();
    new_tail__10208.push(o);
    return new cljs.core.PersistentVector(this__10207.meta, this__10207.cnt + 1, this__10207.shift, this__10207.root, new_tail__10208, null)
  }else {
    var root_overflow_QMARK___10209 = this__10207.cnt >>> 5 > 1 << this__10207.shift;
    var new_shift__10210 = root_overflow_QMARK___10209 ? this__10207.shift + 5 : this__10207.shift;
    var new_root__10212 = root_overflow_QMARK___10209 ? function() {
      var n_r__10211 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__10211, 0, this__10207.root);
      cljs.core.pv_aset.call(null, n_r__10211, 1, cljs.core.new_path.call(null, null, this__10207.shift, new cljs.core.VectorNode(null, this__10207.tail)));
      return n_r__10211
    }() : cljs.core.push_tail.call(null, coll, this__10207.shift, this__10207.root, new cljs.core.VectorNode(null, this__10207.tail));
    return new cljs.core.PersistentVector(this__10207.meta, this__10207.cnt + 1, new_shift__10210, new_root__10212, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10213 = this;
  if(this__10213.cnt > 0) {
    return new cljs.core.RSeq(coll, this__10213.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__10214 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__10215 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__10216 = this;
  var this__10217 = this;
  return cljs.core.pr_str.call(null, this__10217)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10218 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10219 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10220 = this;
  if(this__10220.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10221 = this;
  return this__10221.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10222 = this;
  if(this__10222.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__10222.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10223 = this;
  if(this__10223.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__10223.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10223.meta)
    }else {
      if(1 < this__10223.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__10223.meta, this__10223.cnt - 1, this__10223.shift, this__10223.root, this__10223.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__10224 = cljs.core.array_for.call(null, coll, this__10223.cnt - 2);
          var nr__10225 = cljs.core.pop_tail.call(null, coll, this__10223.shift, this__10223.root);
          var new_root__10226 = nr__10225 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__10225;
          var cnt_1__10227 = this__10223.cnt - 1;
          if(function() {
            var and__3822__auto____10228 = 5 < this__10223.shift;
            if(and__3822__auto____10228) {
              return cljs.core.pv_aget.call(null, new_root__10226, 1) == null
            }else {
              return and__3822__auto____10228
            }
          }()) {
            return new cljs.core.PersistentVector(this__10223.meta, cnt_1__10227, this__10223.shift - 5, cljs.core.pv_aget.call(null, new_root__10226, 0), new_tail__10224, null)
          }else {
            return new cljs.core.PersistentVector(this__10223.meta, cnt_1__10227, this__10223.shift, new_root__10226, new_tail__10224, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10229 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10230 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10231 = this;
  return new cljs.core.PersistentVector(meta, this__10231.cnt, this__10231.shift, this__10231.root, this__10231.tail, this__10231.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10232 = this;
  return this__10232.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10233 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10234 = this;
  if(function() {
    var and__3822__auto____10235 = 0 <= n;
    if(and__3822__auto____10235) {
      return n < this__10234.cnt
    }else {
      return and__3822__auto____10235
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10236 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10236.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__10241 = xs.length;
  var xs__10242 = no_clone === true ? xs : xs.slice();
  if(l__10241 < 32) {
    return new cljs.core.PersistentVector(null, l__10241, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__10242, null)
  }else {
    var node__10243 = xs__10242.slice(0, 32);
    var v__10244 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__10243, null);
    var i__10245 = 32;
    var out__10246 = cljs.core._as_transient.call(null, v__10244);
    while(true) {
      if(i__10245 < l__10241) {
        var G__10247 = i__10245 + 1;
        var G__10248 = cljs.core.conj_BANG_.call(null, out__10246, xs__10242[i__10245]);
        i__10245 = G__10247;
        out__10246 = G__10248;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10246)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10249) {
    var args = cljs.core.seq(arglist__10249);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10250 = this;
  if(this__10250.off + 1 < this__10250.node.length) {
    var s__10251 = cljs.core.chunked_seq.call(null, this__10250.vec, this__10250.node, this__10250.i, this__10250.off + 1);
    if(s__10251 == null) {
      return null
    }else {
      return s__10251
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10252 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10253 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10254 = this;
  return this__10254.node[this__10254.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10255 = this;
  if(this__10255.off + 1 < this__10255.node.length) {
    var s__10256 = cljs.core.chunked_seq.call(null, this__10255.vec, this__10255.node, this__10255.i, this__10255.off + 1);
    if(s__10256 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__10256
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10257 = this;
  var l__10258 = this__10257.node.length;
  var s__10259 = this__10257.i + l__10258 < cljs.core._count.call(null, this__10257.vec) ? cljs.core.chunked_seq.call(null, this__10257.vec, this__10257.i + l__10258, 0) : null;
  if(s__10259 == null) {
    return null
  }else {
    return s__10259
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10260 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10261 = this;
  return cljs.core.chunked_seq.call(null, this__10261.vec, this__10261.node, this__10261.i, this__10261.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__10262 = this;
  return this__10262.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10263 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10263.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10264 = this;
  return cljs.core.array_chunk.call(null, this__10264.node, this__10264.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10265 = this;
  var l__10266 = this__10265.node.length;
  var s__10267 = this__10265.i + l__10266 < cljs.core._count.call(null, this__10265.vec) ? cljs.core.chunked_seq.call(null, this__10265.vec, this__10265.i + l__10266, 0) : null;
  if(s__10267 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__10267
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10270 = this;
  var h__2192__auto____10271 = this__10270.__hash;
  if(!(h__2192__auto____10271 == null)) {
    return h__2192__auto____10271
  }else {
    var h__2192__auto____10272 = cljs.core.hash_coll.call(null, coll);
    this__10270.__hash = h__2192__auto____10272;
    return h__2192__auto____10272
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10273 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10274 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__10275 = this;
  var v_pos__10276 = this__10275.start + key;
  return new cljs.core.Subvec(this__10275.meta, cljs.core._assoc.call(null, this__10275.v, v_pos__10276, val), this__10275.start, this__10275.end > v_pos__10276 + 1 ? this__10275.end : v_pos__10276 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__10302 = null;
  var G__10302__2 = function(this_sym10277, k) {
    var this__10279 = this;
    var this_sym10277__10280 = this;
    var coll__10281 = this_sym10277__10280;
    return coll__10281.cljs$core$ILookup$_lookup$arity$2(coll__10281, k)
  };
  var G__10302__3 = function(this_sym10278, k, not_found) {
    var this__10279 = this;
    var this_sym10278__10282 = this;
    var coll__10283 = this_sym10278__10282;
    return coll__10283.cljs$core$ILookup$_lookup$arity$3(coll__10283, k, not_found)
  };
  G__10302 = function(this_sym10278, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10302__2.call(this, this_sym10278, k);
      case 3:
        return G__10302__3.call(this, this_sym10278, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10302
}();
cljs.core.Subvec.prototype.apply = function(this_sym10268, args10269) {
  var this__10284 = this;
  return this_sym10268.call.apply(this_sym10268, [this_sym10268].concat(args10269.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10285 = this;
  return new cljs.core.Subvec(this__10285.meta, cljs.core._assoc_n.call(null, this__10285.v, this__10285.end, o), this__10285.start, this__10285.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__10286 = this;
  var this__10287 = this;
  return cljs.core.pr_str.call(null, this__10287)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10288 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10289 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10290 = this;
  var subvec_seq__10291 = function subvec_seq(i) {
    if(i === this__10290.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__10290.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__10291.call(null, this__10290.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10292 = this;
  return this__10292.end - this__10292.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10293 = this;
  return cljs.core._nth.call(null, this__10293.v, this__10293.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10294 = this;
  if(this__10294.start === this__10294.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__10294.meta, this__10294.v, this__10294.start, this__10294.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10295 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10296 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10297 = this;
  return new cljs.core.Subvec(meta, this__10297.v, this__10297.start, this__10297.end, this__10297.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10298 = this;
  return this__10298.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10299 = this;
  return cljs.core._nth.call(null, this__10299.v, this__10299.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10300 = this;
  return cljs.core._nth.call(null, this__10300.v, this__10300.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10301 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10301.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__10304 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__10304, 0, tl.length);
  return ret__10304
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__10308 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__10309 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__10308, subidx__10309, level === 5 ? tail_node : function() {
    var child__10310 = cljs.core.pv_aget.call(null, ret__10308, subidx__10309);
    if(!(child__10310 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__10310, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__10308
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__10315 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__10316 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10317 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__10315, subidx__10316));
    if(function() {
      var and__3822__auto____10318 = new_child__10317 == null;
      if(and__3822__auto____10318) {
        return subidx__10316 === 0
      }else {
        return and__3822__auto____10318
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__10315, subidx__10316, new_child__10317);
      return node__10315
    }
  }else {
    if(subidx__10316 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__10315, subidx__10316, null);
        return node__10315
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____10323 = 0 <= i;
    if(and__3822__auto____10323) {
      return i < tv.cnt
    }else {
      return and__3822__auto____10323
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__10324 = tv.root;
      var node__10325 = root__10324;
      var level__10326 = tv.shift;
      while(true) {
        if(level__10326 > 0) {
          var G__10327 = cljs.core.tv_ensure_editable.call(null, root__10324.edit, cljs.core.pv_aget.call(null, node__10325, i >>> level__10326 & 31));
          var G__10328 = level__10326 - 5;
          node__10325 = G__10327;
          level__10326 = G__10328;
          continue
        }else {
          return node__10325.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10368 = null;
  var G__10368__2 = function(this_sym10331, k) {
    var this__10333 = this;
    var this_sym10331__10334 = this;
    var coll__10335 = this_sym10331__10334;
    return coll__10335.cljs$core$ILookup$_lookup$arity$2(coll__10335, k)
  };
  var G__10368__3 = function(this_sym10332, k, not_found) {
    var this__10333 = this;
    var this_sym10332__10336 = this;
    var coll__10337 = this_sym10332__10336;
    return coll__10337.cljs$core$ILookup$_lookup$arity$3(coll__10337, k, not_found)
  };
  G__10368 = function(this_sym10332, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10368__2.call(this, this_sym10332, k);
      case 3:
        return G__10368__3.call(this, this_sym10332, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10368
}();
cljs.core.TransientVector.prototype.apply = function(this_sym10329, args10330) {
  var this__10338 = this;
  return this_sym10329.call.apply(this_sym10329, [this_sym10329].concat(args10330.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10339 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10340 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10341 = this;
  if(this__10341.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10342 = this;
  if(function() {
    var and__3822__auto____10343 = 0 <= n;
    if(and__3822__auto____10343) {
      return n < this__10342.cnt
    }else {
      return and__3822__auto____10343
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10344 = this;
  if(this__10344.root.edit) {
    return this__10344.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__10345 = this;
  if(this__10345.root.edit) {
    if(function() {
      var and__3822__auto____10346 = 0 <= n;
      if(and__3822__auto____10346) {
        return n < this__10345.cnt
      }else {
        return and__3822__auto____10346
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__10345.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__10351 = function go(level, node) {
          var node__10349 = cljs.core.tv_ensure_editable.call(null, this__10345.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__10349, n & 31, val);
            return node__10349
          }else {
            var subidx__10350 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__10349, subidx__10350, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__10349, subidx__10350)));
            return node__10349
          }
        }.call(null, this__10345.shift, this__10345.root);
        this__10345.root = new_root__10351;
        return tcoll
      }
    }else {
      if(n === this__10345.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__10345.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__10352 = this;
  if(this__10352.root.edit) {
    if(this__10352.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__10352.cnt) {
        this__10352.cnt = 0;
        return tcoll
      }else {
        if((this__10352.cnt - 1 & 31) > 0) {
          this__10352.cnt = this__10352.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__10353 = cljs.core.editable_array_for.call(null, tcoll, this__10352.cnt - 2);
            var new_root__10355 = function() {
              var nr__10354 = cljs.core.tv_pop_tail.call(null, tcoll, this__10352.shift, this__10352.root);
              if(!(nr__10354 == null)) {
                return nr__10354
              }else {
                return new cljs.core.VectorNode(this__10352.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____10356 = 5 < this__10352.shift;
              if(and__3822__auto____10356) {
                return cljs.core.pv_aget.call(null, new_root__10355, 1) == null
              }else {
                return and__3822__auto____10356
              }
            }()) {
              var new_root__10357 = cljs.core.tv_ensure_editable.call(null, this__10352.root.edit, cljs.core.pv_aget.call(null, new_root__10355, 0));
              this__10352.root = new_root__10357;
              this__10352.shift = this__10352.shift - 5;
              this__10352.cnt = this__10352.cnt - 1;
              this__10352.tail = new_tail__10353;
              return tcoll
            }else {
              this__10352.root = new_root__10355;
              this__10352.cnt = this__10352.cnt - 1;
              this__10352.tail = new_tail__10353;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10358 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10359 = this;
  if(this__10359.root.edit) {
    if(this__10359.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__10359.tail[this__10359.cnt & 31] = o;
      this__10359.cnt = this__10359.cnt + 1;
      return tcoll
    }else {
      var tail_node__10360 = new cljs.core.VectorNode(this__10359.root.edit, this__10359.tail);
      var new_tail__10361 = cljs.core.make_array.call(null, 32);
      new_tail__10361[0] = o;
      this__10359.tail = new_tail__10361;
      if(this__10359.cnt >>> 5 > 1 << this__10359.shift) {
        var new_root_array__10362 = cljs.core.make_array.call(null, 32);
        var new_shift__10363 = this__10359.shift + 5;
        new_root_array__10362[0] = this__10359.root;
        new_root_array__10362[1] = cljs.core.new_path.call(null, this__10359.root.edit, this__10359.shift, tail_node__10360);
        this__10359.root = new cljs.core.VectorNode(this__10359.root.edit, new_root_array__10362);
        this__10359.shift = new_shift__10363;
        this__10359.cnt = this__10359.cnt + 1;
        return tcoll
      }else {
        var new_root__10364 = cljs.core.tv_push_tail.call(null, tcoll, this__10359.shift, this__10359.root, tail_node__10360);
        this__10359.root = new_root__10364;
        this__10359.cnt = this__10359.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10365 = this;
  if(this__10365.root.edit) {
    this__10365.root.edit = null;
    var len__10366 = this__10365.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__10367 = cljs.core.make_array.call(null, len__10366);
    cljs.core.array_copy.call(null, this__10365.tail, 0, trimmed_tail__10367, 0, len__10366);
    return new cljs.core.PersistentVector(null, this__10365.cnt, this__10365.shift, this__10365.root, trimmed_tail__10367, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10369 = this;
  var h__2192__auto____10370 = this__10369.__hash;
  if(!(h__2192__auto____10370 == null)) {
    return h__2192__auto____10370
  }else {
    var h__2192__auto____10371 = cljs.core.hash_coll.call(null, coll);
    this__10369.__hash = h__2192__auto____10371;
    return h__2192__auto____10371
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10372 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__10373 = this;
  var this__10374 = this;
  return cljs.core.pr_str.call(null, this__10374)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10375 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10376 = this;
  return cljs.core._first.call(null, this__10376.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10377 = this;
  var temp__3971__auto____10378 = cljs.core.next.call(null, this__10377.front);
  if(temp__3971__auto____10378) {
    var f1__10379 = temp__3971__auto____10378;
    return new cljs.core.PersistentQueueSeq(this__10377.meta, f1__10379, this__10377.rear, null)
  }else {
    if(this__10377.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__10377.meta, this__10377.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10380 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10381 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__10381.front, this__10381.rear, this__10381.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10382 = this;
  return this__10382.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10383 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10383.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10384 = this;
  var h__2192__auto____10385 = this__10384.__hash;
  if(!(h__2192__auto____10385 == null)) {
    return h__2192__auto____10385
  }else {
    var h__2192__auto____10386 = cljs.core.hash_coll.call(null, coll);
    this__10384.__hash = h__2192__auto____10386;
    return h__2192__auto____10386
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10387 = this;
  if(cljs.core.truth_(this__10387.front)) {
    return new cljs.core.PersistentQueue(this__10387.meta, this__10387.count + 1, this__10387.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____10388 = this__10387.rear;
      if(cljs.core.truth_(or__3824__auto____10388)) {
        return or__3824__auto____10388
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__10387.meta, this__10387.count + 1, cljs.core.conj.call(null, this__10387.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__10389 = this;
  var this__10390 = this;
  return cljs.core.pr_str.call(null, this__10390)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10391 = this;
  var rear__10392 = cljs.core.seq.call(null, this__10391.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____10393 = this__10391.front;
    if(cljs.core.truth_(or__3824__auto____10393)) {
      return or__3824__auto____10393
    }else {
      return rear__10392
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__10391.front, cljs.core.seq.call(null, rear__10392), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10394 = this;
  return this__10394.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10395 = this;
  return cljs.core._first.call(null, this__10395.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10396 = this;
  if(cljs.core.truth_(this__10396.front)) {
    var temp__3971__auto____10397 = cljs.core.next.call(null, this__10396.front);
    if(temp__3971__auto____10397) {
      var f1__10398 = temp__3971__auto____10397;
      return new cljs.core.PersistentQueue(this__10396.meta, this__10396.count - 1, f1__10398, this__10396.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__10396.meta, this__10396.count - 1, cljs.core.seq.call(null, this__10396.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10399 = this;
  return cljs.core.first.call(null, this__10399.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10400 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10401 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10402 = this;
  return new cljs.core.PersistentQueue(meta, this__10402.count, this__10402.front, this__10402.rear, this__10402.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10403 = this;
  return this__10403.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10404 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10405 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10408 = array.length;
  var i__10409 = 0;
  while(true) {
    if(i__10409 < len__10408) {
      if(k === array[i__10409]) {
        return i__10409
      }else {
        var G__10410 = i__10409 + incr;
        i__10409 = G__10410;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10413 = cljs.core.hash.call(null, a);
  var b__10414 = cljs.core.hash.call(null, b);
  if(a__10413 < b__10414) {
    return-1
  }else {
    if(a__10413 > b__10414) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10422 = m.keys;
  var len__10423 = ks__10422.length;
  var so__10424 = m.strobj;
  var out__10425 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10426 = 0;
  var out__10427 = cljs.core.transient$.call(null, out__10425);
  while(true) {
    if(i__10426 < len__10423) {
      var k__10428 = ks__10422[i__10426];
      var G__10429 = i__10426 + 1;
      var G__10430 = cljs.core.assoc_BANG_.call(null, out__10427, k__10428, so__10424[k__10428]);
      i__10426 = G__10429;
      out__10427 = G__10430;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10427, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10436 = {};
  var l__10437 = ks.length;
  var i__10438 = 0;
  while(true) {
    if(i__10438 < l__10437) {
      var k__10439 = ks[i__10438];
      new_obj__10436[k__10439] = obj[k__10439];
      var G__10440 = i__10438 + 1;
      i__10438 = G__10440;
      continue
    }else {
    }
    break
  }
  return new_obj__10436
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10443 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10444 = this;
  var h__2192__auto____10445 = this__10444.__hash;
  if(!(h__2192__auto____10445 == null)) {
    return h__2192__auto____10445
  }else {
    var h__2192__auto____10446 = cljs.core.hash_imap.call(null, coll);
    this__10444.__hash = h__2192__auto____10446;
    return h__2192__auto____10446
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10447 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10448 = this;
  if(function() {
    var and__3822__auto____10449 = goog.isString(k);
    if(and__3822__auto____10449) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10448.keys) == null)
    }else {
      return and__3822__auto____10449
    }
  }()) {
    return this__10448.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10450 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10451 = this__10450.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10451) {
        return or__3824__auto____10451
      }else {
        return this__10450.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10450.keys) == null)) {
        var new_strobj__10452 = cljs.core.obj_clone.call(null, this__10450.strobj, this__10450.keys);
        new_strobj__10452[k] = v;
        return new cljs.core.ObjMap(this__10450.meta, this__10450.keys, new_strobj__10452, this__10450.update_count + 1, null)
      }else {
        var new_strobj__10453 = cljs.core.obj_clone.call(null, this__10450.strobj, this__10450.keys);
        var new_keys__10454 = this__10450.keys.slice();
        new_strobj__10453[k] = v;
        new_keys__10454.push(k);
        return new cljs.core.ObjMap(this__10450.meta, new_keys__10454, new_strobj__10453, this__10450.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10455 = this;
  if(function() {
    var and__3822__auto____10456 = goog.isString(k);
    if(and__3822__auto____10456) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10455.keys) == null)
    }else {
      return and__3822__auto____10456
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10478 = null;
  var G__10478__2 = function(this_sym10457, k) {
    var this__10459 = this;
    var this_sym10457__10460 = this;
    var coll__10461 = this_sym10457__10460;
    return coll__10461.cljs$core$ILookup$_lookup$arity$2(coll__10461, k)
  };
  var G__10478__3 = function(this_sym10458, k, not_found) {
    var this__10459 = this;
    var this_sym10458__10462 = this;
    var coll__10463 = this_sym10458__10462;
    return coll__10463.cljs$core$ILookup$_lookup$arity$3(coll__10463, k, not_found)
  };
  G__10478 = function(this_sym10458, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10478__2.call(this, this_sym10458, k);
      case 3:
        return G__10478__3.call(this, this_sym10458, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10478
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10441, args10442) {
  var this__10464 = this;
  return this_sym10441.call.apply(this_sym10441, [this_sym10441].concat(args10442.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10465 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10466 = this;
  var this__10467 = this;
  return cljs.core.pr_str.call(null, this__10467)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10468 = this;
  if(this__10468.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10431_SHARP_) {
      return cljs.core.vector.call(null, p1__10431_SHARP_, this__10468.strobj[p1__10431_SHARP_])
    }, this__10468.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10469 = this;
  return this__10469.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10470 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10471 = this;
  return new cljs.core.ObjMap(meta, this__10471.keys, this__10471.strobj, this__10471.update_count, this__10471.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10472 = this;
  return this__10472.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10473 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10473.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10474 = this;
  if(function() {
    var and__3822__auto____10475 = goog.isString(k);
    if(and__3822__auto____10475) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10474.keys) == null)
    }else {
      return and__3822__auto____10475
    }
  }()) {
    var new_keys__10476 = this__10474.keys.slice();
    var new_strobj__10477 = cljs.core.obj_clone.call(null, this__10474.strobj, this__10474.keys);
    new_keys__10476.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10476), 1);
    cljs.core.js_delete.call(null, new_strobj__10477, k);
    return new cljs.core.ObjMap(this__10474.meta, new_keys__10476, new_strobj__10477, this__10474.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10482 = this;
  var h__2192__auto____10483 = this__10482.__hash;
  if(!(h__2192__auto____10483 == null)) {
    return h__2192__auto____10483
  }else {
    var h__2192__auto____10484 = cljs.core.hash_imap.call(null, coll);
    this__10482.__hash = h__2192__auto____10484;
    return h__2192__auto____10484
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10485 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10486 = this;
  var bucket__10487 = this__10486.hashobj[cljs.core.hash.call(null, k)];
  var i__10488 = cljs.core.truth_(bucket__10487) ? cljs.core.scan_array.call(null, 2, k, bucket__10487) : null;
  if(cljs.core.truth_(i__10488)) {
    return bucket__10487[i__10488 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10489 = this;
  var h__10490 = cljs.core.hash.call(null, k);
  var bucket__10491 = this__10489.hashobj[h__10490];
  if(cljs.core.truth_(bucket__10491)) {
    var new_bucket__10492 = bucket__10491.slice();
    var new_hashobj__10493 = goog.object.clone(this__10489.hashobj);
    new_hashobj__10493[h__10490] = new_bucket__10492;
    var temp__3971__auto____10494 = cljs.core.scan_array.call(null, 2, k, new_bucket__10492);
    if(cljs.core.truth_(temp__3971__auto____10494)) {
      var i__10495 = temp__3971__auto____10494;
      new_bucket__10492[i__10495 + 1] = v;
      return new cljs.core.HashMap(this__10489.meta, this__10489.count, new_hashobj__10493, null)
    }else {
      new_bucket__10492.push(k, v);
      return new cljs.core.HashMap(this__10489.meta, this__10489.count + 1, new_hashobj__10493, null)
    }
  }else {
    var new_hashobj__10496 = goog.object.clone(this__10489.hashobj);
    new_hashobj__10496[h__10490] = [k, v];
    return new cljs.core.HashMap(this__10489.meta, this__10489.count + 1, new_hashobj__10496, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10497 = this;
  var bucket__10498 = this__10497.hashobj[cljs.core.hash.call(null, k)];
  var i__10499 = cljs.core.truth_(bucket__10498) ? cljs.core.scan_array.call(null, 2, k, bucket__10498) : null;
  if(cljs.core.truth_(i__10499)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10524 = null;
  var G__10524__2 = function(this_sym10500, k) {
    var this__10502 = this;
    var this_sym10500__10503 = this;
    var coll__10504 = this_sym10500__10503;
    return coll__10504.cljs$core$ILookup$_lookup$arity$2(coll__10504, k)
  };
  var G__10524__3 = function(this_sym10501, k, not_found) {
    var this__10502 = this;
    var this_sym10501__10505 = this;
    var coll__10506 = this_sym10501__10505;
    return coll__10506.cljs$core$ILookup$_lookup$arity$3(coll__10506, k, not_found)
  };
  G__10524 = function(this_sym10501, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10524__2.call(this, this_sym10501, k);
      case 3:
        return G__10524__3.call(this, this_sym10501, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10524
}();
cljs.core.HashMap.prototype.apply = function(this_sym10480, args10481) {
  var this__10507 = this;
  return this_sym10480.call.apply(this_sym10480, [this_sym10480].concat(args10481.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10508 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10509 = this;
  var this__10510 = this;
  return cljs.core.pr_str.call(null, this__10510)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10511 = this;
  if(this__10511.count > 0) {
    var hashes__10512 = cljs.core.js_keys.call(null, this__10511.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10479_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10511.hashobj[p1__10479_SHARP_]))
    }, hashes__10512)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10513 = this;
  return this__10513.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10514 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10515 = this;
  return new cljs.core.HashMap(meta, this__10515.count, this__10515.hashobj, this__10515.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10516 = this;
  return this__10516.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10517 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10517.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10518 = this;
  var h__10519 = cljs.core.hash.call(null, k);
  var bucket__10520 = this__10518.hashobj[h__10519];
  var i__10521 = cljs.core.truth_(bucket__10520) ? cljs.core.scan_array.call(null, 2, k, bucket__10520) : null;
  if(cljs.core.not.call(null, i__10521)) {
    return coll
  }else {
    var new_hashobj__10522 = goog.object.clone(this__10518.hashobj);
    if(3 > bucket__10520.length) {
      cljs.core.js_delete.call(null, new_hashobj__10522, h__10519)
    }else {
      var new_bucket__10523 = bucket__10520.slice();
      new_bucket__10523.splice(i__10521, 2);
      new_hashobj__10522[h__10519] = new_bucket__10523
    }
    return new cljs.core.HashMap(this__10518.meta, this__10518.count - 1, new_hashobj__10522, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10525 = ks.length;
  var i__10526 = 0;
  var out__10527 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10526 < len__10525) {
      var G__10528 = i__10526 + 1;
      var G__10529 = cljs.core.assoc.call(null, out__10527, ks[i__10526], vs[i__10526]);
      i__10526 = G__10528;
      out__10527 = G__10529;
      continue
    }else {
      return out__10527
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10533 = m.arr;
  var len__10534 = arr__10533.length;
  var i__10535 = 0;
  while(true) {
    if(len__10534 <= i__10535) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10533[i__10535], k)) {
        return i__10535
      }else {
        if("\ufdd0'else") {
          var G__10536 = i__10535 + 2;
          i__10535 = G__10536;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10539 = this;
  return new cljs.core.TransientArrayMap({}, this__10539.arr.length, this__10539.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10540 = this;
  var h__2192__auto____10541 = this__10540.__hash;
  if(!(h__2192__auto____10541 == null)) {
    return h__2192__auto____10541
  }else {
    var h__2192__auto____10542 = cljs.core.hash_imap.call(null, coll);
    this__10540.__hash = h__2192__auto____10542;
    return h__2192__auto____10542
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10543 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10544 = this;
  var idx__10545 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10545 === -1) {
    return not_found
  }else {
    return this__10544.arr[idx__10545 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10546 = this;
  var idx__10547 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10547 === -1) {
    if(this__10546.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10546.meta, this__10546.cnt + 1, function() {
        var G__10548__10549 = this__10546.arr.slice();
        G__10548__10549.push(k);
        G__10548__10549.push(v);
        return G__10548__10549
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10546.arr[idx__10547 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10546.meta, this__10546.cnt, function() {
          var G__10550__10551 = this__10546.arr.slice();
          G__10550__10551[idx__10547 + 1] = v;
          return G__10550__10551
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10552 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10584 = null;
  var G__10584__2 = function(this_sym10553, k) {
    var this__10555 = this;
    var this_sym10553__10556 = this;
    var coll__10557 = this_sym10553__10556;
    return coll__10557.cljs$core$ILookup$_lookup$arity$2(coll__10557, k)
  };
  var G__10584__3 = function(this_sym10554, k, not_found) {
    var this__10555 = this;
    var this_sym10554__10558 = this;
    var coll__10559 = this_sym10554__10558;
    return coll__10559.cljs$core$ILookup$_lookup$arity$3(coll__10559, k, not_found)
  };
  G__10584 = function(this_sym10554, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10584__2.call(this, this_sym10554, k);
      case 3:
        return G__10584__3.call(this, this_sym10554, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10584
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10537, args10538) {
  var this__10560 = this;
  return this_sym10537.call.apply(this_sym10537, [this_sym10537].concat(args10538.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10561 = this;
  var len__10562 = this__10561.arr.length;
  var i__10563 = 0;
  var init__10564 = init;
  while(true) {
    if(i__10563 < len__10562) {
      var init__10565 = f.call(null, init__10564, this__10561.arr[i__10563], this__10561.arr[i__10563 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10565)) {
        return cljs.core.deref.call(null, init__10565)
      }else {
        var G__10585 = i__10563 + 2;
        var G__10586 = init__10565;
        i__10563 = G__10585;
        init__10564 = G__10586;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10566 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10567 = this;
  var this__10568 = this;
  return cljs.core.pr_str.call(null, this__10568)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10569 = this;
  if(this__10569.cnt > 0) {
    var len__10570 = this__10569.arr.length;
    var array_map_seq__10571 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10570) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10569.arr[i], this__10569.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10571.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10572 = this;
  return this__10572.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10573 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10574 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10574.cnt, this__10574.arr, this__10574.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10575 = this;
  return this__10575.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10576 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10576.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10577 = this;
  var idx__10578 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10578 >= 0) {
    var len__10579 = this__10577.arr.length;
    var new_len__10580 = len__10579 - 2;
    if(new_len__10580 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10581 = cljs.core.make_array.call(null, new_len__10580);
      var s__10582 = 0;
      var d__10583 = 0;
      while(true) {
        if(s__10582 >= len__10579) {
          return new cljs.core.PersistentArrayMap(this__10577.meta, this__10577.cnt - 1, new_arr__10581, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10577.arr[s__10582])) {
            var G__10587 = s__10582 + 2;
            var G__10588 = d__10583;
            s__10582 = G__10587;
            d__10583 = G__10588;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10581[d__10583] = this__10577.arr[s__10582];
              new_arr__10581[d__10583 + 1] = this__10577.arr[s__10582 + 1];
              var G__10589 = s__10582 + 2;
              var G__10590 = d__10583 + 2;
              s__10582 = G__10589;
              d__10583 = G__10590;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10591 = cljs.core.count.call(null, ks);
  var i__10592 = 0;
  var out__10593 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10592 < len__10591) {
      var G__10594 = i__10592 + 1;
      var G__10595 = cljs.core.assoc_BANG_.call(null, out__10593, ks[i__10592], vs[i__10592]);
      i__10592 = G__10594;
      out__10593 = G__10595;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10593)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10596 = this;
  if(cljs.core.truth_(this__10596.editable_QMARK_)) {
    var idx__10597 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10597 >= 0) {
      this__10596.arr[idx__10597] = this__10596.arr[this__10596.len - 2];
      this__10596.arr[idx__10597 + 1] = this__10596.arr[this__10596.len - 1];
      var G__10598__10599 = this__10596.arr;
      G__10598__10599.pop();
      G__10598__10599.pop();
      G__10598__10599;
      this__10596.len = this__10596.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10600 = this;
  if(cljs.core.truth_(this__10600.editable_QMARK_)) {
    var idx__10601 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10601 === -1) {
      if(this__10600.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10600.len = this__10600.len + 2;
        this__10600.arr.push(key);
        this__10600.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10600.len, this__10600.arr), key, val)
      }
    }else {
      if(val === this__10600.arr[idx__10601 + 1]) {
        return tcoll
      }else {
        this__10600.arr[idx__10601 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10602 = this;
  if(cljs.core.truth_(this__10602.editable_QMARK_)) {
    if(function() {
      var G__10603__10604 = o;
      if(G__10603__10604) {
        if(function() {
          var or__3824__auto____10605 = G__10603__10604.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10605) {
            return or__3824__auto____10605
          }else {
            return G__10603__10604.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10603__10604.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10603__10604)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10603__10604)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10606 = cljs.core.seq.call(null, o);
      var tcoll__10607 = tcoll;
      while(true) {
        var temp__3971__auto____10608 = cljs.core.first.call(null, es__10606);
        if(cljs.core.truth_(temp__3971__auto____10608)) {
          var e__10609 = temp__3971__auto____10608;
          var G__10615 = cljs.core.next.call(null, es__10606);
          var G__10616 = tcoll__10607.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10607, cljs.core.key.call(null, e__10609), cljs.core.val.call(null, e__10609));
          es__10606 = G__10615;
          tcoll__10607 = G__10616;
          continue
        }else {
          return tcoll__10607
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10610 = this;
  if(cljs.core.truth_(this__10610.editable_QMARK_)) {
    this__10610.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10610.len, 2), this__10610.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10611 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10612 = this;
  if(cljs.core.truth_(this__10612.editable_QMARK_)) {
    var idx__10613 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10613 === -1) {
      return not_found
    }else {
      return this__10612.arr[idx__10613 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10614 = this;
  if(cljs.core.truth_(this__10614.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10614.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10619 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10620 = 0;
  while(true) {
    if(i__10620 < len) {
      var G__10621 = cljs.core.assoc_BANG_.call(null, out__10619, arr[i__10620], arr[i__10620 + 1]);
      var G__10622 = i__10620 + 2;
      out__10619 = G__10621;
      i__10620 = G__10622;
      continue
    }else {
      return out__10619
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10627__10628 = arr.slice();
    G__10627__10628[i] = a;
    return G__10627__10628
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10629__10630 = arr.slice();
    G__10629__10630[i] = a;
    G__10629__10630[j] = b;
    return G__10629__10630
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10632 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10632, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10632, 2 * i, new_arr__10632.length - 2 * i);
  return new_arr__10632
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10635 = inode.ensure_editable(edit);
    editable__10635.arr[i] = a;
    return editable__10635
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10636 = inode.ensure_editable(edit);
    editable__10636.arr[i] = a;
    editable__10636.arr[j] = b;
    return editable__10636
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10643 = arr.length;
  var i__10644 = 0;
  var init__10645 = init;
  while(true) {
    if(i__10644 < len__10643) {
      var init__10648 = function() {
        var k__10646 = arr[i__10644];
        if(!(k__10646 == null)) {
          return f.call(null, init__10645, k__10646, arr[i__10644 + 1])
        }else {
          var node__10647 = arr[i__10644 + 1];
          if(!(node__10647 == null)) {
            return node__10647.kv_reduce(f, init__10645)
          }else {
            return init__10645
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10648)) {
        return cljs.core.deref.call(null, init__10648)
      }else {
        var G__10649 = i__10644 + 2;
        var G__10650 = init__10648;
        i__10644 = G__10649;
        init__10645 = G__10650;
        continue
      }
    }else {
      return init__10645
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10651 = this;
  var inode__10652 = this;
  if(this__10651.bitmap === bit) {
    return null
  }else {
    var editable__10653 = inode__10652.ensure_editable(e);
    var earr__10654 = editable__10653.arr;
    var len__10655 = earr__10654.length;
    editable__10653.bitmap = bit ^ editable__10653.bitmap;
    cljs.core.array_copy.call(null, earr__10654, 2 * (i + 1), earr__10654, 2 * i, len__10655 - 2 * (i + 1));
    earr__10654[len__10655 - 2] = null;
    earr__10654[len__10655 - 1] = null;
    return editable__10653
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10656 = this;
  var inode__10657 = this;
  var bit__10658 = 1 << (hash >>> shift & 31);
  var idx__10659 = cljs.core.bitmap_indexed_node_index.call(null, this__10656.bitmap, bit__10658);
  if((this__10656.bitmap & bit__10658) === 0) {
    var n__10660 = cljs.core.bit_count.call(null, this__10656.bitmap);
    if(2 * n__10660 < this__10656.arr.length) {
      var editable__10661 = inode__10657.ensure_editable(edit);
      var earr__10662 = editable__10661.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10662, 2 * idx__10659, earr__10662, 2 * (idx__10659 + 1), 2 * (n__10660 - idx__10659));
      earr__10662[2 * idx__10659] = key;
      earr__10662[2 * idx__10659 + 1] = val;
      editable__10661.bitmap = editable__10661.bitmap | bit__10658;
      return editable__10661
    }else {
      if(n__10660 >= 16) {
        var nodes__10663 = cljs.core.make_array.call(null, 32);
        var jdx__10664 = hash >>> shift & 31;
        nodes__10663[jdx__10664] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10665 = 0;
        var j__10666 = 0;
        while(true) {
          if(i__10665 < 32) {
            if((this__10656.bitmap >>> i__10665 & 1) === 0) {
              var G__10719 = i__10665 + 1;
              var G__10720 = j__10666;
              i__10665 = G__10719;
              j__10666 = G__10720;
              continue
            }else {
              nodes__10663[i__10665] = !(this__10656.arr[j__10666] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10656.arr[j__10666]), this__10656.arr[j__10666], this__10656.arr[j__10666 + 1], added_leaf_QMARK_) : this__10656.arr[j__10666 + 1];
              var G__10721 = i__10665 + 1;
              var G__10722 = j__10666 + 2;
              i__10665 = G__10721;
              j__10666 = G__10722;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10660 + 1, nodes__10663)
      }else {
        if("\ufdd0'else") {
          var new_arr__10667 = cljs.core.make_array.call(null, 2 * (n__10660 + 4));
          cljs.core.array_copy.call(null, this__10656.arr, 0, new_arr__10667, 0, 2 * idx__10659);
          new_arr__10667[2 * idx__10659] = key;
          new_arr__10667[2 * idx__10659 + 1] = val;
          cljs.core.array_copy.call(null, this__10656.arr, 2 * idx__10659, new_arr__10667, 2 * (idx__10659 + 1), 2 * (n__10660 - idx__10659));
          added_leaf_QMARK_.val = true;
          var editable__10668 = inode__10657.ensure_editable(edit);
          editable__10668.arr = new_arr__10667;
          editable__10668.bitmap = editable__10668.bitmap | bit__10658;
          return editable__10668
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10669 = this__10656.arr[2 * idx__10659];
    var val_or_node__10670 = this__10656.arr[2 * idx__10659 + 1];
    if(key_or_nil__10669 == null) {
      var n__10671 = val_or_node__10670.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10671 === val_or_node__10670) {
        return inode__10657
      }else {
        return cljs.core.edit_and_set.call(null, inode__10657, edit, 2 * idx__10659 + 1, n__10671)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10669)) {
        if(val === val_or_node__10670) {
          return inode__10657
        }else {
          return cljs.core.edit_and_set.call(null, inode__10657, edit, 2 * idx__10659 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10657, edit, 2 * idx__10659, null, 2 * idx__10659 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10669, val_or_node__10670, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10672 = this;
  var inode__10673 = this;
  return cljs.core.create_inode_seq.call(null, this__10672.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10674 = this;
  var inode__10675 = this;
  var bit__10676 = 1 << (hash >>> shift & 31);
  if((this__10674.bitmap & bit__10676) === 0) {
    return inode__10675
  }else {
    var idx__10677 = cljs.core.bitmap_indexed_node_index.call(null, this__10674.bitmap, bit__10676);
    var key_or_nil__10678 = this__10674.arr[2 * idx__10677];
    var val_or_node__10679 = this__10674.arr[2 * idx__10677 + 1];
    if(key_or_nil__10678 == null) {
      var n__10680 = val_or_node__10679.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10680 === val_or_node__10679) {
        return inode__10675
      }else {
        if(!(n__10680 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10675, edit, 2 * idx__10677 + 1, n__10680)
        }else {
          if(this__10674.bitmap === bit__10676) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10675.edit_and_remove_pair(edit, bit__10676, idx__10677)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10678)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10675.edit_and_remove_pair(edit, bit__10676, idx__10677)
      }else {
        if("\ufdd0'else") {
          return inode__10675
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10681 = this;
  var inode__10682 = this;
  if(e === this__10681.edit) {
    return inode__10682
  }else {
    var n__10683 = cljs.core.bit_count.call(null, this__10681.bitmap);
    var new_arr__10684 = cljs.core.make_array.call(null, n__10683 < 0 ? 4 : 2 * (n__10683 + 1));
    cljs.core.array_copy.call(null, this__10681.arr, 0, new_arr__10684, 0, 2 * n__10683);
    return new cljs.core.BitmapIndexedNode(e, this__10681.bitmap, new_arr__10684)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10685 = this;
  var inode__10686 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10685.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10687 = this;
  var inode__10688 = this;
  var bit__10689 = 1 << (hash >>> shift & 31);
  if((this__10687.bitmap & bit__10689) === 0) {
    return not_found
  }else {
    var idx__10690 = cljs.core.bitmap_indexed_node_index.call(null, this__10687.bitmap, bit__10689);
    var key_or_nil__10691 = this__10687.arr[2 * idx__10690];
    var val_or_node__10692 = this__10687.arr[2 * idx__10690 + 1];
    if(key_or_nil__10691 == null) {
      return val_or_node__10692.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10691)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10691, val_or_node__10692], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10693 = this;
  var inode__10694 = this;
  var bit__10695 = 1 << (hash >>> shift & 31);
  if((this__10693.bitmap & bit__10695) === 0) {
    return inode__10694
  }else {
    var idx__10696 = cljs.core.bitmap_indexed_node_index.call(null, this__10693.bitmap, bit__10695);
    var key_or_nil__10697 = this__10693.arr[2 * idx__10696];
    var val_or_node__10698 = this__10693.arr[2 * idx__10696 + 1];
    if(key_or_nil__10697 == null) {
      var n__10699 = val_or_node__10698.inode_without(shift + 5, hash, key);
      if(n__10699 === val_or_node__10698) {
        return inode__10694
      }else {
        if(!(n__10699 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10693.bitmap, cljs.core.clone_and_set.call(null, this__10693.arr, 2 * idx__10696 + 1, n__10699))
        }else {
          if(this__10693.bitmap === bit__10695) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10693.bitmap ^ bit__10695, cljs.core.remove_pair.call(null, this__10693.arr, idx__10696))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10697)) {
        return new cljs.core.BitmapIndexedNode(null, this__10693.bitmap ^ bit__10695, cljs.core.remove_pair.call(null, this__10693.arr, idx__10696))
      }else {
        if("\ufdd0'else") {
          return inode__10694
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10700 = this;
  var inode__10701 = this;
  var bit__10702 = 1 << (hash >>> shift & 31);
  var idx__10703 = cljs.core.bitmap_indexed_node_index.call(null, this__10700.bitmap, bit__10702);
  if((this__10700.bitmap & bit__10702) === 0) {
    var n__10704 = cljs.core.bit_count.call(null, this__10700.bitmap);
    if(n__10704 >= 16) {
      var nodes__10705 = cljs.core.make_array.call(null, 32);
      var jdx__10706 = hash >>> shift & 31;
      nodes__10705[jdx__10706] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10707 = 0;
      var j__10708 = 0;
      while(true) {
        if(i__10707 < 32) {
          if((this__10700.bitmap >>> i__10707 & 1) === 0) {
            var G__10723 = i__10707 + 1;
            var G__10724 = j__10708;
            i__10707 = G__10723;
            j__10708 = G__10724;
            continue
          }else {
            nodes__10705[i__10707] = !(this__10700.arr[j__10708] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10700.arr[j__10708]), this__10700.arr[j__10708], this__10700.arr[j__10708 + 1], added_leaf_QMARK_) : this__10700.arr[j__10708 + 1];
            var G__10725 = i__10707 + 1;
            var G__10726 = j__10708 + 2;
            i__10707 = G__10725;
            j__10708 = G__10726;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10704 + 1, nodes__10705)
    }else {
      var new_arr__10709 = cljs.core.make_array.call(null, 2 * (n__10704 + 1));
      cljs.core.array_copy.call(null, this__10700.arr, 0, new_arr__10709, 0, 2 * idx__10703);
      new_arr__10709[2 * idx__10703] = key;
      new_arr__10709[2 * idx__10703 + 1] = val;
      cljs.core.array_copy.call(null, this__10700.arr, 2 * idx__10703, new_arr__10709, 2 * (idx__10703 + 1), 2 * (n__10704 - idx__10703));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10700.bitmap | bit__10702, new_arr__10709)
    }
  }else {
    var key_or_nil__10710 = this__10700.arr[2 * idx__10703];
    var val_or_node__10711 = this__10700.arr[2 * idx__10703 + 1];
    if(key_or_nil__10710 == null) {
      var n__10712 = val_or_node__10711.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10712 === val_or_node__10711) {
        return inode__10701
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10700.bitmap, cljs.core.clone_and_set.call(null, this__10700.arr, 2 * idx__10703 + 1, n__10712))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10710)) {
        if(val === val_or_node__10711) {
          return inode__10701
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10700.bitmap, cljs.core.clone_and_set.call(null, this__10700.arr, 2 * idx__10703 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10700.bitmap, cljs.core.clone_and_set.call(null, this__10700.arr, 2 * idx__10703, null, 2 * idx__10703 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10710, val_or_node__10711, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10713 = this;
  var inode__10714 = this;
  var bit__10715 = 1 << (hash >>> shift & 31);
  if((this__10713.bitmap & bit__10715) === 0) {
    return not_found
  }else {
    var idx__10716 = cljs.core.bitmap_indexed_node_index.call(null, this__10713.bitmap, bit__10715);
    var key_or_nil__10717 = this__10713.arr[2 * idx__10716];
    var val_or_node__10718 = this__10713.arr[2 * idx__10716 + 1];
    if(key_or_nil__10717 == null) {
      return val_or_node__10718.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10717)) {
        return val_or_node__10718
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10734 = array_node.arr;
  var len__10735 = 2 * (array_node.cnt - 1);
  var new_arr__10736 = cljs.core.make_array.call(null, len__10735);
  var i__10737 = 0;
  var j__10738 = 1;
  var bitmap__10739 = 0;
  while(true) {
    if(i__10737 < len__10735) {
      if(function() {
        var and__3822__auto____10740 = !(i__10737 === idx);
        if(and__3822__auto____10740) {
          return!(arr__10734[i__10737] == null)
        }else {
          return and__3822__auto____10740
        }
      }()) {
        new_arr__10736[j__10738] = arr__10734[i__10737];
        var G__10741 = i__10737 + 1;
        var G__10742 = j__10738 + 2;
        var G__10743 = bitmap__10739 | 1 << i__10737;
        i__10737 = G__10741;
        j__10738 = G__10742;
        bitmap__10739 = G__10743;
        continue
      }else {
        var G__10744 = i__10737 + 1;
        var G__10745 = j__10738;
        var G__10746 = bitmap__10739;
        i__10737 = G__10744;
        j__10738 = G__10745;
        bitmap__10739 = G__10746;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10739, new_arr__10736)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10747 = this;
  var inode__10748 = this;
  var idx__10749 = hash >>> shift & 31;
  var node__10750 = this__10747.arr[idx__10749];
  if(node__10750 == null) {
    var editable__10751 = cljs.core.edit_and_set.call(null, inode__10748, edit, idx__10749, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10751.cnt = editable__10751.cnt + 1;
    return editable__10751
  }else {
    var n__10752 = node__10750.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10752 === node__10750) {
      return inode__10748
    }else {
      return cljs.core.edit_and_set.call(null, inode__10748, edit, idx__10749, n__10752)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10753 = this;
  var inode__10754 = this;
  return cljs.core.create_array_node_seq.call(null, this__10753.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10755 = this;
  var inode__10756 = this;
  var idx__10757 = hash >>> shift & 31;
  var node__10758 = this__10755.arr[idx__10757];
  if(node__10758 == null) {
    return inode__10756
  }else {
    var n__10759 = node__10758.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10759 === node__10758) {
      return inode__10756
    }else {
      if(n__10759 == null) {
        if(this__10755.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10756, edit, idx__10757)
        }else {
          var editable__10760 = cljs.core.edit_and_set.call(null, inode__10756, edit, idx__10757, n__10759);
          editable__10760.cnt = editable__10760.cnt - 1;
          return editable__10760
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10756, edit, idx__10757, n__10759)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10761 = this;
  var inode__10762 = this;
  if(e === this__10761.edit) {
    return inode__10762
  }else {
    return new cljs.core.ArrayNode(e, this__10761.cnt, this__10761.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10763 = this;
  var inode__10764 = this;
  var len__10765 = this__10763.arr.length;
  var i__10766 = 0;
  var init__10767 = init;
  while(true) {
    if(i__10766 < len__10765) {
      var node__10768 = this__10763.arr[i__10766];
      if(!(node__10768 == null)) {
        var init__10769 = node__10768.kv_reduce(f, init__10767);
        if(cljs.core.reduced_QMARK_.call(null, init__10769)) {
          return cljs.core.deref.call(null, init__10769)
        }else {
          var G__10788 = i__10766 + 1;
          var G__10789 = init__10769;
          i__10766 = G__10788;
          init__10767 = G__10789;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10767
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10770 = this;
  var inode__10771 = this;
  var idx__10772 = hash >>> shift & 31;
  var node__10773 = this__10770.arr[idx__10772];
  if(!(node__10773 == null)) {
    return node__10773.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10774 = this;
  var inode__10775 = this;
  var idx__10776 = hash >>> shift & 31;
  var node__10777 = this__10774.arr[idx__10776];
  if(!(node__10777 == null)) {
    var n__10778 = node__10777.inode_without(shift + 5, hash, key);
    if(n__10778 === node__10777) {
      return inode__10775
    }else {
      if(n__10778 == null) {
        if(this__10774.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10775, null, idx__10776)
        }else {
          return new cljs.core.ArrayNode(null, this__10774.cnt - 1, cljs.core.clone_and_set.call(null, this__10774.arr, idx__10776, n__10778))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10774.cnt, cljs.core.clone_and_set.call(null, this__10774.arr, idx__10776, n__10778))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10775
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10779 = this;
  var inode__10780 = this;
  var idx__10781 = hash >>> shift & 31;
  var node__10782 = this__10779.arr[idx__10781];
  if(node__10782 == null) {
    return new cljs.core.ArrayNode(null, this__10779.cnt + 1, cljs.core.clone_and_set.call(null, this__10779.arr, idx__10781, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10783 = node__10782.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10783 === node__10782) {
      return inode__10780
    }else {
      return new cljs.core.ArrayNode(null, this__10779.cnt, cljs.core.clone_and_set.call(null, this__10779.arr, idx__10781, n__10783))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10784 = this;
  var inode__10785 = this;
  var idx__10786 = hash >>> shift & 31;
  var node__10787 = this__10784.arr[idx__10786];
  if(!(node__10787 == null)) {
    return node__10787.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10792 = 2 * cnt;
  var i__10793 = 0;
  while(true) {
    if(i__10793 < lim__10792) {
      if(cljs.core.key_test.call(null, key, arr[i__10793])) {
        return i__10793
      }else {
        var G__10794 = i__10793 + 2;
        i__10793 = G__10794;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10795 = this;
  var inode__10796 = this;
  if(hash === this__10795.collision_hash) {
    var idx__10797 = cljs.core.hash_collision_node_find_index.call(null, this__10795.arr, this__10795.cnt, key);
    if(idx__10797 === -1) {
      if(this__10795.arr.length > 2 * this__10795.cnt) {
        var editable__10798 = cljs.core.edit_and_set.call(null, inode__10796, edit, 2 * this__10795.cnt, key, 2 * this__10795.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10798.cnt = editable__10798.cnt + 1;
        return editable__10798
      }else {
        var len__10799 = this__10795.arr.length;
        var new_arr__10800 = cljs.core.make_array.call(null, len__10799 + 2);
        cljs.core.array_copy.call(null, this__10795.arr, 0, new_arr__10800, 0, len__10799);
        new_arr__10800[len__10799] = key;
        new_arr__10800[len__10799 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10796.ensure_editable_array(edit, this__10795.cnt + 1, new_arr__10800)
      }
    }else {
      if(this__10795.arr[idx__10797 + 1] === val) {
        return inode__10796
      }else {
        return cljs.core.edit_and_set.call(null, inode__10796, edit, idx__10797 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10795.collision_hash >>> shift & 31), [null, inode__10796, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10801 = this;
  var inode__10802 = this;
  return cljs.core.create_inode_seq.call(null, this__10801.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10803 = this;
  var inode__10804 = this;
  var idx__10805 = cljs.core.hash_collision_node_find_index.call(null, this__10803.arr, this__10803.cnt, key);
  if(idx__10805 === -1) {
    return inode__10804
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10803.cnt === 1) {
      return null
    }else {
      var editable__10806 = inode__10804.ensure_editable(edit);
      var earr__10807 = editable__10806.arr;
      earr__10807[idx__10805] = earr__10807[2 * this__10803.cnt - 2];
      earr__10807[idx__10805 + 1] = earr__10807[2 * this__10803.cnt - 1];
      earr__10807[2 * this__10803.cnt - 1] = null;
      earr__10807[2 * this__10803.cnt - 2] = null;
      editable__10806.cnt = editable__10806.cnt - 1;
      return editable__10806
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10808 = this;
  var inode__10809 = this;
  if(e === this__10808.edit) {
    return inode__10809
  }else {
    var new_arr__10810 = cljs.core.make_array.call(null, 2 * (this__10808.cnt + 1));
    cljs.core.array_copy.call(null, this__10808.arr, 0, new_arr__10810, 0, 2 * this__10808.cnt);
    return new cljs.core.HashCollisionNode(e, this__10808.collision_hash, this__10808.cnt, new_arr__10810)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10811 = this;
  var inode__10812 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10811.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10813 = this;
  var inode__10814 = this;
  var idx__10815 = cljs.core.hash_collision_node_find_index.call(null, this__10813.arr, this__10813.cnt, key);
  if(idx__10815 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10813.arr[idx__10815])) {
      return cljs.core.PersistentVector.fromArray([this__10813.arr[idx__10815], this__10813.arr[idx__10815 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10816 = this;
  var inode__10817 = this;
  var idx__10818 = cljs.core.hash_collision_node_find_index.call(null, this__10816.arr, this__10816.cnt, key);
  if(idx__10818 === -1) {
    return inode__10817
  }else {
    if(this__10816.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10816.collision_hash, this__10816.cnt - 1, cljs.core.remove_pair.call(null, this__10816.arr, cljs.core.quot.call(null, idx__10818, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10819 = this;
  var inode__10820 = this;
  if(hash === this__10819.collision_hash) {
    var idx__10821 = cljs.core.hash_collision_node_find_index.call(null, this__10819.arr, this__10819.cnt, key);
    if(idx__10821 === -1) {
      var len__10822 = this__10819.arr.length;
      var new_arr__10823 = cljs.core.make_array.call(null, len__10822 + 2);
      cljs.core.array_copy.call(null, this__10819.arr, 0, new_arr__10823, 0, len__10822);
      new_arr__10823[len__10822] = key;
      new_arr__10823[len__10822 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10819.collision_hash, this__10819.cnt + 1, new_arr__10823)
    }else {
      if(cljs.core._EQ_.call(null, this__10819.arr[idx__10821], val)) {
        return inode__10820
      }else {
        return new cljs.core.HashCollisionNode(null, this__10819.collision_hash, this__10819.cnt, cljs.core.clone_and_set.call(null, this__10819.arr, idx__10821 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10819.collision_hash >>> shift & 31), [null, inode__10820])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10824 = this;
  var inode__10825 = this;
  var idx__10826 = cljs.core.hash_collision_node_find_index.call(null, this__10824.arr, this__10824.cnt, key);
  if(idx__10826 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10824.arr[idx__10826])) {
      return this__10824.arr[idx__10826 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10827 = this;
  var inode__10828 = this;
  if(e === this__10827.edit) {
    this__10827.arr = array;
    this__10827.cnt = count;
    return inode__10828
  }else {
    return new cljs.core.HashCollisionNode(this__10827.edit, this__10827.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10833 = cljs.core.hash.call(null, key1);
    if(key1hash__10833 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10833, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10834 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10833, key1, val1, added_leaf_QMARK___10834).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10834)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10835 = cljs.core.hash.call(null, key1);
    if(key1hash__10835 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10835, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10836 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10835, key1, val1, added_leaf_QMARK___10836).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10836)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10837 = this;
  var h__2192__auto____10838 = this__10837.__hash;
  if(!(h__2192__auto____10838 == null)) {
    return h__2192__auto____10838
  }else {
    var h__2192__auto____10839 = cljs.core.hash_coll.call(null, coll);
    this__10837.__hash = h__2192__auto____10839;
    return h__2192__auto____10839
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10840 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10841 = this;
  var this__10842 = this;
  return cljs.core.pr_str.call(null, this__10842)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10843 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10844 = this;
  if(this__10844.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10844.nodes[this__10844.i], this__10844.nodes[this__10844.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10844.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10845 = this;
  if(this__10845.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10845.nodes, this__10845.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10845.nodes, this__10845.i, cljs.core.next.call(null, this__10845.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10846 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10847 = this;
  return new cljs.core.NodeSeq(meta, this__10847.nodes, this__10847.i, this__10847.s, this__10847.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10848 = this;
  return this__10848.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10849 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10849.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10856 = nodes.length;
      var j__10857 = i;
      while(true) {
        if(j__10857 < len__10856) {
          if(!(nodes[j__10857] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10857, null, null)
          }else {
            var temp__3971__auto____10858 = nodes[j__10857 + 1];
            if(cljs.core.truth_(temp__3971__auto____10858)) {
              var node__10859 = temp__3971__auto____10858;
              var temp__3971__auto____10860 = node__10859.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10860)) {
                var node_seq__10861 = temp__3971__auto____10860;
                return new cljs.core.NodeSeq(null, nodes, j__10857 + 2, node_seq__10861, null)
              }else {
                var G__10862 = j__10857 + 2;
                j__10857 = G__10862;
                continue
              }
            }else {
              var G__10863 = j__10857 + 2;
              j__10857 = G__10863;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10864 = this;
  var h__2192__auto____10865 = this__10864.__hash;
  if(!(h__2192__auto____10865 == null)) {
    return h__2192__auto____10865
  }else {
    var h__2192__auto____10866 = cljs.core.hash_coll.call(null, coll);
    this__10864.__hash = h__2192__auto____10866;
    return h__2192__auto____10866
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10867 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10868 = this;
  var this__10869 = this;
  return cljs.core.pr_str.call(null, this__10869)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10870 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10871 = this;
  return cljs.core.first.call(null, this__10871.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10872 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10872.nodes, this__10872.i, cljs.core.next.call(null, this__10872.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10873 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10874 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10874.nodes, this__10874.i, this__10874.s, this__10874.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10875 = this;
  return this__10875.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10876 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10876.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10883 = nodes.length;
      var j__10884 = i;
      while(true) {
        if(j__10884 < len__10883) {
          var temp__3971__auto____10885 = nodes[j__10884];
          if(cljs.core.truth_(temp__3971__auto____10885)) {
            var nj__10886 = temp__3971__auto____10885;
            var temp__3971__auto____10887 = nj__10886.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10887)) {
              var ns__10888 = temp__3971__auto____10887;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10884 + 1, ns__10888, null)
            }else {
              var G__10889 = j__10884 + 1;
              j__10884 = G__10889;
              continue
            }
          }else {
            var G__10890 = j__10884 + 1;
            j__10884 = G__10890;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10893 = this;
  return new cljs.core.TransientHashMap({}, this__10893.root, this__10893.cnt, this__10893.has_nil_QMARK_, this__10893.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10894 = this;
  var h__2192__auto____10895 = this__10894.__hash;
  if(!(h__2192__auto____10895 == null)) {
    return h__2192__auto____10895
  }else {
    var h__2192__auto____10896 = cljs.core.hash_imap.call(null, coll);
    this__10894.__hash = h__2192__auto____10896;
    return h__2192__auto____10896
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10897 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10898 = this;
  if(k == null) {
    if(this__10898.has_nil_QMARK_) {
      return this__10898.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10898.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10898.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10899 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10900 = this__10899.has_nil_QMARK_;
      if(and__3822__auto____10900) {
        return v === this__10899.nil_val
      }else {
        return and__3822__auto____10900
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10899.meta, this__10899.has_nil_QMARK_ ? this__10899.cnt : this__10899.cnt + 1, this__10899.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10901 = new cljs.core.Box(false);
    var new_root__10902 = (this__10899.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10899.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10901);
    if(new_root__10902 === this__10899.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10899.meta, added_leaf_QMARK___10901.val ? this__10899.cnt + 1 : this__10899.cnt, new_root__10902, this__10899.has_nil_QMARK_, this__10899.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10903 = this;
  if(k == null) {
    return this__10903.has_nil_QMARK_
  }else {
    if(this__10903.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10903.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10926 = null;
  var G__10926__2 = function(this_sym10904, k) {
    var this__10906 = this;
    var this_sym10904__10907 = this;
    var coll__10908 = this_sym10904__10907;
    return coll__10908.cljs$core$ILookup$_lookup$arity$2(coll__10908, k)
  };
  var G__10926__3 = function(this_sym10905, k, not_found) {
    var this__10906 = this;
    var this_sym10905__10909 = this;
    var coll__10910 = this_sym10905__10909;
    return coll__10910.cljs$core$ILookup$_lookup$arity$3(coll__10910, k, not_found)
  };
  G__10926 = function(this_sym10905, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10926__2.call(this, this_sym10905, k);
      case 3:
        return G__10926__3.call(this, this_sym10905, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10926
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10891, args10892) {
  var this__10911 = this;
  return this_sym10891.call.apply(this_sym10891, [this_sym10891].concat(args10892.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10912 = this;
  var init__10913 = this__10912.has_nil_QMARK_ ? f.call(null, init, null, this__10912.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10913)) {
    return cljs.core.deref.call(null, init__10913)
  }else {
    if(!(this__10912.root == null)) {
      return this__10912.root.kv_reduce(f, init__10913)
    }else {
      if("\ufdd0'else") {
        return init__10913
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10914 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10915 = this;
  var this__10916 = this;
  return cljs.core.pr_str.call(null, this__10916)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10917 = this;
  if(this__10917.cnt > 0) {
    var s__10918 = !(this__10917.root == null) ? this__10917.root.inode_seq() : null;
    if(this__10917.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10917.nil_val], true), s__10918)
    }else {
      return s__10918
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10919 = this;
  return this__10919.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10920 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10921 = this;
  return new cljs.core.PersistentHashMap(meta, this__10921.cnt, this__10921.root, this__10921.has_nil_QMARK_, this__10921.nil_val, this__10921.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10922 = this;
  return this__10922.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10923 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10923.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10924 = this;
  if(k == null) {
    if(this__10924.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10924.meta, this__10924.cnt - 1, this__10924.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10924.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10925 = this__10924.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10925 === this__10924.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10924.meta, this__10924.cnt - 1, new_root__10925, this__10924.has_nil_QMARK_, this__10924.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10927 = ks.length;
  var i__10928 = 0;
  var out__10929 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10928 < len__10927) {
      var G__10930 = i__10928 + 1;
      var G__10931 = cljs.core.assoc_BANG_.call(null, out__10929, ks[i__10928], vs[i__10928]);
      i__10928 = G__10930;
      out__10929 = G__10931;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10929)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10932 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10933 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10934 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10935 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10936 = this;
  if(k == null) {
    if(this__10936.has_nil_QMARK_) {
      return this__10936.nil_val
    }else {
      return null
    }
  }else {
    if(this__10936.root == null) {
      return null
    }else {
      return this__10936.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10937 = this;
  if(k == null) {
    if(this__10937.has_nil_QMARK_) {
      return this__10937.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10937.root == null) {
      return not_found
    }else {
      return this__10937.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10938 = this;
  if(this__10938.edit) {
    return this__10938.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10939 = this;
  var tcoll__10940 = this;
  if(this__10939.edit) {
    if(function() {
      var G__10941__10942 = o;
      if(G__10941__10942) {
        if(function() {
          var or__3824__auto____10943 = G__10941__10942.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10943) {
            return or__3824__auto____10943
          }else {
            return G__10941__10942.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10941__10942.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10941__10942)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10941__10942)
      }
    }()) {
      return tcoll__10940.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10944 = cljs.core.seq.call(null, o);
      var tcoll__10945 = tcoll__10940;
      while(true) {
        var temp__3971__auto____10946 = cljs.core.first.call(null, es__10944);
        if(cljs.core.truth_(temp__3971__auto____10946)) {
          var e__10947 = temp__3971__auto____10946;
          var G__10958 = cljs.core.next.call(null, es__10944);
          var G__10959 = tcoll__10945.assoc_BANG_(cljs.core.key.call(null, e__10947), cljs.core.val.call(null, e__10947));
          es__10944 = G__10958;
          tcoll__10945 = G__10959;
          continue
        }else {
          return tcoll__10945
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10948 = this;
  var tcoll__10949 = this;
  if(this__10948.edit) {
    if(k == null) {
      if(this__10948.nil_val === v) {
      }else {
        this__10948.nil_val = v
      }
      if(this__10948.has_nil_QMARK_) {
      }else {
        this__10948.count = this__10948.count + 1;
        this__10948.has_nil_QMARK_ = true
      }
      return tcoll__10949
    }else {
      var added_leaf_QMARK___10950 = new cljs.core.Box(false);
      var node__10951 = (this__10948.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10948.root).inode_assoc_BANG_(this__10948.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10950);
      if(node__10951 === this__10948.root) {
      }else {
        this__10948.root = node__10951
      }
      if(added_leaf_QMARK___10950.val) {
        this__10948.count = this__10948.count + 1
      }else {
      }
      return tcoll__10949
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10952 = this;
  var tcoll__10953 = this;
  if(this__10952.edit) {
    if(k == null) {
      if(this__10952.has_nil_QMARK_) {
        this__10952.has_nil_QMARK_ = false;
        this__10952.nil_val = null;
        this__10952.count = this__10952.count - 1;
        return tcoll__10953
      }else {
        return tcoll__10953
      }
    }else {
      if(this__10952.root == null) {
        return tcoll__10953
      }else {
        var removed_leaf_QMARK___10954 = new cljs.core.Box(false);
        var node__10955 = this__10952.root.inode_without_BANG_(this__10952.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10954);
        if(node__10955 === this__10952.root) {
        }else {
          this__10952.root = node__10955
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10954[0])) {
          this__10952.count = this__10952.count - 1
        }else {
        }
        return tcoll__10953
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10956 = this;
  var tcoll__10957 = this;
  if(this__10956.edit) {
    this__10956.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10956.count, this__10956.root, this__10956.has_nil_QMARK_, this__10956.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10962 = node;
  var stack__10963 = stack;
  while(true) {
    if(!(t__10962 == null)) {
      var G__10964 = ascending_QMARK_ ? t__10962.left : t__10962.right;
      var G__10965 = cljs.core.conj.call(null, stack__10963, t__10962);
      t__10962 = G__10964;
      stack__10963 = G__10965;
      continue
    }else {
      return stack__10963
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10966 = this;
  var h__2192__auto____10967 = this__10966.__hash;
  if(!(h__2192__auto____10967 == null)) {
    return h__2192__auto____10967
  }else {
    var h__2192__auto____10968 = cljs.core.hash_coll.call(null, coll);
    this__10966.__hash = h__2192__auto____10968;
    return h__2192__auto____10968
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10969 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10970 = this;
  var this__10971 = this;
  return cljs.core.pr_str.call(null, this__10971)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10972 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10973 = this;
  if(this__10973.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10973.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10974 = this;
  return cljs.core.peek.call(null, this__10974.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10975 = this;
  var t__10976 = cljs.core.first.call(null, this__10975.stack);
  var next_stack__10977 = cljs.core.tree_map_seq_push.call(null, this__10975.ascending_QMARK_ ? t__10976.right : t__10976.left, cljs.core.next.call(null, this__10975.stack), this__10975.ascending_QMARK_);
  if(!(next_stack__10977 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10977, this__10975.ascending_QMARK_, this__10975.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10978 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10979 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10979.stack, this__10979.ascending_QMARK_, this__10979.cnt, this__10979.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10980 = this;
  return this__10980.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10982 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10982) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10982
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10984 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10984) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10984
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10988 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10988)) {
    return cljs.core.deref.call(null, init__10988)
  }else {
    var init__10989 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10988) : init__10988;
    if(cljs.core.reduced_QMARK_.call(null, init__10989)) {
      return cljs.core.deref.call(null, init__10989)
    }else {
      var init__10990 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10989) : init__10989;
      if(cljs.core.reduced_QMARK_.call(null, init__10990)) {
        return cljs.core.deref.call(null, init__10990)
      }else {
        return init__10990
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10993 = this;
  var h__2192__auto____10994 = this__10993.__hash;
  if(!(h__2192__auto____10994 == null)) {
    return h__2192__auto____10994
  }else {
    var h__2192__auto____10995 = cljs.core.hash_coll.call(null, coll);
    this__10993.__hash = h__2192__auto____10995;
    return h__2192__auto____10995
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10996 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10997 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10998 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10998.key, this__10998.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11046 = null;
  var G__11046__2 = function(this_sym10999, k) {
    var this__11001 = this;
    var this_sym10999__11002 = this;
    var node__11003 = this_sym10999__11002;
    return node__11003.cljs$core$ILookup$_lookup$arity$2(node__11003, k)
  };
  var G__11046__3 = function(this_sym11000, k, not_found) {
    var this__11001 = this;
    var this_sym11000__11004 = this;
    var node__11005 = this_sym11000__11004;
    return node__11005.cljs$core$ILookup$_lookup$arity$3(node__11005, k, not_found)
  };
  G__11046 = function(this_sym11000, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11046__2.call(this, this_sym11000, k);
      case 3:
        return G__11046__3.call(this, this_sym11000, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11046
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10991, args10992) {
  var this__11006 = this;
  return this_sym10991.call.apply(this_sym10991, [this_sym10991].concat(args10992.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11007 = this;
  return cljs.core.PersistentVector.fromArray([this__11007.key, this__11007.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11008 = this;
  return this__11008.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11009 = this;
  return this__11009.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__11010 = this;
  var node__11011 = this;
  return ins.balance_right(node__11011)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__11012 = this;
  var node__11013 = this;
  return new cljs.core.RedNode(this__11012.key, this__11012.val, this__11012.left, this__11012.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__11014 = this;
  var node__11015 = this;
  return cljs.core.balance_right_del.call(null, this__11014.key, this__11014.val, this__11014.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__11016 = this;
  var node__11017 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__11018 = this;
  var node__11019 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11019, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__11020 = this;
  var node__11021 = this;
  return cljs.core.balance_left_del.call(null, this__11020.key, this__11020.val, del, this__11020.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__11022 = this;
  var node__11023 = this;
  return ins.balance_left(node__11023)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__11024 = this;
  var node__11025 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__11025, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__11047 = null;
  var G__11047__0 = function() {
    var this__11026 = this;
    var this__11028 = this;
    return cljs.core.pr_str.call(null, this__11028)
  };
  G__11047 = function() {
    switch(arguments.length) {
      case 0:
        return G__11047__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11047
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__11029 = this;
  var node__11030 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11030, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__11031 = this;
  var node__11032 = this;
  return node__11032
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11033 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11034 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11035 = this;
  return cljs.core.list.call(null, this__11035.key, this__11035.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11036 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11037 = this;
  return this__11037.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11038 = this;
  return cljs.core.PersistentVector.fromArray([this__11038.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11039 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11039.key, this__11039.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11040 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11041 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11041.key, this__11041.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11042 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11043 = this;
  if(n === 0) {
    return this__11043.key
  }else {
    if(n === 1) {
      return this__11043.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11044 = this;
  if(n === 0) {
    return this__11044.key
  }else {
    if(n === 1) {
      return this__11044.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11045 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11050 = this;
  var h__2192__auto____11051 = this__11050.__hash;
  if(!(h__2192__auto____11051 == null)) {
    return h__2192__auto____11051
  }else {
    var h__2192__auto____11052 = cljs.core.hash_coll.call(null, coll);
    this__11050.__hash = h__2192__auto____11052;
    return h__2192__auto____11052
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11053 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11054 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11055 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11055.key, this__11055.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__11103 = null;
  var G__11103__2 = function(this_sym11056, k) {
    var this__11058 = this;
    var this_sym11056__11059 = this;
    var node__11060 = this_sym11056__11059;
    return node__11060.cljs$core$ILookup$_lookup$arity$2(node__11060, k)
  };
  var G__11103__3 = function(this_sym11057, k, not_found) {
    var this__11058 = this;
    var this_sym11057__11061 = this;
    var node__11062 = this_sym11057__11061;
    return node__11062.cljs$core$ILookup$_lookup$arity$3(node__11062, k, not_found)
  };
  G__11103 = function(this_sym11057, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11103__2.call(this, this_sym11057, k);
      case 3:
        return G__11103__3.call(this, this_sym11057, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11103
}();
cljs.core.RedNode.prototype.apply = function(this_sym11048, args11049) {
  var this__11063 = this;
  return this_sym11048.call.apply(this_sym11048, [this_sym11048].concat(args11049.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11064 = this;
  return cljs.core.PersistentVector.fromArray([this__11064.key, this__11064.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11065 = this;
  return this__11065.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11066 = this;
  return this__11066.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__11067 = this;
  var node__11068 = this;
  return new cljs.core.RedNode(this__11067.key, this__11067.val, this__11067.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__11069 = this;
  var node__11070 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__11071 = this;
  var node__11072 = this;
  return new cljs.core.RedNode(this__11071.key, this__11071.val, this__11071.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__11073 = this;
  var node__11074 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__11075 = this;
  var node__11076 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11076, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__11077 = this;
  var node__11078 = this;
  return new cljs.core.RedNode(this__11077.key, this__11077.val, del, this__11077.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__11079 = this;
  var node__11080 = this;
  return new cljs.core.RedNode(this__11079.key, this__11079.val, ins, this__11079.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__11081 = this;
  var node__11082 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11081.left)) {
    return new cljs.core.RedNode(this__11081.key, this__11081.val, this__11081.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__11081.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11081.right)) {
      return new cljs.core.RedNode(this__11081.right.key, this__11081.right.val, new cljs.core.BlackNode(this__11081.key, this__11081.val, this__11081.left, this__11081.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__11081.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__11082, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__11104 = null;
  var G__11104__0 = function() {
    var this__11083 = this;
    var this__11085 = this;
    return cljs.core.pr_str.call(null, this__11085)
  };
  G__11104 = function() {
    switch(arguments.length) {
      case 0:
        return G__11104__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11104
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__11086 = this;
  var node__11087 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11086.right)) {
    return new cljs.core.RedNode(this__11086.key, this__11086.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11086.left, null), this__11086.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11086.left)) {
      return new cljs.core.RedNode(this__11086.left.key, this__11086.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11086.left.left, null), new cljs.core.BlackNode(this__11086.key, this__11086.val, this__11086.left.right, this__11086.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11087, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__11088 = this;
  var node__11089 = this;
  return new cljs.core.BlackNode(this__11088.key, this__11088.val, this__11088.left, this__11088.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11090 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11091 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11092 = this;
  return cljs.core.list.call(null, this__11092.key, this__11092.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11093 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11094 = this;
  return this__11094.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11095 = this;
  return cljs.core.PersistentVector.fromArray([this__11095.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11096 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11096.key, this__11096.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11097 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11098 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11098.key, this__11098.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11099 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11100 = this;
  if(n === 0) {
    return this__11100.key
  }else {
    if(n === 1) {
      return this__11100.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11101 = this;
  if(n === 0) {
    return this__11101.key
  }else {
    if(n === 1) {
      return this__11101.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11102 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__11108 = comp.call(null, k, tree.key);
    if(c__11108 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__11108 < 0) {
        var ins__11109 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__11109 == null)) {
          return tree.add_left(ins__11109)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__11110 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__11110 == null)) {
            return tree.add_right(ins__11110)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__11113 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11113)) {
            return new cljs.core.RedNode(app__11113.key, app__11113.val, new cljs.core.RedNode(left.key, left.val, left.left, app__11113.left, null), new cljs.core.RedNode(right.key, right.val, app__11113.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__11113, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__11114 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11114)) {
              return new cljs.core.RedNode(app__11114.key, app__11114.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__11114.left, null), new cljs.core.BlackNode(right.key, right.val, app__11114.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__11114, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__11120 = comp.call(null, k, tree.key);
    if(c__11120 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__11120 < 0) {
        var del__11121 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____11122 = !(del__11121 == null);
          if(or__3824__auto____11122) {
            return or__3824__auto____11122
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__11121, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__11121, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__11123 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____11124 = !(del__11123 == null);
            if(or__3824__auto____11124) {
              return or__3824__auto____11124
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__11123)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__11123, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__11127 = tree.key;
  var c__11128 = comp.call(null, k, tk__11127);
  if(c__11128 === 0) {
    return tree.replace(tk__11127, v, tree.left, tree.right)
  }else {
    if(c__11128 < 0) {
      return tree.replace(tk__11127, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__11127, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11131 = this;
  var h__2192__auto____11132 = this__11131.__hash;
  if(!(h__2192__auto____11132 == null)) {
    return h__2192__auto____11132
  }else {
    var h__2192__auto____11133 = cljs.core.hash_imap.call(null, coll);
    this__11131.__hash = h__2192__auto____11133;
    return h__2192__auto____11133
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11134 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11135 = this;
  var n__11136 = coll.entry_at(k);
  if(!(n__11136 == null)) {
    return n__11136.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11137 = this;
  var found__11138 = [null];
  var t__11139 = cljs.core.tree_map_add.call(null, this__11137.comp, this__11137.tree, k, v, found__11138);
  if(t__11139 == null) {
    var found_node__11140 = cljs.core.nth.call(null, found__11138, 0);
    if(cljs.core._EQ_.call(null, v, found_node__11140.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11137.comp, cljs.core.tree_map_replace.call(null, this__11137.comp, this__11137.tree, k, v), this__11137.cnt, this__11137.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11137.comp, t__11139.blacken(), this__11137.cnt + 1, this__11137.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11141 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11175 = null;
  var G__11175__2 = function(this_sym11142, k) {
    var this__11144 = this;
    var this_sym11142__11145 = this;
    var coll__11146 = this_sym11142__11145;
    return coll__11146.cljs$core$ILookup$_lookup$arity$2(coll__11146, k)
  };
  var G__11175__3 = function(this_sym11143, k, not_found) {
    var this__11144 = this;
    var this_sym11143__11147 = this;
    var coll__11148 = this_sym11143__11147;
    return coll__11148.cljs$core$ILookup$_lookup$arity$3(coll__11148, k, not_found)
  };
  G__11175 = function(this_sym11143, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11175__2.call(this, this_sym11143, k);
      case 3:
        return G__11175__3.call(this, this_sym11143, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11175
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym11129, args11130) {
  var this__11149 = this;
  return this_sym11129.call.apply(this_sym11129, [this_sym11129].concat(args11130.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11150 = this;
  if(!(this__11150.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__11150.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11151 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11152 = this;
  if(this__11152.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11152.tree, false, this__11152.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__11153 = this;
  var this__11154 = this;
  return cljs.core.pr_str.call(null, this__11154)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__11155 = this;
  var coll__11156 = this;
  var t__11157 = this__11155.tree;
  while(true) {
    if(!(t__11157 == null)) {
      var c__11158 = this__11155.comp.call(null, k, t__11157.key);
      if(c__11158 === 0) {
        return t__11157
      }else {
        if(c__11158 < 0) {
          var G__11176 = t__11157.left;
          t__11157 = G__11176;
          continue
        }else {
          if("\ufdd0'else") {
            var G__11177 = t__11157.right;
            t__11157 = G__11177;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11159 = this;
  if(this__11159.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11159.tree, ascending_QMARK_, this__11159.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11160 = this;
  if(this__11160.cnt > 0) {
    var stack__11161 = null;
    var t__11162 = this__11160.tree;
    while(true) {
      if(!(t__11162 == null)) {
        var c__11163 = this__11160.comp.call(null, k, t__11162.key);
        if(c__11163 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__11161, t__11162), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__11163 < 0) {
              var G__11178 = cljs.core.conj.call(null, stack__11161, t__11162);
              var G__11179 = t__11162.left;
              stack__11161 = G__11178;
              t__11162 = G__11179;
              continue
            }else {
              var G__11180 = stack__11161;
              var G__11181 = t__11162.right;
              stack__11161 = G__11180;
              t__11162 = G__11181;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__11163 > 0) {
                var G__11182 = cljs.core.conj.call(null, stack__11161, t__11162);
                var G__11183 = t__11162.right;
                stack__11161 = G__11182;
                t__11162 = G__11183;
                continue
              }else {
                var G__11184 = stack__11161;
                var G__11185 = t__11162.left;
                stack__11161 = G__11184;
                t__11162 = G__11185;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__11161 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__11161, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11164 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11165 = this;
  return this__11165.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11166 = this;
  if(this__11166.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11166.tree, true, this__11166.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11167 = this;
  return this__11167.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11168 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11169 = this;
  return new cljs.core.PersistentTreeMap(this__11169.comp, this__11169.tree, this__11169.cnt, meta, this__11169.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11170 = this;
  return this__11170.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11171 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__11171.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11172 = this;
  var found__11173 = [null];
  var t__11174 = cljs.core.tree_map_remove.call(null, this__11172.comp, this__11172.tree, k, found__11173);
  if(t__11174 == null) {
    if(cljs.core.nth.call(null, found__11173, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11172.comp, null, 0, this__11172.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11172.comp, t__11174.blacken(), this__11172.cnt - 1, this__11172.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__11188 = cljs.core.seq.call(null, keyvals);
    var out__11189 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__11188) {
        var G__11190 = cljs.core.nnext.call(null, in__11188);
        var G__11191 = cljs.core.assoc_BANG_.call(null, out__11189, cljs.core.first.call(null, in__11188), cljs.core.second.call(null, in__11188));
        in__11188 = G__11190;
        out__11189 = G__11191;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11189)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11192) {
    var keyvals = cljs.core.seq(arglist__11192);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11193) {
    var keyvals = cljs.core.seq(arglist__11193);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__11197 = [];
    var obj__11198 = {};
    var kvs__11199 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__11199) {
        ks__11197.push(cljs.core.first.call(null, kvs__11199));
        obj__11198[cljs.core.first.call(null, kvs__11199)] = cljs.core.second.call(null, kvs__11199);
        var G__11200 = cljs.core.nnext.call(null, kvs__11199);
        kvs__11199 = G__11200;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__11197, obj__11198)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11201) {
    var keyvals = cljs.core.seq(arglist__11201);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__11204 = cljs.core.seq.call(null, keyvals);
    var out__11205 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__11204) {
        var G__11206 = cljs.core.nnext.call(null, in__11204);
        var G__11207 = cljs.core.assoc.call(null, out__11205, cljs.core.first.call(null, in__11204), cljs.core.second.call(null, in__11204));
        in__11204 = G__11206;
        out__11205 = G__11207;
        continue
      }else {
        return out__11205
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11208) {
    var keyvals = cljs.core.seq(arglist__11208);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__11211 = cljs.core.seq.call(null, keyvals);
    var out__11212 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__11211) {
        var G__11213 = cljs.core.nnext.call(null, in__11211);
        var G__11214 = cljs.core.assoc.call(null, out__11212, cljs.core.first.call(null, in__11211), cljs.core.second.call(null, in__11211));
        in__11211 = G__11213;
        out__11212 = G__11214;
        continue
      }else {
        return out__11212
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11215) {
    var comparator = cljs.core.first(arglist__11215);
    var keyvals = cljs.core.rest(arglist__11215);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11216_SHARP_, p2__11217_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____11219 = p1__11216_SHARP_;
          if(cljs.core.truth_(or__3824__auto____11219)) {
            return or__3824__auto____11219
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__11217_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11220) {
    var maps = cljs.core.seq(arglist__11220);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__11228 = function(m, e) {
        var k__11226 = cljs.core.first.call(null, e);
        var v__11227 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__11226)) {
          return cljs.core.assoc.call(null, m, k__11226, f.call(null, cljs.core._lookup.call(null, m, k__11226, null), v__11227))
        }else {
          return cljs.core.assoc.call(null, m, k__11226, v__11227)
        }
      };
      var merge2__11230 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__11228, function() {
          var or__3824__auto____11229 = m1;
          if(cljs.core.truth_(or__3824__auto____11229)) {
            return or__3824__auto____11229
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__11230, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11231) {
    var f = cljs.core.first(arglist__11231);
    var maps = cljs.core.rest(arglist__11231);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__11236 = cljs.core.ObjMap.EMPTY;
  var keys__11237 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__11237) {
      var key__11238 = cljs.core.first.call(null, keys__11237);
      var entry__11239 = cljs.core._lookup.call(null, map, key__11238, "\ufdd0'cljs.core/not-found");
      var G__11240 = cljs.core.not_EQ_.call(null, entry__11239, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__11236, key__11238, entry__11239) : ret__11236;
      var G__11241 = cljs.core.next.call(null, keys__11237);
      ret__11236 = G__11240;
      keys__11237 = G__11241;
      continue
    }else {
      return ret__11236
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11245 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__11245.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11246 = this;
  var h__2192__auto____11247 = this__11246.__hash;
  if(!(h__2192__auto____11247 == null)) {
    return h__2192__auto____11247
  }else {
    var h__2192__auto____11248 = cljs.core.hash_iset.call(null, coll);
    this__11246.__hash = h__2192__auto____11248;
    return h__2192__auto____11248
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11249 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11250 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11250.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11271 = null;
  var G__11271__2 = function(this_sym11251, k) {
    var this__11253 = this;
    var this_sym11251__11254 = this;
    var coll__11255 = this_sym11251__11254;
    return coll__11255.cljs$core$ILookup$_lookup$arity$2(coll__11255, k)
  };
  var G__11271__3 = function(this_sym11252, k, not_found) {
    var this__11253 = this;
    var this_sym11252__11256 = this;
    var coll__11257 = this_sym11252__11256;
    return coll__11257.cljs$core$ILookup$_lookup$arity$3(coll__11257, k, not_found)
  };
  G__11271 = function(this_sym11252, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11271__2.call(this, this_sym11252, k);
      case 3:
        return G__11271__3.call(this, this_sym11252, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11271
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym11243, args11244) {
  var this__11258 = this;
  return this_sym11243.call.apply(this_sym11243, [this_sym11243].concat(args11244.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11259 = this;
  return new cljs.core.PersistentHashSet(this__11259.meta, cljs.core.assoc.call(null, this__11259.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__11260 = this;
  var this__11261 = this;
  return cljs.core.pr_str.call(null, this__11261)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11262 = this;
  return cljs.core.keys.call(null, this__11262.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11263 = this;
  return new cljs.core.PersistentHashSet(this__11263.meta, cljs.core.dissoc.call(null, this__11263.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11264 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11265 = this;
  var and__3822__auto____11266 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11266) {
    var and__3822__auto____11267 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11267) {
      return cljs.core.every_QMARK_.call(null, function(p1__11242_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11242_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11267
    }
  }else {
    return and__3822__auto____11266
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11268 = this;
  return new cljs.core.PersistentHashSet(meta, this__11268.hash_map, this__11268.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11269 = this;
  return this__11269.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11270 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__11270.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__11272 = cljs.core.count.call(null, items);
  var i__11273 = 0;
  var out__11274 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__11273 < len__11272) {
      var G__11275 = i__11273 + 1;
      var G__11276 = cljs.core.conj_BANG_.call(null, out__11274, items[i__11273]);
      i__11273 = G__11275;
      out__11274 = G__11276;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11274)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11294 = null;
  var G__11294__2 = function(this_sym11280, k) {
    var this__11282 = this;
    var this_sym11280__11283 = this;
    var tcoll__11284 = this_sym11280__11283;
    if(cljs.core._lookup.call(null, this__11282.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__11294__3 = function(this_sym11281, k, not_found) {
    var this__11282 = this;
    var this_sym11281__11285 = this;
    var tcoll__11286 = this_sym11281__11285;
    if(cljs.core._lookup.call(null, this__11282.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__11294 = function(this_sym11281, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11294__2.call(this, this_sym11281, k);
      case 3:
        return G__11294__3.call(this, this_sym11281, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11294
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym11278, args11279) {
  var this__11287 = this;
  return this_sym11278.call.apply(this_sym11278, [this_sym11278].concat(args11279.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__11288 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__11289 = this;
  if(cljs.core._lookup.call(null, this__11289.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11290 = this;
  return cljs.core.count.call(null, this__11290.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__11291 = this;
  this__11291.transient_map = cljs.core.dissoc_BANG_.call(null, this__11291.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11292 = this;
  this__11292.transient_map = cljs.core.assoc_BANG_.call(null, this__11292.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11293 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__11293.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11297 = this;
  var h__2192__auto____11298 = this__11297.__hash;
  if(!(h__2192__auto____11298 == null)) {
    return h__2192__auto____11298
  }else {
    var h__2192__auto____11299 = cljs.core.hash_iset.call(null, coll);
    this__11297.__hash = h__2192__auto____11299;
    return h__2192__auto____11299
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11300 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11301 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11301.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11327 = null;
  var G__11327__2 = function(this_sym11302, k) {
    var this__11304 = this;
    var this_sym11302__11305 = this;
    var coll__11306 = this_sym11302__11305;
    return coll__11306.cljs$core$ILookup$_lookup$arity$2(coll__11306, k)
  };
  var G__11327__3 = function(this_sym11303, k, not_found) {
    var this__11304 = this;
    var this_sym11303__11307 = this;
    var coll__11308 = this_sym11303__11307;
    return coll__11308.cljs$core$ILookup$_lookup$arity$3(coll__11308, k, not_found)
  };
  G__11327 = function(this_sym11303, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11327__2.call(this, this_sym11303, k);
      case 3:
        return G__11327__3.call(this, this_sym11303, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11327
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym11295, args11296) {
  var this__11309 = this;
  return this_sym11295.call.apply(this_sym11295, [this_sym11295].concat(args11296.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11310 = this;
  return new cljs.core.PersistentTreeSet(this__11310.meta, cljs.core.assoc.call(null, this__11310.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11311 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__11311.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__11312 = this;
  var this__11313 = this;
  return cljs.core.pr_str.call(null, this__11313)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11314 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__11314.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11315 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__11315.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11316 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11317 = this;
  return cljs.core._comparator.call(null, this__11317.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11318 = this;
  return cljs.core.keys.call(null, this__11318.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11319 = this;
  return new cljs.core.PersistentTreeSet(this__11319.meta, cljs.core.dissoc.call(null, this__11319.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11320 = this;
  return cljs.core.count.call(null, this__11320.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11321 = this;
  var and__3822__auto____11322 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11322) {
    var and__3822__auto____11323 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11323) {
      return cljs.core.every_QMARK_.call(null, function(p1__11277_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11277_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11323
    }
  }else {
    return and__3822__auto____11322
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11324 = this;
  return new cljs.core.PersistentTreeSet(meta, this__11324.tree_map, this__11324.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11325 = this;
  return this__11325.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11326 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__11326.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__11332__delegate = function(keys) {
      var in__11330 = cljs.core.seq.call(null, keys);
      var out__11331 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__11330)) {
          var G__11333 = cljs.core.next.call(null, in__11330);
          var G__11334 = cljs.core.conj_BANG_.call(null, out__11331, cljs.core.first.call(null, in__11330));
          in__11330 = G__11333;
          out__11331 = G__11334;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__11331)
        }
        break
      }
    };
    var G__11332 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11332__delegate.call(this, keys)
    };
    G__11332.cljs$lang$maxFixedArity = 0;
    G__11332.cljs$lang$applyTo = function(arglist__11335) {
      var keys = cljs.core.seq(arglist__11335);
      return G__11332__delegate(keys)
    };
    G__11332.cljs$lang$arity$variadic = G__11332__delegate;
    return G__11332
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11336) {
    var keys = cljs.core.seq(arglist__11336);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11338) {
    var comparator = cljs.core.first(arglist__11338);
    var keys = cljs.core.rest(arglist__11338);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__11344 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____11345 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____11345)) {
        var e__11346 = temp__3971__auto____11345;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__11346))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__11344, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__11337_SHARP_) {
      var temp__3971__auto____11347 = cljs.core.find.call(null, smap, p1__11337_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____11347)) {
        var e__11348 = temp__3971__auto____11347;
        return cljs.core.second.call(null, e__11348)
      }else {
        return p1__11337_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__11378 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__11371, seen) {
        while(true) {
          var vec__11372__11373 = p__11371;
          var f__11374 = cljs.core.nth.call(null, vec__11372__11373, 0, null);
          var xs__11375 = vec__11372__11373;
          var temp__3974__auto____11376 = cljs.core.seq.call(null, xs__11375);
          if(temp__3974__auto____11376) {
            var s__11377 = temp__3974__auto____11376;
            if(cljs.core.contains_QMARK_.call(null, seen, f__11374)) {
              var G__11379 = cljs.core.rest.call(null, s__11377);
              var G__11380 = seen;
              p__11371 = G__11379;
              seen = G__11380;
              continue
            }else {
              return cljs.core.cons.call(null, f__11374, step.call(null, cljs.core.rest.call(null, s__11377), cljs.core.conj.call(null, seen, f__11374)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__11378.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__11383 = cljs.core.PersistentVector.EMPTY;
  var s__11384 = s;
  while(true) {
    if(cljs.core.next.call(null, s__11384)) {
      var G__11385 = cljs.core.conj.call(null, ret__11383, cljs.core.first.call(null, s__11384));
      var G__11386 = cljs.core.next.call(null, s__11384);
      ret__11383 = G__11385;
      s__11384 = G__11386;
      continue
    }else {
      return cljs.core.seq.call(null, ret__11383)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____11389 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____11389) {
        return or__3824__auto____11389
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__11390 = x.lastIndexOf("/");
      if(i__11390 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__11390 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____11393 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____11393) {
      return or__3824__auto____11393
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__11394 = x.lastIndexOf("/");
    if(i__11394 > -1) {
      return cljs.core.subs.call(null, x, 2, i__11394)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__11401 = cljs.core.ObjMap.EMPTY;
  var ks__11402 = cljs.core.seq.call(null, keys);
  var vs__11403 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____11404 = ks__11402;
      if(and__3822__auto____11404) {
        return vs__11403
      }else {
        return and__3822__auto____11404
      }
    }()) {
      var G__11405 = cljs.core.assoc.call(null, map__11401, cljs.core.first.call(null, ks__11402), cljs.core.first.call(null, vs__11403));
      var G__11406 = cljs.core.next.call(null, ks__11402);
      var G__11407 = cljs.core.next.call(null, vs__11403);
      map__11401 = G__11405;
      ks__11402 = G__11406;
      vs__11403 = G__11407;
      continue
    }else {
      return map__11401
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11410__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11395_SHARP_, p2__11396_SHARP_) {
        return max_key.call(null, k, p1__11395_SHARP_, p2__11396_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11410 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11410__delegate.call(this, k, x, y, more)
    };
    G__11410.cljs$lang$maxFixedArity = 3;
    G__11410.cljs$lang$applyTo = function(arglist__11411) {
      var k = cljs.core.first(arglist__11411);
      var x = cljs.core.first(cljs.core.next(arglist__11411));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11411)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11411)));
      return G__11410__delegate(k, x, y, more)
    };
    G__11410.cljs$lang$arity$variadic = G__11410__delegate;
    return G__11410
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11412__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11408_SHARP_, p2__11409_SHARP_) {
        return min_key.call(null, k, p1__11408_SHARP_, p2__11409_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11412 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11412__delegate.call(this, k, x, y, more)
    };
    G__11412.cljs$lang$maxFixedArity = 3;
    G__11412.cljs$lang$applyTo = function(arglist__11413) {
      var k = cljs.core.first(arglist__11413);
      var x = cljs.core.first(cljs.core.next(arglist__11413));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11413)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11413)));
      return G__11412__delegate(k, x, y, more)
    };
    G__11412.cljs$lang$arity$variadic = G__11412__delegate;
    return G__11412
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11416 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11416) {
        var s__11417 = temp__3974__auto____11416;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11417), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11417)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11420 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11420) {
      var s__11421 = temp__3974__auto____11420;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11421)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11421), take_while.call(null, pred, cljs.core.rest.call(null, s__11421)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11423 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11423.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11435 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11436 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11436)) {
        var vec__11437__11438 = temp__3974__auto____11436;
        var e__11439 = cljs.core.nth.call(null, vec__11437__11438, 0, null);
        var s__11440 = vec__11437__11438;
        if(cljs.core.truth_(include__11435.call(null, e__11439))) {
          return s__11440
        }else {
          return cljs.core.next.call(null, s__11440)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11435, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11441 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11441)) {
      var vec__11442__11443 = temp__3974__auto____11441;
      var e__11444 = cljs.core.nth.call(null, vec__11442__11443, 0, null);
      var s__11445 = vec__11442__11443;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11444)) ? s__11445 : cljs.core.next.call(null, s__11445))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11457 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11458 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11458)) {
        var vec__11459__11460 = temp__3974__auto____11458;
        var e__11461 = cljs.core.nth.call(null, vec__11459__11460, 0, null);
        var s__11462 = vec__11459__11460;
        if(cljs.core.truth_(include__11457.call(null, e__11461))) {
          return s__11462
        }else {
          return cljs.core.next.call(null, s__11462)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11457, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11463 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11463)) {
      var vec__11464__11465 = temp__3974__auto____11463;
      var e__11466 = cljs.core.nth.call(null, vec__11464__11465, 0, null);
      var s__11467 = vec__11464__11465;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11466)) ? s__11467 : cljs.core.next.call(null, s__11467))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11468 = this;
  var h__2192__auto____11469 = this__11468.__hash;
  if(!(h__2192__auto____11469 == null)) {
    return h__2192__auto____11469
  }else {
    var h__2192__auto____11470 = cljs.core.hash_coll.call(null, rng);
    this__11468.__hash = h__2192__auto____11470;
    return h__2192__auto____11470
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11471 = this;
  if(this__11471.step > 0) {
    if(this__11471.start + this__11471.step < this__11471.end) {
      return new cljs.core.Range(this__11471.meta, this__11471.start + this__11471.step, this__11471.end, this__11471.step, null)
    }else {
      return null
    }
  }else {
    if(this__11471.start + this__11471.step > this__11471.end) {
      return new cljs.core.Range(this__11471.meta, this__11471.start + this__11471.step, this__11471.end, this__11471.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11472 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11473 = this;
  var this__11474 = this;
  return cljs.core.pr_str.call(null, this__11474)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11475 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11476 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11477 = this;
  if(this__11477.step > 0) {
    if(this__11477.start < this__11477.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11477.start > this__11477.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11478 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11478.end - this__11478.start) / this__11478.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11479 = this;
  return this__11479.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11480 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11480.meta, this__11480.start + this__11480.step, this__11480.end, this__11480.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11481 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11482 = this;
  return new cljs.core.Range(meta, this__11482.start, this__11482.end, this__11482.step, this__11482.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11483 = this;
  return this__11483.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11484 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11484.start + n * this__11484.step
  }else {
    if(function() {
      var and__3822__auto____11485 = this__11484.start > this__11484.end;
      if(and__3822__auto____11485) {
        return this__11484.step === 0
      }else {
        return and__3822__auto____11485
      }
    }()) {
      return this__11484.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11486 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11486.start + n * this__11486.step
  }else {
    if(function() {
      var and__3822__auto____11487 = this__11486.start > this__11486.end;
      if(and__3822__auto____11487) {
        return this__11486.step === 0
      }else {
        return and__3822__auto____11487
      }
    }()) {
      return this__11486.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11488 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11488.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11491 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11491) {
      var s__11492 = temp__3974__auto____11491;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11492), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11492)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11499 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11499) {
      var s__11500 = temp__3974__auto____11499;
      var fst__11501 = cljs.core.first.call(null, s__11500);
      var fv__11502 = f.call(null, fst__11501);
      var run__11503 = cljs.core.cons.call(null, fst__11501, cljs.core.take_while.call(null, function(p1__11493_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11502, f.call(null, p1__11493_SHARP_))
      }, cljs.core.next.call(null, s__11500)));
      return cljs.core.cons.call(null, run__11503, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11503), s__11500))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11518 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11518) {
        var s__11519 = temp__3971__auto____11518;
        return reductions.call(null, f, cljs.core.first.call(null, s__11519), cljs.core.rest.call(null, s__11519))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11520 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11520) {
        var s__11521 = temp__3974__auto____11520;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11521)), cljs.core.rest.call(null, s__11521))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11524 = null;
      var G__11524__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11524__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11524__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11524__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11524__4 = function() {
        var G__11525__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11525 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11525__delegate.call(this, x, y, z, args)
        };
        G__11525.cljs$lang$maxFixedArity = 3;
        G__11525.cljs$lang$applyTo = function(arglist__11526) {
          var x = cljs.core.first(arglist__11526);
          var y = cljs.core.first(cljs.core.next(arglist__11526));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11526)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11526)));
          return G__11525__delegate(x, y, z, args)
        };
        G__11525.cljs$lang$arity$variadic = G__11525__delegate;
        return G__11525
      }();
      G__11524 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11524__0.call(this);
          case 1:
            return G__11524__1.call(this, x);
          case 2:
            return G__11524__2.call(this, x, y);
          case 3:
            return G__11524__3.call(this, x, y, z);
          default:
            return G__11524__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11524.cljs$lang$maxFixedArity = 3;
      G__11524.cljs$lang$applyTo = G__11524__4.cljs$lang$applyTo;
      return G__11524
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11527 = null;
      var G__11527__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11527__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11527__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11527__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11527__4 = function() {
        var G__11528__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11528 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11528__delegate.call(this, x, y, z, args)
        };
        G__11528.cljs$lang$maxFixedArity = 3;
        G__11528.cljs$lang$applyTo = function(arglist__11529) {
          var x = cljs.core.first(arglist__11529);
          var y = cljs.core.first(cljs.core.next(arglist__11529));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11529)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11529)));
          return G__11528__delegate(x, y, z, args)
        };
        G__11528.cljs$lang$arity$variadic = G__11528__delegate;
        return G__11528
      }();
      G__11527 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11527__0.call(this);
          case 1:
            return G__11527__1.call(this, x);
          case 2:
            return G__11527__2.call(this, x, y);
          case 3:
            return G__11527__3.call(this, x, y, z);
          default:
            return G__11527__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11527.cljs$lang$maxFixedArity = 3;
      G__11527.cljs$lang$applyTo = G__11527__4.cljs$lang$applyTo;
      return G__11527
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11530 = null;
      var G__11530__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11530__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11530__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11530__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11530__4 = function() {
        var G__11531__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11531 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11531__delegate.call(this, x, y, z, args)
        };
        G__11531.cljs$lang$maxFixedArity = 3;
        G__11531.cljs$lang$applyTo = function(arglist__11532) {
          var x = cljs.core.first(arglist__11532);
          var y = cljs.core.first(cljs.core.next(arglist__11532));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11532)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11532)));
          return G__11531__delegate(x, y, z, args)
        };
        G__11531.cljs$lang$arity$variadic = G__11531__delegate;
        return G__11531
      }();
      G__11530 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11530__0.call(this);
          case 1:
            return G__11530__1.call(this, x);
          case 2:
            return G__11530__2.call(this, x, y);
          case 3:
            return G__11530__3.call(this, x, y, z);
          default:
            return G__11530__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11530.cljs$lang$maxFixedArity = 3;
      G__11530.cljs$lang$applyTo = G__11530__4.cljs$lang$applyTo;
      return G__11530
    }()
  };
  var juxt__4 = function() {
    var G__11533__delegate = function(f, g, h, fs) {
      var fs__11523 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11534 = null;
        var G__11534__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11504_SHARP_, p2__11505_SHARP_) {
            return cljs.core.conj.call(null, p1__11504_SHARP_, p2__11505_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11523)
        };
        var G__11534__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11506_SHARP_, p2__11507_SHARP_) {
            return cljs.core.conj.call(null, p1__11506_SHARP_, p2__11507_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11523)
        };
        var G__11534__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11508_SHARP_, p2__11509_SHARP_) {
            return cljs.core.conj.call(null, p1__11508_SHARP_, p2__11509_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11523)
        };
        var G__11534__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11510_SHARP_, p2__11511_SHARP_) {
            return cljs.core.conj.call(null, p1__11510_SHARP_, p2__11511_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11523)
        };
        var G__11534__4 = function() {
          var G__11535__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11512_SHARP_, p2__11513_SHARP_) {
              return cljs.core.conj.call(null, p1__11512_SHARP_, cljs.core.apply.call(null, p2__11513_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11523)
          };
          var G__11535 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11535__delegate.call(this, x, y, z, args)
          };
          G__11535.cljs$lang$maxFixedArity = 3;
          G__11535.cljs$lang$applyTo = function(arglist__11536) {
            var x = cljs.core.first(arglist__11536);
            var y = cljs.core.first(cljs.core.next(arglist__11536));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11536)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11536)));
            return G__11535__delegate(x, y, z, args)
          };
          G__11535.cljs$lang$arity$variadic = G__11535__delegate;
          return G__11535
        }();
        G__11534 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11534__0.call(this);
            case 1:
              return G__11534__1.call(this, x);
            case 2:
              return G__11534__2.call(this, x, y);
            case 3:
              return G__11534__3.call(this, x, y, z);
            default:
              return G__11534__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11534.cljs$lang$maxFixedArity = 3;
        G__11534.cljs$lang$applyTo = G__11534__4.cljs$lang$applyTo;
        return G__11534
      }()
    };
    var G__11533 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11533__delegate.call(this, f, g, h, fs)
    };
    G__11533.cljs$lang$maxFixedArity = 3;
    G__11533.cljs$lang$applyTo = function(arglist__11537) {
      var f = cljs.core.first(arglist__11537);
      var g = cljs.core.first(cljs.core.next(arglist__11537));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11537)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11537)));
      return G__11533__delegate(f, g, h, fs)
    };
    G__11533.cljs$lang$arity$variadic = G__11533__delegate;
    return G__11533
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11540 = cljs.core.next.call(null, coll);
        coll = G__11540;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11539 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11539) {
          return n > 0
        }else {
          return and__3822__auto____11539
        }
      }())) {
        var G__11541 = n - 1;
        var G__11542 = cljs.core.next.call(null, coll);
        n = G__11541;
        coll = G__11542;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11544 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11544), s)) {
    if(cljs.core.count.call(null, matches__11544) === 1) {
      return cljs.core.first.call(null, matches__11544)
    }else {
      return cljs.core.vec.call(null, matches__11544)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11546 = re.exec(s);
  if(matches__11546 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11546) === 1) {
      return cljs.core.first.call(null, matches__11546)
    }else {
      return cljs.core.vec.call(null, matches__11546)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11551 = cljs.core.re_find.call(null, re, s);
  var match_idx__11552 = s.search(re);
  var match_str__11553 = cljs.core.coll_QMARK_.call(null, match_data__11551) ? cljs.core.first.call(null, match_data__11551) : match_data__11551;
  var post_match__11554 = cljs.core.subs.call(null, s, match_idx__11552 + cljs.core.count.call(null, match_str__11553));
  if(cljs.core.truth_(match_data__11551)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11551, re_seq.call(null, re, post_match__11554))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11561__11562 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11563 = cljs.core.nth.call(null, vec__11561__11562, 0, null);
  var flags__11564 = cljs.core.nth.call(null, vec__11561__11562, 1, null);
  var pattern__11565 = cljs.core.nth.call(null, vec__11561__11562, 2, null);
  return new RegExp(pattern__11565, flags__11564)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11555_SHARP_) {
    return print_one.call(null, p1__11555_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11575 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11575)) {
            var and__3822__auto____11579 = function() {
              var G__11576__11577 = obj;
              if(G__11576__11577) {
                if(function() {
                  var or__3824__auto____11578 = G__11576__11577.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11578) {
                    return or__3824__auto____11578
                  }else {
                    return G__11576__11577.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11576__11577.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11576__11577)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11576__11577)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11579)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11579
            }
          }else {
            return and__3822__auto____11575
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11580 = !(obj == null);
          if(and__3822__auto____11580) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11580
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11581__11582 = obj;
          if(G__11581__11582) {
            if(function() {
              var or__3824__auto____11583 = G__11581__11582.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11583) {
                return or__3824__auto____11583
              }else {
                return G__11581__11582.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11581__11582.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11581__11582)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11581__11582)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11603 = new goog.string.StringBuffer;
  var G__11604__11605 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11604__11605) {
    var string__11606 = cljs.core.first.call(null, G__11604__11605);
    var G__11604__11607 = G__11604__11605;
    while(true) {
      sb__11603.append(string__11606);
      var temp__3974__auto____11608 = cljs.core.next.call(null, G__11604__11607);
      if(temp__3974__auto____11608) {
        var G__11604__11609 = temp__3974__auto____11608;
        var G__11622 = cljs.core.first.call(null, G__11604__11609);
        var G__11623 = G__11604__11609;
        string__11606 = G__11622;
        G__11604__11607 = G__11623;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11610__11611 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11610__11611) {
    var obj__11612 = cljs.core.first.call(null, G__11610__11611);
    var G__11610__11613 = G__11610__11611;
    while(true) {
      sb__11603.append(" ");
      var G__11614__11615 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11612, opts));
      if(G__11614__11615) {
        var string__11616 = cljs.core.first.call(null, G__11614__11615);
        var G__11614__11617 = G__11614__11615;
        while(true) {
          sb__11603.append(string__11616);
          var temp__3974__auto____11618 = cljs.core.next.call(null, G__11614__11617);
          if(temp__3974__auto____11618) {
            var G__11614__11619 = temp__3974__auto____11618;
            var G__11624 = cljs.core.first.call(null, G__11614__11619);
            var G__11625 = G__11614__11619;
            string__11616 = G__11624;
            G__11614__11617 = G__11625;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11620 = cljs.core.next.call(null, G__11610__11613);
      if(temp__3974__auto____11620) {
        var G__11610__11621 = temp__3974__auto____11620;
        var G__11626 = cljs.core.first.call(null, G__11610__11621);
        var G__11627 = G__11610__11621;
        obj__11612 = G__11626;
        G__11610__11613 = G__11627;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11603
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11629 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11629.append("\n");
  return[cljs.core.str(sb__11629)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11648__11649 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11648__11649) {
    var string__11650 = cljs.core.first.call(null, G__11648__11649);
    var G__11648__11651 = G__11648__11649;
    while(true) {
      cljs.core.string_print.call(null, string__11650);
      var temp__3974__auto____11652 = cljs.core.next.call(null, G__11648__11651);
      if(temp__3974__auto____11652) {
        var G__11648__11653 = temp__3974__auto____11652;
        var G__11666 = cljs.core.first.call(null, G__11648__11653);
        var G__11667 = G__11648__11653;
        string__11650 = G__11666;
        G__11648__11651 = G__11667;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11654__11655 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11654__11655) {
    var obj__11656 = cljs.core.first.call(null, G__11654__11655);
    var G__11654__11657 = G__11654__11655;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11658__11659 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11656, opts));
      if(G__11658__11659) {
        var string__11660 = cljs.core.first.call(null, G__11658__11659);
        var G__11658__11661 = G__11658__11659;
        while(true) {
          cljs.core.string_print.call(null, string__11660);
          var temp__3974__auto____11662 = cljs.core.next.call(null, G__11658__11661);
          if(temp__3974__auto____11662) {
            var G__11658__11663 = temp__3974__auto____11662;
            var G__11668 = cljs.core.first.call(null, G__11658__11663);
            var G__11669 = G__11658__11663;
            string__11660 = G__11668;
            G__11658__11661 = G__11669;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11664 = cljs.core.next.call(null, G__11654__11657);
      if(temp__3974__auto____11664) {
        var G__11654__11665 = temp__3974__auto____11664;
        var G__11670 = cljs.core.first.call(null, G__11654__11665);
        var G__11671 = G__11654__11665;
        obj__11656 = G__11670;
        G__11654__11657 = G__11671;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11672) {
    var objs = cljs.core.seq(arglist__11672);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11673) {
    var objs = cljs.core.seq(arglist__11673);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11674) {
    var objs = cljs.core.seq(arglist__11674);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11675) {
    var objs = cljs.core.seq(arglist__11675);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11676) {
    var objs = cljs.core.seq(arglist__11676);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11677) {
    var objs = cljs.core.seq(arglist__11677);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11678) {
    var objs = cljs.core.seq(arglist__11678);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11679) {
    var objs = cljs.core.seq(arglist__11679);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11680) {
    var fmt = cljs.core.first(arglist__11680);
    var args = cljs.core.rest(arglist__11680);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11681 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11681, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11682 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11682, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11683 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11683, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11684 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11684)) {
        var nspc__11685 = temp__3974__auto____11684;
        return[cljs.core.str(nspc__11685), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11686 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11686)) {
          var nspc__11687 = temp__3974__auto____11686;
          return[cljs.core.str(nspc__11687), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11688 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11688, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11690 = function(n, len) {
    var ns__11689 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11689) < len) {
        var G__11692 = [cljs.core.str("0"), cljs.core.str(ns__11689)].join("");
        ns__11689 = G__11692;
        continue
      }else {
        return ns__11689
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11690.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11690.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11690.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11690.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11690.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11690.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11691 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11691, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11693 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11694 = this;
  var G__11695__11696 = cljs.core.seq.call(null, this__11694.watches);
  if(G__11695__11696) {
    var G__11698__11700 = cljs.core.first.call(null, G__11695__11696);
    var vec__11699__11701 = G__11698__11700;
    var key__11702 = cljs.core.nth.call(null, vec__11699__11701, 0, null);
    var f__11703 = cljs.core.nth.call(null, vec__11699__11701, 1, null);
    var G__11695__11704 = G__11695__11696;
    var G__11698__11705 = G__11698__11700;
    var G__11695__11706 = G__11695__11704;
    while(true) {
      var vec__11707__11708 = G__11698__11705;
      var key__11709 = cljs.core.nth.call(null, vec__11707__11708, 0, null);
      var f__11710 = cljs.core.nth.call(null, vec__11707__11708, 1, null);
      var G__11695__11711 = G__11695__11706;
      f__11710.call(null, key__11709, this$, oldval, newval);
      var temp__3974__auto____11712 = cljs.core.next.call(null, G__11695__11711);
      if(temp__3974__auto____11712) {
        var G__11695__11713 = temp__3974__auto____11712;
        var G__11720 = cljs.core.first.call(null, G__11695__11713);
        var G__11721 = G__11695__11713;
        G__11698__11705 = G__11720;
        G__11695__11706 = G__11721;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11714 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11714.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11715 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11715.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11716 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11716.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11717 = this;
  return this__11717.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11718 = this;
  return this__11718.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11719 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11733__delegate = function(x, p__11722) {
      var map__11728__11729 = p__11722;
      var map__11728__11730 = cljs.core.seq_QMARK_.call(null, map__11728__11729) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11728__11729) : map__11728__11729;
      var validator__11731 = cljs.core._lookup.call(null, map__11728__11730, "\ufdd0'validator", null);
      var meta__11732 = cljs.core._lookup.call(null, map__11728__11730, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11732, validator__11731, null)
    };
    var G__11733 = function(x, var_args) {
      var p__11722 = null;
      if(goog.isDef(var_args)) {
        p__11722 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11733__delegate.call(this, x, p__11722)
    };
    G__11733.cljs$lang$maxFixedArity = 1;
    G__11733.cljs$lang$applyTo = function(arglist__11734) {
      var x = cljs.core.first(arglist__11734);
      var p__11722 = cljs.core.rest(arglist__11734);
      return G__11733__delegate(x, p__11722)
    };
    G__11733.cljs$lang$arity$variadic = G__11733__delegate;
    return G__11733
  }();
  atom = function(x, var_args) {
    var p__11722 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11738 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11738)) {
    var validate__11739 = temp__3974__auto____11738;
    if(cljs.core.truth_(validate__11739.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11740 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11740, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11741__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11741 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11741__delegate.call(this, a, f, x, y, z, more)
    };
    G__11741.cljs$lang$maxFixedArity = 5;
    G__11741.cljs$lang$applyTo = function(arglist__11742) {
      var a = cljs.core.first(arglist__11742);
      var f = cljs.core.first(cljs.core.next(arglist__11742));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11742)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11742))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11742)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11742)))));
      return G__11741__delegate(a, f, x, y, z, more)
    };
    G__11741.cljs$lang$arity$variadic = G__11741__delegate;
    return G__11741
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11743) {
    var iref = cljs.core.first(arglist__11743);
    var f = cljs.core.first(cljs.core.next(arglist__11743));
    var args = cljs.core.rest(cljs.core.next(arglist__11743));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11744 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11744.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11745 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11745.state, function(p__11746) {
    var map__11747__11748 = p__11746;
    var map__11747__11749 = cljs.core.seq_QMARK_.call(null, map__11747__11748) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11747__11748) : map__11747__11748;
    var curr_state__11750 = map__11747__11749;
    var done__11751 = cljs.core._lookup.call(null, map__11747__11749, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11751)) {
      return curr_state__11750
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11745.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11772__11773 = options;
    var map__11772__11774 = cljs.core.seq_QMARK_.call(null, map__11772__11773) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11772__11773) : map__11772__11773;
    var keywordize_keys__11775 = cljs.core._lookup.call(null, map__11772__11774, "\ufdd0'keywordize-keys", null);
    var keyfn__11776 = cljs.core.truth_(keywordize_keys__11775) ? cljs.core.keyword : cljs.core.str;
    var f__11791 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____11790 = function iter__11784(s__11785) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11785__11788 = s__11785;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11785__11788)) {
                        var k__11789 = cljs.core.first.call(null, s__11785__11788);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11776.call(null, k__11789), thisfn.call(null, x[k__11789])], true), iter__11784.call(null, cljs.core.rest.call(null, s__11785__11788)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____11790.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11791.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11792) {
    var x = cljs.core.first(arglist__11792);
    var options = cljs.core.rest(arglist__11792);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11797 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11801__delegate = function(args) {
      var temp__3971__auto____11798 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11797), args, null);
      if(cljs.core.truth_(temp__3971__auto____11798)) {
        var v__11799 = temp__3971__auto____11798;
        return v__11799
      }else {
        var ret__11800 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11797, cljs.core.assoc, args, ret__11800);
        return ret__11800
      }
    };
    var G__11801 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11801__delegate.call(this, args)
    };
    G__11801.cljs$lang$maxFixedArity = 0;
    G__11801.cljs$lang$applyTo = function(arglist__11802) {
      var args = cljs.core.seq(arglist__11802);
      return G__11801__delegate(args)
    };
    G__11801.cljs$lang$arity$variadic = G__11801__delegate;
    return G__11801
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11804 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11804)) {
        var G__11805 = ret__11804;
        f = G__11805;
        continue
      }else {
        return ret__11804
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11806__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11806 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11806__delegate.call(this, f, args)
    };
    G__11806.cljs$lang$maxFixedArity = 1;
    G__11806.cljs$lang$applyTo = function(arglist__11807) {
      var f = cljs.core.first(arglist__11807);
      var args = cljs.core.rest(arglist__11807);
      return G__11806__delegate(f, args)
    };
    G__11806.cljs$lang$arity$variadic = G__11806__delegate;
    return G__11806
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11809 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11809, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11809, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11818 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11818) {
      return or__3824__auto____11818
    }else {
      var or__3824__auto____11819 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11819) {
        return or__3824__auto____11819
      }else {
        var and__3822__auto____11820 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11820) {
          var and__3822__auto____11821 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11821) {
            var and__3822__auto____11822 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11822) {
              var ret__11823 = true;
              var i__11824 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11825 = cljs.core.not.call(null, ret__11823);
                  if(or__3824__auto____11825) {
                    return or__3824__auto____11825
                  }else {
                    return i__11824 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11823
                }else {
                  var G__11826 = isa_QMARK_.call(null, h, child.call(null, i__11824), parent.call(null, i__11824));
                  var G__11827 = i__11824 + 1;
                  ret__11823 = G__11826;
                  i__11824 = G__11827;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11822
            }
          }else {
            return and__3822__auto____11821
          }
        }else {
          return and__3822__auto____11820
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11836 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11837 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11838 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11839 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11840 = cljs.core.contains_QMARK_.call(null, tp__11836.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11838.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11838.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11836, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11839.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11837, parent, ta__11838), "\ufdd0'descendants":tf__11839.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11838, tag, td__11837)})
    }();
    if(cljs.core.truth_(or__3824__auto____11840)) {
      return or__3824__auto____11840
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11845 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11846 = cljs.core.truth_(parentMap__11845.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11845.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11847 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11846)) ? cljs.core.assoc.call(null, parentMap__11845, tag, childsParents__11846) : cljs.core.dissoc.call(null, parentMap__11845, tag);
    var deriv_seq__11848 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11828_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11828_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11828_SHARP_), cljs.core.second.call(null, p1__11828_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11847)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11845.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11829_SHARP_, p2__11830_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11829_SHARP_, p2__11830_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11848))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11856 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11858 = cljs.core.truth_(function() {
    var and__3822__auto____11857 = xprefs__11856;
    if(cljs.core.truth_(and__3822__auto____11857)) {
      return xprefs__11856.call(null, y)
    }else {
      return and__3822__auto____11857
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11858)) {
    return or__3824__auto____11858
  }else {
    var or__3824__auto____11860 = function() {
      var ps__11859 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11859) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11859), prefer_table))) {
          }else {
          }
          var G__11863 = cljs.core.rest.call(null, ps__11859);
          ps__11859 = G__11863;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11860)) {
      return or__3824__auto____11860
    }else {
      var or__3824__auto____11862 = function() {
        var ps__11861 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11861) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11861), y, prefer_table))) {
            }else {
            }
            var G__11864 = cljs.core.rest.call(null, ps__11861);
            ps__11861 = G__11864;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11862)) {
        return or__3824__auto____11862
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11866 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11866)) {
    return or__3824__auto____11866
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11884 = cljs.core.reduce.call(null, function(be, p__11876) {
    var vec__11877__11878 = p__11876;
    var k__11879 = cljs.core.nth.call(null, vec__11877__11878, 0, null);
    var ___11880 = cljs.core.nth.call(null, vec__11877__11878, 1, null);
    var e__11881 = vec__11877__11878;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11879)) {
      var be2__11883 = cljs.core.truth_(function() {
        var or__3824__auto____11882 = be == null;
        if(or__3824__auto____11882) {
          return or__3824__auto____11882
        }else {
          return cljs.core.dominates.call(null, k__11879, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11881 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11883), k__11879, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11879), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11883)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11883
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11884)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11884));
      return cljs.core.second.call(null, best_entry__11884)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11889 = mf;
    if(and__3822__auto____11889) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11889
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____11890 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11891 = cljs.core._reset[goog.typeOf(x__2363__auto____11890)];
      if(or__3824__auto____11891) {
        return or__3824__auto____11891
      }else {
        var or__3824__auto____11892 = cljs.core._reset["_"];
        if(or__3824__auto____11892) {
          return or__3824__auto____11892
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11897 = mf;
    if(and__3822__auto____11897) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11897
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____11898 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11899 = cljs.core._add_method[goog.typeOf(x__2363__auto____11898)];
      if(or__3824__auto____11899) {
        return or__3824__auto____11899
      }else {
        var or__3824__auto____11900 = cljs.core._add_method["_"];
        if(or__3824__auto____11900) {
          return or__3824__auto____11900
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11905 = mf;
    if(and__3822__auto____11905) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11905
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11906 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11907 = cljs.core._remove_method[goog.typeOf(x__2363__auto____11906)];
      if(or__3824__auto____11907) {
        return or__3824__auto____11907
      }else {
        var or__3824__auto____11908 = cljs.core._remove_method["_"];
        if(or__3824__auto____11908) {
          return or__3824__auto____11908
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11913 = mf;
    if(and__3822__auto____11913) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11913
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____11914 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11915 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____11914)];
      if(or__3824__auto____11915) {
        return or__3824__auto____11915
      }else {
        var or__3824__auto____11916 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11916) {
          return or__3824__auto____11916
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11921 = mf;
    if(and__3822__auto____11921) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11921
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11922 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11923 = cljs.core._get_method[goog.typeOf(x__2363__auto____11922)];
      if(or__3824__auto____11923) {
        return or__3824__auto____11923
      }else {
        var or__3824__auto____11924 = cljs.core._get_method["_"];
        if(or__3824__auto____11924) {
          return or__3824__auto____11924
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11929 = mf;
    if(and__3822__auto____11929) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11929
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____11930 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11931 = cljs.core._methods[goog.typeOf(x__2363__auto____11930)];
      if(or__3824__auto____11931) {
        return or__3824__auto____11931
      }else {
        var or__3824__auto____11932 = cljs.core._methods["_"];
        if(or__3824__auto____11932) {
          return or__3824__auto____11932
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11937 = mf;
    if(and__3822__auto____11937) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11937
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____11938 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11939 = cljs.core._prefers[goog.typeOf(x__2363__auto____11938)];
      if(or__3824__auto____11939) {
        return or__3824__auto____11939
      }else {
        var or__3824__auto____11940 = cljs.core._prefers["_"];
        if(or__3824__auto____11940) {
          return or__3824__auto____11940
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11945 = mf;
    if(and__3822__auto____11945) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11945
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____11946 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11947 = cljs.core._dispatch[goog.typeOf(x__2363__auto____11946)];
      if(or__3824__auto____11947) {
        return or__3824__auto____11947
      }else {
        var or__3824__auto____11948 = cljs.core._dispatch["_"];
        if(or__3824__auto____11948) {
          return or__3824__auto____11948
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11951 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11952 = cljs.core._get_method.call(null, mf, dispatch_val__11951);
  if(cljs.core.truth_(target_fn__11952)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11951)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11952, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11953 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11954 = this;
  cljs.core.swap_BANG_.call(null, this__11954.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11954.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11954.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11954.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11955 = this;
  cljs.core.swap_BANG_.call(null, this__11955.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11955.method_cache, this__11955.method_table, this__11955.cached_hierarchy, this__11955.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11956 = this;
  cljs.core.swap_BANG_.call(null, this__11956.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11956.method_cache, this__11956.method_table, this__11956.cached_hierarchy, this__11956.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11957 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11957.cached_hierarchy), cljs.core.deref.call(null, this__11957.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11957.method_cache, this__11957.method_table, this__11957.cached_hierarchy, this__11957.hierarchy)
  }
  var temp__3971__auto____11958 = cljs.core.deref.call(null, this__11957.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11958)) {
    var target_fn__11959 = temp__3971__auto____11958;
    return target_fn__11959
  }else {
    var temp__3971__auto____11960 = cljs.core.find_and_cache_best_method.call(null, this__11957.name, dispatch_val, this__11957.hierarchy, this__11957.method_table, this__11957.prefer_table, this__11957.method_cache, this__11957.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11960)) {
      var target_fn__11961 = temp__3971__auto____11960;
      return target_fn__11961
    }else {
      return cljs.core.deref.call(null, this__11957.method_table).call(null, this__11957.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11962 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11962.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11962.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11962.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11962.method_cache, this__11962.method_table, this__11962.cached_hierarchy, this__11962.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11963 = this;
  return cljs.core.deref.call(null, this__11963.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11964 = this;
  return cljs.core.deref.call(null, this__11964.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11965 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11965.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11967__delegate = function(_, args) {
    var self__11966 = this;
    return cljs.core._dispatch.call(null, self__11966, args)
  };
  var G__11967 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11967__delegate.call(this, _, args)
  };
  G__11967.cljs$lang$maxFixedArity = 1;
  G__11967.cljs$lang$applyTo = function(arglist__11968) {
    var _ = cljs.core.first(arglist__11968);
    var args = cljs.core.rest(arglist__11968);
    return G__11967__delegate(_, args)
  };
  G__11967.cljs$lang$arity$variadic = G__11967__delegate;
  return G__11967
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11969 = this;
  return cljs.core._dispatch.call(null, self__11969, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11970 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11972, _) {
  var this__11971 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11971.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11973 = this;
  var and__3822__auto____11974 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11974) {
    return this__11973.uuid === other.uuid
  }else {
    return and__3822__auto____11974
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11975 = this;
  var this__11976 = this;
  return cljs.core.pr_str.call(null, this__11976)
};
cljs.core.UUID;
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_string = function sel_to_string(item) {
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.name.call(null, item)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return item
    }else {
      if(cljs.core.coll_QMARK_.call(null, item)) {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__13018_SHARP_) {
          return sel_to_string.call(null, p1__13018_SHARP_)
        }, item))
      }else {
        return null
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, enfocus.enlive.syntax.sel_to_string, sel)))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts__13031 = function(p__13026) {
    var vec__13027__13028 = p__13026;
    var x__13029 = cljs.core.nth.call(null, vec__13027__13028, 0, null);
    var y__13030 = cljs.core.nth.call(null, vec__13027__13028, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x__13029)), cljs.core.str(op), cljs.core.str("='"), cljs.core.str(y__13030), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__13031, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__13019_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__13019_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__13032) {
    var elms = cljs.core.seq(arglist__13032);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$lang$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__13033) {
    var elms = cljs.core.seq(arglist__13033);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$lang$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts__13035 = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~='"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__13035, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(goog.isDef(var_args)) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__13036) {
    var x = cljs.core.first(arglist__13036);
    var vals = cljs.core.rest(arglist__13036);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$lang$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__13037) {
    var elms = cljs.core.seq(arglist__13037);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$lang$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__13038) {
    var elms = cljs.core.seq(arglist__13038);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$lang$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__13039) {
    var elms = cljs.core.seq(arglist__13039);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$lang$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__13040) {
    var elms = cljs.core.seq(arglist__13040);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$lang$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_op.cljs$lang$arity$2 = nth_op__2;
  nth_op.cljs$lang$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_child.cljs$lang$arity$1 = nth_child__1;
  nth_child.cljs$lang$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_child.cljs$lang$arity$1 = nth_last_child__1;
  nth_last_child.cljs$lang$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_of_type.cljs$lang$arity$1 = nth_of_type__1;
  nth_of_type.cljs$lang$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_of_type.cljs$lang$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$lang$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(goog.isDef(var_args)) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__13041) {
    var sel = cljs.core.seq(arglist__13041);
    return but__delegate(sel)
  };
  but.cljs$lang$arity$variadic = but__delegate;
  return but
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.events.EventTarget.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = []
};
goog.inherits(goog.fx.Animation, goog.events.EventTarget);
goog.fx.Animation.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause", ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.Animation.TIMEOUT = 20;
goog.fx.Animation.activeAnimations_ = {};
goog.fx.Animation.globalTimer_ = null;
goog.fx.Animation.cycleAnimations_ = function() {
  goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
  var now = goog.now();
  for(var uid in goog.fx.Animation.activeAnimations_) {
    goog.fx.Animation.activeAnimations_[uid].cycle(now)
  }
  goog.fx.Animation.globalTimer_ = goog.object.isEmpty(goog.fx.Animation.activeAnimations_) ? null : goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
};
goog.fx.Animation.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.Animation.activeAnimations_)) {
    goog.fx.Animation.activeAnimations_[uid] = animation
  }
  if(!goog.fx.Animation.globalTimer_) {
    goog.fx.Animation.globalTimer_ = goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
  }
};
goog.fx.Animation.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.Animation.activeAnimations_[uid];
  if(goog.fx.Animation.globalTimer_ && goog.object.isEmpty(goog.fx.Animation.activeAnimations_)) {
    goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
    goog.fx.Animation.globalTimer_ = null
  }
};
goog.fx.Animation.prototype.state_ = goog.fx.Animation.State.STOPPED;
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.startTime = null;
goog.fx.Animation.prototype.endTime = null;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.state_ == goog.fx.Animation.State.STOPPED) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      return false
    }
  }
  goog.fx.Animation.unregisterAnimation(this);
  this.startTime = goog.now();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.onResume()
  }
  this.state_ = goog.fx.Animation.State.PLAYING;
  goog.fx.Animation.registerAnimation(this);
  this.cycle(this.startTime);
  return true
};
goog.fx.Animation.prototype.stop = function(gotoEnd) {
  goog.fx.Animation.unregisterAnimation(this);
  this.state_ = goog.fx.Animation.State.STOPPED;
  if(gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.state_ == goog.fx.Animation.State.PLAYING) {
    goog.fx.Animation.unregisterAnimation(this);
    this.state_ = goog.fx.Animation.State.PAUSED;
    this.onPause()
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(this.state_ != goog.fx.Animation.State.STOPPED) {
    this.stop(false)
  }
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  if(goog.isFunction(this.accel_)) {
    this.updateCoords_(this.accel_(this.progress))
  }else {
    this.updateCoords_(this.progress)
  }
  if(this.progress == 1) {
    this.state_ = goog.fx.Animation.State.STOPPED;
    goog.fx.Animation.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onBegin = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.BEGIN)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.onEnd = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.END)
};
goog.fx.Animation.prototype.onFinish = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.FINISH)
};
goog.fx.Animation.prototype.onPause = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PAUSE)
};
goog.fx.Animation.prototype.onPlay = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PLAY)
};
goog.fx.Animation.prototype.onResume = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.RESUME)
};
goog.fx.Animation.prototype.onStop = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.STOP)
};
goog.fx.Animation.prototype.dispatchAnimationEvent_ = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.progress;
  this.fps = anim.fps_;
  this.state = anim.state_;
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.easing");
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependPoundIfNecessary_(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessary_(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessary_(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessary_(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessary_ = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependPoundIfNecessary_ = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.style");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  this.element.style.left = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var start = [element.offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  this.startPoint = [this.element.offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  this.element.style.marginLeft = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12983 = s;
      var limit__12984 = limit;
      var parts__12985 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12984, 1)) {
          return cljs.core.conj.call(null, parts__12985, s__12983)
        }else {
          var temp__3971__auto____12986 = cljs.core.re_find.call(null, re, s__12983);
          if(cljs.core.truth_(temp__3971__auto____12986)) {
            var m__12987 = temp__3971__auto____12986;
            var index__12988 = s__12983.indexOf(m__12987);
            var G__12989 = s__12983.substring(index__12988 + cljs.core.count.call(null, m__12987));
            var G__12990 = limit__12984 - 1;
            var G__12991 = cljs.core.conj.call(null, parts__12985, s__12983.substring(0, index__12988));
            s__12983 = G__12989;
            limit__12984 = G__12990;
            parts__12985 = G__12991;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12985, s__12983)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12995 = s.length;
  while(true) {
    if(index__12995 === 0) {
      return""
    }else {
      var ch__12996 = cljs.core._lookup.call(null, s, index__12995 - 1, null);
      if(function() {
        var or__3824__auto____12997 = cljs.core._EQ_.call(null, ch__12996, "\n");
        if(or__3824__auto____12997) {
          return or__3824__auto____12997
        }else {
          return cljs.core._EQ_.call(null, ch__12996, "\r")
        }
      }()) {
        var G__12998 = index__12995 - 1;
        index__12995 = G__12998;
        continue
      }else {
        return s.substring(0, index__12995)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__13002 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____13003 = cljs.core.not.call(null, s__13002);
    if(or__3824__auto____13003) {
      return or__3824__auto____13003
    }else {
      var or__3824__auto____13004 = cljs.core._EQ_.call(null, "", s__13002);
      if(or__3824__auto____13004) {
        return or__3824__auto____13004
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__13002)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__13011 = new goog.string.StringBuffer;
  var length__13012 = s.length;
  var index__13013 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__13012, index__13013)) {
      return buffer__13011.toString()
    }else {
      var ch__13014 = s.charAt(index__13013);
      var temp__3971__auto____13015 = cljs.core._lookup.call(null, cmap, ch__13014, null);
      if(cljs.core.truth_(temp__3971__auto____13015)) {
        var replacement__13016 = temp__3971__auto____13015;
        buffer__13011.append([cljs.core.str(replacement__13016)].join(""))
      }else {
        buffer__13011.append(ch__13014)
      }
      var G__13017 = index__13013 + 1;
      index__13013 = G__13017;
      continue
    }
    break
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12975 = document.createElement("div");
var test_html__12976 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12975.innerHTML = test_html__12976;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12975.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12975.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12975.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__12568 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__12569 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__12570 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__12569, "caption":table_section_wrapper__12569, "optgroup":opt_wrapper__12568, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__12570, "thead":table_section_wrapper__12569, "th":cell_wrapper__12570, "option":opt_wrapper__12568, "tbody":table_section_wrapper__12569, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__12569});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___12583 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__12587 = function() {
    var and__3822__auto____12584 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____12584) {
      return no_tbody_QMARK___12583
    }else {
      return and__3822__auto____12584
    }
  }() ? function() {
    var and__3822__auto____12585 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____12585)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____12585
    }
  }() : function() {
    var and__3822__auto____12586 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____12586) {
      return no_tbody_QMARK___12583
    }else {
      return and__3822__auto____12586
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__12588__12589 = cljs.core.seq.call(null, tbody__12587);
  if(G__12588__12589) {
    var child__12590 = cljs.core.first.call(null, G__12588__12589);
    var G__12588__12591 = G__12588__12589;
    while(true) {
      if(function() {
        var and__3822__auto____12592 = cljs.core._EQ_.call(null, child__12590.nodeName, "tbody");
        if(and__3822__auto____12592) {
          return cljs.core._EQ_.call(null, child__12590.childNodes.length, 0)
        }else {
          return and__3822__auto____12592
        }
      }()) {
        child__12590.parentNode.removeChild(child__12590)
      }else {
      }
      var temp__3974__auto____12593 = cljs.core.next.call(null, G__12588__12591);
      if(temp__3974__auto____12593) {
        var G__12588__12594 = temp__3974__auto____12593;
        var G__12595 = cljs.core.first.call(null, G__12588__12594);
        var G__12596 = G__12588__12594;
        child__12590 = G__12595;
        G__12588__12591 = G__12596;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__12610 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__12611 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__12610)))].join("").toLowerCase();
  var vec__12609__12612 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__12611, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__12613 = cljs.core.nth.call(null, vec__12609__12612, 0, null);
  var start_wrap__12614 = cljs.core.nth.call(null, vec__12609__12612, 1, null);
  var end_wrap__12615 = cljs.core.nth.call(null, vec__12609__12612, 2, null);
  var div__12619 = function() {
    var wrapper__12617 = function() {
      var div__12616 = document.createElement("div");
      div__12616.innerHTML = [cljs.core.str(start_wrap__12614), cljs.core.str(html__12610), cljs.core.str(end_wrap__12615)].join("");
      return div__12616
    }();
    var level__12618 = depth__12613;
    while(true) {
      if(level__12618 > 0) {
        var G__12621 = wrapper__12617.lastChild;
        var G__12622 = level__12618 - 1;
        wrapper__12617 = G__12621;
        level__12618 = G__12622;
        continue
      }else {
        return wrapper__12617
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__12619, html__12610)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____12620 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____12620) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__12610)
    }else {
      return and__3822__auto____12620
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__12619, html__12610)
  }else {
  }
  return div__12619.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____12627 = content;
    if(and__3822__auto____12627) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____12627
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2363__auto____12628 = content == null ? null : content;
    return function() {
      var or__3824__auto____12629 = domina.nodes[goog.typeOf(x__2363__auto____12628)];
      if(or__3824__auto____12629) {
        return or__3824__auto____12629
      }else {
        var or__3824__auto____12630 = domina.nodes["_"];
        if(or__3824__auto____12630) {
          return or__3824__auto____12630
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____12635 = nodeseq;
    if(and__3822__auto____12635) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____12635
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2363__auto____12636 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____12637 = domina.single_node[goog.typeOf(x__2363__auto____12636)];
      if(or__3824__auto____12637) {
        return or__3824__auto____12637
      }else {
        var or__3824__auto____12638 = domina.single_node["_"];
        if(or__3824__auto____12638) {
          return or__3824__auto____12638
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12640 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____12640)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____12640
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__12641) {
    var mesg = cljs.core.seq(arglist__12641);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__12642) {
    var mesg = cljs.core.seq(arglist__12642);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t12650) {
    domina.t12650 = function(class_name, by_class, meta12651) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta12651 = meta12651;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t12650.cljs$lang$type = true;
    domina.t12650.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
      return cljs.core.list.call(null, "domina/t12650")
    };
    domina.t12650.prototype.domina$DomContent$ = true;
    domina.t12650.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__12653 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__12653.class_name)))
    };
    domina.t12650.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__12654 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__12654.class_name)))
    };
    domina.t12650.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12652) {
      var this__12655 = this;
      return this__12655.meta12651
    };
    domina.t12650.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12652, meta12651) {
      var this__12656 = this;
      return new domina.t12650(this__12656.class_name, this__12656.by_class, meta12651)
    };
    domina.t12650
  }else {
  }
  return new domina.t12650(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__12657_SHARP_) {
    return p1__12657_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__12658_SHARP_, p2__12659_SHARP_) {
    return goog.dom.insertChildAt(p1__12658_SHARP_, p2__12659_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12661_SHARP_, p2__12660_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__12660_SHARP_, p1__12661_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12663_SHARP_, p2__12662_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__12662_SHARP_, p1__12663_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12665_SHARP_, p2__12664_SHARP_) {
    return goog.dom.replaceNode(p2__12664_SHARP_, p1__12665_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__12667 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__12667))) {
    return null
  }else {
    return s__12667
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__12674__12675 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12674__12675) {
      var n__12676 = cljs.core.first.call(null, G__12674__12675);
      var G__12674__12677 = G__12674__12675;
      while(true) {
        goog.style.setStyle(n__12676, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12678 = cljs.core.next.call(null, G__12674__12677);
        if(temp__3974__auto____12678) {
          var G__12674__12679 = temp__3974__auto____12678;
          var G__12680 = cljs.core.first.call(null, G__12674__12679);
          var G__12681 = G__12674__12679;
          n__12676 = G__12680;
          G__12674__12677 = G__12681;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__12682) {
    var content = cljs.core.first(arglist__12682);
    var name = cljs.core.first(cljs.core.next(arglist__12682));
    var value = cljs.core.rest(cljs.core.next(arglist__12682));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12689__12690 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12689__12690) {
      var n__12691 = cljs.core.first.call(null, G__12689__12690);
      var G__12689__12692 = G__12689__12690;
      while(true) {
        n__12691.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12693 = cljs.core.next.call(null, G__12689__12692);
        if(temp__3974__auto____12693) {
          var G__12689__12694 = temp__3974__auto____12693;
          var G__12695 = cljs.core.first.call(null, G__12689__12694);
          var G__12696 = G__12689__12694;
          n__12691 = G__12695;
          G__12689__12692 = G__12696;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12697) {
    var content = cljs.core.first(arglist__12697);
    var name = cljs.core.first(cljs.core.next(arglist__12697));
    var value = cljs.core.rest(cljs.core.next(arglist__12697));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12704__12705 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12704__12705) {
    var n__12706 = cljs.core.first.call(null, G__12704__12705);
    var G__12704__12707 = G__12704__12705;
    while(true) {
      n__12706.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____12708 = cljs.core.next.call(null, G__12704__12707);
      if(temp__3974__auto____12708) {
        var G__12704__12709 = temp__3974__auto____12708;
        var G__12710 = cljs.core.first.call(null, G__12704__12709);
        var G__12711 = G__12704__12709;
        n__12706 = G__12710;
        G__12704__12707 = G__12711;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12717__12718 = pair.split(/\s*:\s*/);
    var k__12719 = cljs.core.nth.call(null, vec__12717__12718, 0, null);
    var v__12720 = cljs.core.nth.call(null, vec__12717__12718, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____12721 = k__12719;
      if(cljs.core.truth_(and__3822__auto____12721)) {
        return v__12720
      }else {
        return and__3822__auto____12721
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12719.toLowerCase()), v__12720)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12724 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12724)) {
    return domina.parse_style_attributes.call(null, style__12724)
  }else {
    if(cljs.core.truth_(style__12724.cssText)) {
      return domina.parse_style_attributes.call(null, style__12724.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12730 = domina.single_node.call(null, content);
  var attrs__12731 = node__12730.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12722_SHARP_) {
    var attr__12732 = attrs__12731.item(p1__12722_SHARP_);
    var value__12733 = attr__12732.nodeValue;
    if(function() {
      var and__3822__auto____12734 = cljs.core.not_EQ_.call(null, null, value__12733);
      if(and__3822__auto____12734) {
        return cljs.core.not_EQ_.call(null, "", value__12733)
      }else {
        return and__3822__auto____12734
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12732.nodeName.toLowerCase())], [attr__12732.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12731.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12754__12755 = cljs.core.seq.call(null, styles);
  if(G__12754__12755) {
    var G__12757__12759 = cljs.core.first.call(null, G__12754__12755);
    var vec__12758__12760 = G__12757__12759;
    var name__12761 = cljs.core.nth.call(null, vec__12758__12760, 0, null);
    var value__12762 = cljs.core.nth.call(null, vec__12758__12760, 1, null);
    var G__12754__12763 = G__12754__12755;
    var G__12757__12764 = G__12757__12759;
    var G__12754__12765 = G__12754__12763;
    while(true) {
      var vec__12766__12767 = G__12757__12764;
      var name__12768 = cljs.core.nth.call(null, vec__12766__12767, 0, null);
      var value__12769 = cljs.core.nth.call(null, vec__12766__12767, 1, null);
      var G__12754__12770 = G__12754__12765;
      domina.set_style_BANG_.call(null, content, name__12768, value__12769);
      var temp__3974__auto____12771 = cljs.core.next.call(null, G__12754__12770);
      if(temp__3974__auto____12771) {
        var G__12754__12772 = temp__3974__auto____12771;
        var G__12773 = cljs.core.first.call(null, G__12754__12772);
        var G__12774 = G__12754__12772;
        G__12757__12764 = G__12773;
        G__12754__12765 = G__12774;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12794__12795 = cljs.core.seq.call(null, attrs);
  if(G__12794__12795) {
    var G__12797__12799 = cljs.core.first.call(null, G__12794__12795);
    var vec__12798__12800 = G__12797__12799;
    var name__12801 = cljs.core.nth.call(null, vec__12798__12800, 0, null);
    var value__12802 = cljs.core.nth.call(null, vec__12798__12800, 1, null);
    var G__12794__12803 = G__12794__12795;
    var G__12797__12804 = G__12797__12799;
    var G__12794__12805 = G__12794__12803;
    while(true) {
      var vec__12806__12807 = G__12797__12804;
      var name__12808 = cljs.core.nth.call(null, vec__12806__12807, 0, null);
      var value__12809 = cljs.core.nth.call(null, vec__12806__12807, 1, null);
      var G__12794__12810 = G__12794__12805;
      domina.set_attr_BANG_.call(null, content, name__12808, value__12809);
      var temp__3974__auto____12811 = cljs.core.next.call(null, G__12794__12810);
      if(temp__3974__auto____12811) {
        var G__12794__12812 = temp__3974__auto____12811;
        var G__12813 = cljs.core.first.call(null, G__12794__12812);
        var G__12814 = G__12794__12812;
        G__12797__12804 = G__12813;
        G__12794__12805 = G__12814;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12821__12822 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12821__12822) {
    var node__12823 = cljs.core.first.call(null, G__12821__12822);
    var G__12821__12824 = G__12821__12822;
    while(true) {
      goog.dom.classes.add(node__12823, class$);
      var temp__3974__auto____12825 = cljs.core.next.call(null, G__12821__12824);
      if(temp__3974__auto____12825) {
        var G__12821__12826 = temp__3974__auto____12825;
        var G__12827 = cljs.core.first.call(null, G__12821__12826);
        var G__12828 = G__12821__12826;
        node__12823 = G__12827;
        G__12821__12824 = G__12828;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12835__12836 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12835__12836) {
    var node__12837 = cljs.core.first.call(null, G__12835__12836);
    var G__12835__12838 = G__12835__12836;
    while(true) {
      goog.dom.classes.remove(node__12837, class$);
      var temp__3974__auto____12839 = cljs.core.next.call(null, G__12835__12838);
      if(temp__3974__auto____12839) {
        var G__12835__12840 = temp__3974__auto____12839;
        var G__12841 = cljs.core.first.call(null, G__12835__12840);
        var G__12842 = G__12835__12840;
        node__12837 = G__12841;
        G__12835__12838 = G__12842;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12850 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12851__12852 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12851__12852) {
    var node__12853 = cljs.core.first.call(null, G__12851__12852);
    var G__12851__12854 = G__12851__12852;
    while(true) {
      goog.dom.classes.set(node__12853, classes__12850);
      var temp__3974__auto____12855 = cljs.core.next.call(null, G__12851__12854);
      if(temp__3974__auto____12855) {
        var G__12851__12856 = temp__3974__auto____12855;
        var G__12857 = cljs.core.first.call(null, G__12851__12856);
        var G__12858 = G__12851__12856;
        node__12853 = G__12857;
        G__12851__12854 = G__12858;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12865__12866 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12865__12866) {
    var node__12867 = cljs.core.first.call(null, G__12865__12866);
    var G__12865__12868 = G__12865__12866;
    while(true) {
      goog.dom.setTextContent(node__12867, value);
      var temp__3974__auto____12869 = cljs.core.next.call(null, G__12865__12868);
      if(temp__3974__auto____12869) {
        var G__12865__12870 = temp__3974__auto____12869;
        var G__12871 = cljs.core.first.call(null, G__12865__12870);
        var G__12872 = G__12865__12870;
        node__12867 = G__12871;
        G__12865__12868 = G__12872;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12879__12880 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12879__12880) {
    var node__12881 = cljs.core.first.call(null, G__12879__12880);
    var G__12879__12882 = G__12879__12880;
    while(true) {
      goog.dom.forms.setValue(node__12881, value);
      var temp__3974__auto____12883 = cljs.core.next.call(null, G__12879__12882);
      if(temp__3974__auto____12883) {
        var G__12879__12884 = temp__3974__auto____12883;
        var G__12885 = cljs.core.first.call(null, G__12879__12884);
        var G__12886 = G__12879__12884;
        node__12881 = G__12885;
        G__12879__12882 = G__12886;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12903 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12904 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12905 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12906 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12905);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12907 = allows_inner_html_QMARK___12903;
    if(and__3822__auto____12907) {
      var and__3822__auto____12909 = function() {
        var or__3824__auto____12908 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____12908)) {
          return or__3824__auto____12908
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12904)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____12909)) {
        return!special_tag_QMARK___12906
      }else {
        return and__3822__auto____12909
      }
    }else {
      return and__3822__auto____12907
    }
  }())) {
    var value__12910 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12913__12914 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12913__12914) {
        var node__12915 = cljs.core.first.call(null, G__12913__12914);
        var G__12913__12916 = G__12913__12914;
        while(true) {
          goog.events.removeAll(node__12915);
          node__12915.innerHTML = value__12910;
          var temp__3974__auto____12917 = cljs.core.next.call(null, G__12913__12916);
          if(temp__3974__auto____12917) {
            var G__12913__12918 = temp__3974__auto____12917;
            var G__12919 = cljs.core.first.call(null, G__12913__12918);
            var G__12920 = G__12913__12918;
            node__12915 = G__12919;
            G__12913__12916 = G__12920;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12911) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12911)) {
        var e__12912 = e12911;
        domina.replace_children_BANG_.call(null, content, value__12910)
      }else {
        if("\ufdd0'else") {
          throw e12911;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12926 = domina.single_node.call(null, node).__domina_data;
    var value__12927 = cljs.core.truth_(m__12926) ? cljs.core._lookup.call(null, m__12926, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____12928 = bubble;
      if(cljs.core.truth_(and__3822__auto____12928)) {
        return value__12927 == null
      }else {
        return and__3822__auto____12928
      }
    }())) {
      var temp__3974__auto____12929 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____12929)) {
        var parent__12930 = temp__3974__auto____12929;
        return get_data.call(null, parent__12930, key, true)
      }else {
        return null
      }
    }else {
      return value__12927
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12936 = function() {
    var or__3824__auto____12935 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____12935)) {
      return or__3824__auto____12935
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12936, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12948 = domina.nodes.call(null, parent_content);
  var children__12949 = domina.nodes.call(null, child_content);
  var first_child__12957 = function() {
    var frag__12950 = document.createDocumentFragment();
    var G__12951__12952 = cljs.core.seq.call(null, children__12949);
    if(G__12951__12952) {
      var child__12953 = cljs.core.first.call(null, G__12951__12952);
      var G__12951__12954 = G__12951__12952;
      while(true) {
        frag__12950.appendChild(child__12953);
        var temp__3974__auto____12955 = cljs.core.next.call(null, G__12951__12954);
        if(temp__3974__auto____12955) {
          var G__12951__12956 = temp__3974__auto____12955;
          var G__12959 = cljs.core.first.call(null, G__12951__12956);
          var G__12960 = G__12951__12956;
          child__12953 = G__12959;
          G__12951__12954 = G__12960;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12950
  }();
  var other_children__12958 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12948) - 1, function() {
    return first_child__12957.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12948)) {
    f.call(null, cljs.core.first.call(null, parents__12948), first_child__12957);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12931_SHARP_, p2__12932_SHARP_) {
      return f.call(null, p1__12931_SHARP_, p2__12932_SHARP_)
    }, cljs.core.rest.call(null, parents__12948), other_children__12958))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____12962 = obj;
  if(cljs.core.truth_(and__3822__auto____12962)) {
    return obj.length
  }else {
    return and__3822__auto____12962
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12966__12967 = list_thing;
      if(G__12966__12967) {
        if(function() {
          var or__3824__auto____12968 = G__12966__12967.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12968) {
            return or__3824__auto____12968
          }else {
            return G__12966__12967.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12966__12967.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12966__12967)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12966__12967)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12969__12970 = content;
      if(G__12969__12970) {
        if(function() {
          var or__3824__auto____12971 = G__12969__12970.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12971) {
            return or__3824__auto____12971
          }else {
            return G__12969__12970.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12969__12970.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12969__12970)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12969__12970)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12972__12973 = content;
      if(G__12972__12973) {
        if(function() {
          var or__3824__auto____12974 = G__12972__12973.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12974) {
            return or__3824__auto____12974
          }else {
            return G__12972__12973.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12972__12973.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12972__12973)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12972__12973)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t12561) {
      domina.css.t12561 = function(expr, base, sel, meta12562) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta12562 = meta12562;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t12561.cljs$lang$type = true;
      domina.css.t12561.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
        return cljs.core.list.call(null, "domina.css/t12561")
      };
      domina.css.t12561.prototype.domina$DomContent$ = true;
      domina.css.t12561.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__12564 = this;
        return cljs.core.mapcat.call(null, function(p1__12552_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12564.expr, p1__12552_SHARP_))
        }, domina.nodes.call(null, this__12564.base))
      };
      domina.css.t12561.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__12565 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__12553_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__12565.expr, p1__12553_SHARP_))
        }, domina.nodes.call(null, this__12565.base))))
      };
      domina.css.t12561.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12563) {
        var this__12566 = this;
        return this__12566.meta12562
      };
      domina.css.t12561.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12563, meta12562) {
        var this__12567 = this;
        return new domina.css.t12561(this__12567.expr, this__12567.base, this__12567.sel, meta12562)
      };
      domina.css.t12561
    }else {
    }
    return new domina.css.t12561(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.fx.dom");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.css");
goog.require("goog.fx");
enfocus.core.debug = false;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11978 = enfocus.core.debug;
    if(cljs.core.truth_(and__3822__auto____11978)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3822__auto____11978
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return cljs.core.instance_QMARK_.call(null, NodeList, tst)
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  if(cljs.core._EQ_.call(null, nl, window)) {
    return cljs.core.PersistentVector.fromArray([nl], true)
  }else {
    return domina.nodes.call(null, nl)
  }
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__11979_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__11979_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__11979_SHARP_)], true)
    }else {
      if("\ufdd0'else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__11979_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var G__11999__12000 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  if(G__11999__12000) {
    var G__12002__12004 = cljs.core.first.call(null, G__11999__12000);
    var vec__12003__12005 = G__12002__12004;
    var attr__12006 = cljs.core.nth.call(null, vec__12003__12005, 0, null);
    var value__12007 = cljs.core.nth.call(null, vec__12003__12005, 1, null);
    var G__11999__12008 = G__11999__12000;
    var G__12002__12009 = G__12002__12004;
    var G__11999__12010 = G__11999__12008;
    while(true) {
      var vec__12011__12012 = G__12002__12009;
      var attr__12013 = cljs.core.nth.call(null, vec__12011__12012, 0, null);
      var value__12014 = cljs.core.nth.call(null, vec__12011__12012, 1, null);
      var G__11999__12015 = G__11999__12010;
      goog.style.setStyle(obj, cljs.core.name.call(null, attr__12013), value__12014);
      var temp__3974__auto____12016 = cljs.core.next.call(null, G__11999__12015);
      if(temp__3974__auto____12016) {
        var G__11999__12017 = temp__3974__auto____12016;
        var G__12018 = cljs.core.first.call(null, G__11999__12017);
        var G__12019 = G__11999__12017;
        G__12002__12009 = G__12018;
        G__11999__12010 = G__12019;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var G__12026__12027 = cljs.core.seq.call(null, values);
  if(G__12026__12027) {
    var attr__12028 = cljs.core.first.call(null, G__12026__12027);
    var G__12026__12029 = G__12026__12027;
    while(true) {
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr__12028), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr__12028))
      }
      var temp__3974__auto____12030 = cljs.core.next.call(null, G__12026__12029);
      if(temp__3974__auto____12030) {
        var G__12026__12031 = temp__3974__auto____12030;
        var G__12032 = cljs.core.first.call(null, G__12026__12031);
        var G__12033 = G__12026__12031;
        attr__12028 = G__12032;
        G__12026__12029 = G__12033;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0'else") {
            var G__12034 = parent;
            var G__12035 = child.parentNode;
            parent = G__12034;
            child = G__12035;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.core.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re__12039 = e.relatedTarget;
    var this__12040 = e.currentTarget;
    if(function() {
      var and__3822__auto____12041 = !(re__12039 === this__12040);
      if(and__3822__auto____12041) {
        return cljs.core.not.call(null, enfocus.core.child_of_QMARK_.call(null, this__12040, re__12039))
      }else {
        return and__3822__auto____12041
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var G__12061__12062 = cljs.core.seq.call(null, ats);
        if(G__12061__12062) {
          var G__12064__12066 = cljs.core.first.call(null, G__12061__12062);
          var vec__12065__12067 = G__12064__12066;
          var k__12068 = cljs.core.nth.call(null, vec__12065__12067, 0, null);
          var v__12069 = cljs.core.nth.call(null, vec__12065__12067, 1, null);
          var G__12061__12070 = G__12061__12062;
          var G__12064__12071 = G__12064__12066;
          var G__12061__12072 = G__12061__12070;
          while(true) {
            var vec__12073__12074 = G__12064__12071;
            var k__12075 = cljs.core.nth.call(null, vec__12073__12074, 0, null);
            var v__12076 = cljs.core.nth.call(null, vec__12073__12074, 1, null);
            var G__12061__12077 = G__12061__12072;
            add_map_attrs.call(null, elem, k__12075, v__12076);
            var temp__3974__auto____12078 = cljs.core.next.call(null, G__12061__12077);
            if(temp__3974__auto____12078) {
              var G__12061__12079 = temp__3974__auto____12078;
              var G__12080 = cljs.core.first.call(null, G__12061__12079);
              var G__12081 = G__12061__12079;
              G__12064__12071 = G__12080;
              G__12061__12072 = G__12081;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  add_map_attrs.cljs$lang$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$lang$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.hide_style = cljs.core.ObjMap.fromObject(["style"], {"style":"display: none; width: 0px; height: 0px"}).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div__12089 = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core.instance_QMARK_.call(null, DocumentFragment, child)) {
    goog.dom.appendChild(div__12089, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var G__12090__12091 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    if(G__12090__12091) {
      var node__12092 = cljs.core.first.call(null, G__12090__12091);
      var G__12090__12093 = G__12090__12091;
      while(true) {
        goog.dom.appendChild(div__12089, node__12092);
        var temp__3974__auto____12094 = cljs.core.next.call(null, G__12090__12093);
        if(temp__3974__auto____12094) {
          var G__12090__12095 = temp__3974__auto____12094;
          var G__12096 = cljs.core.first.call(null, G__12090__12095);
          var G__12097 = G__12090__12095;
          node__12092 = G__12096;
          G__12090__12093 = G__12097;
          continue
        }else {
        }
        break
      }
    }else {
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().body, div__12089);
  return div__12089
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child__12100 = div.childNodes;
  var frag__12101 = document.createDocumentFragment();
  goog.dom.append(frag__12101, child__12100);
  goog.dom.removeNode(div);
  return frag__12101
};
enfocus.core.replace_ids = function replace_ids(text) {
  var re__12105 = new RegExp("(<.*?\\sid=['\"])(.*?)(['\"].*?>)", "g");
  var sym__12106 = [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join("");
  return cljs.core.PersistentVector.fromArray([[cljs.core.str(sym__12106)].join(""), text.replace(re__12105, function(a, b, c, d) {
    return[cljs.core.str(b), cljs.core.str(sym__12106), cljs.core.str(c), cljs.core.str(d)].join("")
  })], true)
};
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes__12111 = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col__12112 = enfocus.core.nodes__GT_coll.call(null, id_nodes__12111);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12102_SHARP_) {
    var id__12113 = p1__12102_SHARP_.getAttribute("id");
    var rid__12114 = id__12113.replace(sym, "");
    return p1__12102_SHARP_.setAttribute("id", rid__12114)
  }, nod_col__12112))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri, dom_key) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req__12123 = new goog.net.XhrIo;
    var callback__12130 = function(req) {
      var text__12125 = req.getResponseText();
      var vec__12124__12126 = enfocus.core.replace_ids.call(null, text__12125);
      var sym__12127 = cljs.core.nth.call(null, vec__12124__12126, 0, null);
      var txt__12128 = cljs.core.nth.call(null, vec__12124__12126, 1, null);
      var data__12129 = goog.dom.htmlToDocumentFragment(txt__12128);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, dom_key, cljs.core.PersistentVector.fromArray([sym__12127, data__12129], true))
    };
    goog.events.listen(req__12123, goog.net.EventType.COMPLETE, function() {
      callback__12130.call(null, req__12123);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req__12123.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod__12132 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod__12132)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod__12132), cljs.core.second.call(null, nod__12132).cloneNode(true)], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str__12142 = enfocus.core.create_sel_str.call(null, sel);
  var cache__12143 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str__12142)].join(""));
  if(cljs.core.truth_(cache__12143)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache__12143), cljs.core.second.call(null, cache__12143).cloneNode(true)], true)
  }else {
    var vec__12144__12145 = enfocus.core.get_cached_dom.call(null, uri);
    var sym__12146 = cljs.core.nth.call(null, vec__12144__12145, 0, null);
    var tdom__12147 = cljs.core.nth.call(null, vec__12144__12145, 1, null);
    var dom__12148 = enfocus.core.create_hidden_dom.call(null, tdom__12147);
    var tsnip__12149 = domina.nodes.call(null, enfocus.core.css_select.call(null, sym__12146, dom__12148, sel));
    var snip__12150 = cljs.core.first.call(null, tsnip__12149);
    enfocus.core.remove_node_return_child.call(null, dom__12148);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str__12142)].join(""), cljs.core.PersistentVector.fromArray([sym__12146, snip__12150], true));
    return cljs.core.PersistentVector.fromArray([sym__12146, snip__12150], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  return function trans(pnodes) {
    var pnod_col__12157 = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result__12158 = cljs.core.map.call(null, func, pnod_col__12157);
    if(cljs.core.count.call(null, result__12158) <= 1) {
      return cljs.core.first.call(null, result__12158)
    }else {
      return result__12158
    }
  }
};
enfocus.core.chainable_standard = function chainable_standard(func) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__12162 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      cljs.core.doall.call(null, cljs.core.map.call(null, func, pnod_col__12162));
      if(!(chain == null)) {
        return chain.call(null, pnodes)
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.chainable_effect = function chainable_effect(func, callback) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__12191 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var cnt__12192 = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col__12191));
      var partial_cback__12193 = function() {
        cljs.core.swap_BANG_.call(null, cnt__12192, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt__12192))) {
          if(!(callback == null)) {
            callback.call(null, pnodes)
          }else {
          }
          if(!(chain == null)) {
            return chain.call(null, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      };
      var G__12194__12195 = cljs.core.seq.call(null, pnod_col__12191);
      if(G__12194__12195) {
        var pnod__12196 = cljs.core.first.call(null, G__12194__12195);
        var G__12194__12197 = G__12194__12195;
        while(true) {
          func.call(null, pnod__12196, partial_cback__12193);
          var temp__3974__auto____12198 = cljs.core.next.call(null, G__12194__12197);
          if(temp__3974__auto____12198) {
            var G__12194__12199 = temp__3974__auto____12198;
            var G__12200 = cljs.core.first.call(null, G__12194__12199);
            var G__12201 = G__12194__12199;
            pnod__12196 = G__12200;
            G__12194__12197 = G__12201;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.domina_chain = function() {
  var domina_chain = null;
  var domina_chain__1 = function(func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        func.call(null, nodes);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  var domina_chain__2 = function(values, func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        var vnodes__12207 = cljs.core.mapcat.call(null, function(p1__12163_SHARP_) {
          return domina.nodes.call(null, p1__12163_SHARP_)
        }, values);
        func.call(null, nodes, vnodes__12207);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  domina_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return domina_chain__1.call(this, values);
      case 2:
        return domina_chain__2.call(this, values, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  domina_chain.cljs$lang$arity$1 = domina_chain__1;
  domina_chain.cljs$lang$arity$2 = domina_chain__2;
  return domina_chain
}();
enfocus.core.en_content = function() {
  var en_content__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12202_SHARP_, p2__12203_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__12202_SHARP_);
      return domina.append_BANG_.call(null, p1__12202_SHARP_, p2__12203_SHARP_)
    })
  };
  var en_content = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_content__delegate.call(this, values)
  };
  en_content.cljs$lang$maxFixedArity = 0;
  en_content.cljs$lang$applyTo = function(arglist__12209) {
    var values = cljs.core.seq(arglist__12209);
    return en_content__delegate(values)
  };
  en_content.cljs$lang$arity$variadic = en_content__delegate;
  return en_content
}();
enfocus.core.en_html_content = function en_html_content(txt) {
  return enfocus.core.domina_chain.call(null, function(p1__12208_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__12208_SHARP_, txt)
  })
};
enfocus.core.en_set_attr = function() {
  var en_set_attr__delegate = function(values) {
    var pairs__12232 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__12210_SHARP_) {
      var G__12233__12234 = cljs.core.seq.call(null, pairs__12232);
      if(G__12233__12234) {
        var G__12236__12238 = cljs.core.first.call(null, G__12233__12234);
        var vec__12237__12239 = G__12236__12238;
        var name__12240 = cljs.core.nth.call(null, vec__12237__12239, 0, null);
        var value__12241 = cljs.core.nth.call(null, vec__12237__12239, 1, null);
        var G__12233__12242 = G__12233__12234;
        var G__12236__12243 = G__12236__12238;
        var G__12233__12244 = G__12233__12242;
        while(true) {
          var vec__12245__12246 = G__12236__12243;
          var name__12247 = cljs.core.nth.call(null, vec__12245__12246, 0, null);
          var value__12248 = cljs.core.nth.call(null, vec__12245__12246, 1, null);
          var G__12233__12249 = G__12233__12244;
          domina.set_attr_BANG_.call(null, p1__12210_SHARP_, name__12247, value__12248);
          var temp__3974__auto____12250 = cljs.core.next.call(null, G__12233__12249);
          if(temp__3974__auto____12250) {
            var G__12233__12251 = temp__3974__auto____12250;
            var G__12252 = cljs.core.first.call(null, G__12233__12251);
            var G__12253 = G__12233__12251;
            G__12236__12243 = G__12252;
            G__12233__12244 = G__12253;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_attr__delegate.call(this, values)
  };
  en_set_attr.cljs$lang$maxFixedArity = 0;
  en_set_attr.cljs$lang$applyTo = function(arglist__12254) {
    var values = cljs.core.seq(arglist__12254);
    return en_set_attr__delegate(values)
  };
  en_set_attr.cljs$lang$arity$variadic = en_set_attr__delegate;
  return en_set_attr
}();
enfocus.core.en_remove_attr = function() {
  var en_remove_attr__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__12211_SHARP_) {
      var G__12261__12262 = cljs.core.seq.call(null, values);
      if(G__12261__12262) {
        var name__12263 = cljs.core.first.call(null, G__12261__12262);
        var G__12261__12264 = G__12261__12262;
        while(true) {
          domina.remove_attr_BANG_.call(null, p1__12211_SHARP_, name__12263);
          var temp__3974__auto____12265 = cljs.core.next.call(null, G__12261__12264);
          if(temp__3974__auto____12265) {
            var G__12261__12266 = temp__3974__auto____12265;
            var G__12267 = cljs.core.first.call(null, G__12261__12266);
            var G__12268 = G__12261__12266;
            name__12263 = G__12267;
            G__12261__12264 = G__12268;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_attr__delegate.call(this, values)
  };
  en_remove_attr.cljs$lang$maxFixedArity = 0;
  en_remove_attr.cljs$lang$applyTo = function(arglist__12269) {
    var values = cljs.core.seq(arglist__12269);
    return en_remove_attr__delegate(values)
  };
  en_remove_attr.cljs$lang$arity$variadic = en_remove_attr__delegate;
  return en_remove_attr
}();
enfocus.core.en_set_prop = function() {
  var en_set_prop__delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(node) {
      var h__12281 = cljs.core.mapcat.call(null, function(p__12276) {
        var vec__12277__12278 = p__12276;
        var n__12279 = cljs.core.nth.call(null, vec__12277__12278, 0, null);
        var v__12280 = cljs.core.nth.call(null, vec__12277__12278, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n__12279), v__12280)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h__12281))
    })
  };
  var en_set_prop = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_prop__delegate.call(this, forms)
  };
  en_set_prop.cljs$lang$maxFixedArity = 0;
  en_set_prop.cljs$lang$applyTo = function(arglist__12282) {
    var forms = cljs.core.seq(arglist__12282);
    return en_set_prop__delegate(forms)
  };
  en_set_prop.cljs$lang$arity$variadic = en_set_prop__delegate;
  return en_set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.en_add_class = function() {
  var en_add_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__12283_SHARP_) {
      var G__12291__12292 = cljs.core.seq.call(null, values);
      if(G__12291__12292) {
        var val__12293 = cljs.core.first.call(null, G__12291__12292);
        var G__12291__12294 = G__12291__12292;
        while(true) {
          domina.add_class_BANG_.call(null, p1__12283_SHARP_, val__12293);
          var temp__3974__auto____12295 = cljs.core.next.call(null, G__12291__12294);
          if(temp__3974__auto____12295) {
            var G__12291__12296 = temp__3974__auto____12295;
            var G__12297 = cljs.core.first.call(null, G__12291__12296);
            var G__12298 = G__12291__12296;
            val__12293 = G__12297;
            G__12291__12294 = G__12298;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_add_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_add_class__delegate.call(this, values)
  };
  en_add_class.cljs$lang$maxFixedArity = 0;
  en_add_class.cljs$lang$applyTo = function(arglist__12299) {
    var values = cljs.core.seq(arglist__12299);
    return en_add_class__delegate(values)
  };
  en_add_class.cljs$lang$arity$variadic = en_add_class__delegate;
  return en_add_class
}();
enfocus.core.en_remove_class = function() {
  var en_remove_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__12284_SHARP_) {
      var G__12307__12308 = cljs.core.seq.call(null, values);
      if(G__12307__12308) {
        var val__12309 = cljs.core.first.call(null, G__12307__12308);
        var G__12307__12310 = G__12307__12308;
        while(true) {
          domina.remove_class_BANG_.call(null, p1__12284_SHARP_, val__12309);
          var temp__3974__auto____12311 = cljs.core.next.call(null, G__12307__12310);
          if(temp__3974__auto____12311) {
            var G__12307__12312 = temp__3974__auto____12311;
            var G__12313 = cljs.core.first.call(null, G__12307__12312);
            var G__12314 = G__12307__12312;
            val__12309 = G__12313;
            G__12307__12310 = G__12314;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_class__delegate.call(this, values)
  };
  en_remove_class.cljs$lang$maxFixedArity = 0;
  en_remove_class.cljs$lang$applyTo = function(arglist__12315) {
    var values = cljs.core.seq(arglist__12315);
    return en_remove_class__delegate(values)
  };
  en_remove_class.cljs$lang$arity$variadic = en_remove_class__delegate;
  return en_remove_class
}();
enfocus.core.en_set_class = function() {
  var en_set_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__12300_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__12300_SHARP_, values)
    })
  };
  var en_set_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_class__delegate.call(this, values)
  };
  en_set_class.cljs$lang$maxFixedArity = 0;
  en_set_class.cljs$lang$applyTo = function(arglist__12316) {
    var values = cljs.core.seq(arglist__12316);
    return en_set_class__delegate(values)
  };
  en_set_class.cljs$lang$arity$variadic = en_set_class__delegate;
  return en_set_class
}();
enfocus.core.en_do__GT_ = function() {
  var en_do__GT___delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__12325__12326 = cljs.core.seq.call(null, forms);
      if(G__12325__12326) {
        var fun__12327 = cljs.core.first.call(null, G__12325__12326);
        var G__12325__12328 = G__12325__12326;
        while(true) {
          fun__12327.call(null, pnod);
          var temp__3974__auto____12329 = cljs.core.next.call(null, G__12325__12328);
          if(temp__3974__auto____12329) {
            var G__12325__12330 = temp__3974__auto____12329;
            var G__12331 = cljs.core.first.call(null, G__12325__12330);
            var G__12332 = G__12325__12330;
            fun__12327 = G__12331;
            G__12325__12328 = G__12332;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_do__GT_ = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_do__GT___delegate.call(this, forms)
  };
  en_do__GT_.cljs$lang$maxFixedArity = 0;
  en_do__GT_.cljs$lang$applyTo = function(arglist__12333) {
    var forms = cljs.core.seq(arglist__12333);
    return en_do__GT___delegate(forms)
  };
  en_do__GT_.cljs$lang$arity$variadic = en_do__GT___delegate;
  return en_do__GT_
}();
enfocus.core.en_append = function() {
  var en_append__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12317_SHARP_, p2__12318_SHARP_) {
      return domina.append_BANG_.call(null, p1__12317_SHARP_, p2__12318_SHARP_)
    })
  };
  var en_append = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_append__delegate.call(this, values)
  };
  en_append.cljs$lang$maxFixedArity = 0;
  en_append.cljs$lang$applyTo = function(arglist__12336) {
    var values = cljs.core.seq(arglist__12336);
    return en_append__delegate(values)
  };
  en_append.cljs$lang$arity$variadic = en_append__delegate;
  return en_append
}();
enfocus.core.en_prepend = function() {
  var en_prepend__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12334_SHARP_, p2__12335_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__12334_SHARP_, p2__12335_SHARP_)
    })
  };
  var en_prepend = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_prepend__delegate.call(this, values)
  };
  en_prepend.cljs$lang$maxFixedArity = 0;
  en_prepend.cljs$lang$applyTo = function(arglist__12339) {
    var values = cljs.core.seq(arglist__12339);
    return en_prepend__delegate(values)
  };
  en_prepend.cljs$lang$arity$variadic = en_prepend__delegate;
  return en_prepend
}();
enfocus.core.en_before = function() {
  var en_before__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12337_SHARP_, p2__12338_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__12337_SHARP_, p2__12338_SHARP_)
    })
  };
  var en_before = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_before__delegate.call(this, values)
  };
  en_before.cljs$lang$maxFixedArity = 0;
  en_before.cljs$lang$applyTo = function(arglist__12342) {
    var values = cljs.core.seq(arglist__12342);
    return en_before__delegate(values)
  };
  en_before.cljs$lang$arity$variadic = en_before__delegate;
  return en_before
}();
enfocus.core.en_after = function() {
  var en_after__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12340_SHARP_, p2__12341_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__12340_SHARP_, p2__12341_SHARP_)
    })
  };
  var en_after = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_after__delegate.call(this, values)
  };
  en_after.cljs$lang$maxFixedArity = 0;
  en_after.cljs$lang$applyTo = function(arglist__12345) {
    var values = cljs.core.seq(arglist__12345);
    return en_after__delegate(values)
  };
  en_after.cljs$lang$arity$variadic = en_after__delegate;
  return en_after
}();
enfocus.core.en_substitute = function() {
  var en_substitute__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__12343_SHARP_, p2__12344_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__12343_SHARP_, p2__12344_SHARP_)
    })
  };
  var en_substitute = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_substitute__delegate.call(this, values)
  };
  en_substitute.cljs$lang$maxFixedArity = 0;
  en_substitute.cljs$lang$applyTo = function(arglist__12347) {
    var values = cljs.core.seq(arglist__12347);
    return en_substitute__delegate(values)
  };
  en_substitute.cljs$lang$arity$variadic = en_substitute__delegate;
  return en_substitute
}();
enfocus.core.en_remove_node = function en_remove_node() {
  return enfocus.core.domina_chain.call(null, function(p1__12346_SHARP_) {
    return domina.detach_BANG_.call(null, p1__12346_SHARP_)
  })
};
enfocus.core.en_wrap = function en_wrap(elm, mattr) {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var elem__12349 = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem__12349, mattr);
    enfocus.core.at.call(null, elem__12349, enfocus.core.en_content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.en_do__GT_.call(null, enfocus.core.en_after.call(null, elem__12349), enfocus.core.en_remove_node.call(null)))
  })
};
enfocus.core.en_unwrap = function en_unwrap() {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var frag__12352 = document.createDocumentFragment();
    goog.dom.append(frag__12352, pnod.childNodes);
    return goog.dom.replaceNode(frag__12352, pnod)
  })
};
enfocus.core.en_set_style = function() {
  var en_set_style__delegate = function(values) {
    var pairs__12373 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__12350_SHARP_) {
      var G__12374__12375 = cljs.core.seq.call(null, pairs__12373);
      if(G__12374__12375) {
        var G__12377__12379 = cljs.core.first.call(null, G__12374__12375);
        var vec__12378__12380 = G__12377__12379;
        var name__12381 = cljs.core.nth.call(null, vec__12378__12380, 0, null);
        var value__12382 = cljs.core.nth.call(null, vec__12378__12380, 1, null);
        var G__12374__12383 = G__12374__12375;
        var G__12377__12384 = G__12377__12379;
        var G__12374__12385 = G__12374__12383;
        while(true) {
          var vec__12386__12387 = G__12377__12384;
          var name__12388 = cljs.core.nth.call(null, vec__12386__12387, 0, null);
          var value__12389 = cljs.core.nth.call(null, vec__12386__12387, 1, null);
          var G__12374__12390 = G__12374__12385;
          domina.set_style_BANG_.call(null, p1__12350_SHARP_, name__12388, value__12389);
          var temp__3974__auto____12391 = cljs.core.next.call(null, G__12374__12390);
          if(temp__3974__auto____12391) {
            var G__12374__12392 = temp__3974__auto____12391;
            var G__12393 = cljs.core.first.call(null, G__12374__12392);
            var G__12394 = G__12374__12392;
            G__12377__12384 = G__12393;
            G__12374__12385 = G__12394;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_style__delegate.call(this, values)
  };
  en_set_style.cljs$lang$maxFixedArity = 0;
  en_set_style.cljs$lang$applyTo = function(arglist__12395) {
    var values = cljs.core.seq(arglist__12395);
    return en_set_style__delegate(values)
  };
  en_set_style.cljs$lang$arity$variadic = en_set_style__delegate;
  return en_set_style
}();
enfocus.core.en_remove_style = function() {
  var en_remove_style__delegate = function(values) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    })
  };
  var en_remove_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_style__delegate.call(this, values)
  };
  en_remove_style.cljs$lang$maxFixedArity = 0;
  en_remove_style.cljs$lang$applyTo = function(arglist__12396) {
    var values = cljs.core.seq(arglist__12396);
    return en_remove_style__delegate(values)
  };
  en_remove_style.cljs$lang$arity$variadic = en_remove_style__delegate;
  return en_remove_style
}();
enfocus.core.en_focus = function en_focus() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.focus()
  })
};
enfocus.core.en_blur = function en_blur() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.blur()
  })
};
enfocus.core.en_set_data = function en_set_data(ky, val) {
  return enfocus.core.domina_chain.call(null, function(p1__12397_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__12397_SHARP_, ky, val)
  })
};
enfocus.core.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.core.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.core.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.core.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }
};
enfocus.core.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj__12411 = new Object;
  obj__12411.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback__12412 = enfocus.core.mouse_enter_leave.call(null, func);
    callback__12412.listen = func;
    callback__12412.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback__12412)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback__12412)
    }
  };
  obj__12411.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners__12413 = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var G__12414__12415 = cljs.core.seq.call(null, listeners__12413);
    if(G__12414__12415) {
      var obj__12416 = cljs.core.first.call(null, G__12414__12415);
      var G__12414__12417 = G__12414__12415;
      while(true) {
        var listener__12418 = obj__12416.listener;
        if(cljs.core.truth_(function() {
          var and__3822__auto____12420 = function() {
            var or__3824__auto____12419 = cljs.core.not.call(null, func);
            if(or__3824__auto____12419) {
              return or__3824__auto____12419
            }else {
              return cljs.core._EQ_.call(null, listener__12418.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3822__auto____12420)) {
            var or__3824__auto____12421 = cljs.core.not.call(null, opt_scope);
            if(or__3824__auto____12421) {
              return or__3824__auto____12421
            }else {
              return cljs.core._EQ_.call(null, listener__12418.scope, opt_scope)
            }
          }else {
            return and__3822__auto____12420
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener__12418)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener__12418)
          }
        }else {
        }
        var temp__3974__auto____12422 = cljs.core.next.call(null, G__12414__12417);
        if(temp__3974__auto____12422) {
          var G__12414__12423 = temp__3974__auto____12422;
          var G__12424 = cljs.core.first.call(null, G__12414__12423);
          var G__12425 = G__12414__12423;
          obj__12416 = G__12424;
          G__12414__12417 = G__12425;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return listeners__12413
  };
  return obj__12411
};
enfocus.core.wrapper_register = cljs.core.ObjMap.fromObject(["\ufdd0'mouseenter", "\ufdd0'mouseleave"], {"\ufdd0'mouseenter":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseover"), "\ufdd0'mouseleave":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseout")});
enfocus.core.en_listen = function en_listen(event, func) {
  var wrapper__12429 = enfocus.core.wrapper_register.call(null, event);
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    if(function() {
      var and__3822__auto____12430 = cljs.core._EQ_.call(null, "\ufdd0'resize", event);
      if(and__3822__auto____12430) {
        return window === pnod
      }else {
        return and__3822__auto____12430
      }
    }()) {
      return goog.events.listen(enfocus.core.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper__12429 == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper__12429, func)
      }
    }
  })
};
enfocus.core.en_remove_listeners = function() {
  var en_remove_listeners__delegate = function(event_list) {
    var get_name__12438 = function(p1__12426_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__12426_SHARP_, "\ufdd0'mouseenter") ? "\ufdd0'mouseover" : cljs.core._EQ_.call(null, p1__12426_SHARP_, "\ufdd0'mouseleave") ? "\ufdd0'mouseout" : "\ufdd0'else" ? p1__12426_SHARP_ : null)
    };
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__12439__12440 = cljs.core.seq.call(null, event_list);
      if(G__12439__12440) {
        var ev__12441 = cljs.core.first.call(null, G__12439__12440);
        var G__12439__12442 = G__12439__12440;
        while(true) {
          goog.events.removeAll(pnod, get_name__12438.call(null, ev__12441));
          var temp__3974__auto____12443 = cljs.core.next.call(null, G__12439__12442);
          if(temp__3974__auto____12443) {
            var G__12439__12444 = temp__3974__auto____12443;
            var G__12445 = cljs.core.first.call(null, G__12439__12444);
            var G__12446 = G__12439__12444;
            ev__12441 = G__12445;
            G__12439__12442 = G__12446;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_listeners = function(var_args) {
    var event_list = null;
    if(goog.isDef(var_args)) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_listeners__delegate.call(this, event_list)
  };
  en_remove_listeners.cljs$lang$maxFixedArity = 0;
  en_remove_listeners.cljs$lang$applyTo = function(arglist__12447) {
    var event_list = cljs.core.seq(arglist__12447);
    return en_remove_listeners__delegate(event_list)
  };
  en_remove_listeners.cljs$lang$arity$variadic = en_remove_listeners__delegate;
  return en_remove_listeners
}();
enfocus.core.en_unlisten = function() {
  var en_unlisten = null;
  var en_unlisten__1 = function(event) {
    return enfocus.core.en_remove_listeners.call(null, event)
  };
  var en_unlisten__2 = function(event, func) {
    var wrapper__12449 = enfocus.core.wrapper_register.call(null, event);
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      if(wrapper__12449 == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper__12449, func)
      }
    })
  };
  en_unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return en_unlisten__1.call(this, event);
      case 2:
        return en_unlisten__2.call(this, event, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_unlisten.cljs$lang$arity$1 = en_unlisten__1;
  en_unlisten.cljs$lang$arity$2 = en_unlisten__2;
  return en_unlisten
}();
enfocus.core.en_fade_out = function en_fade_out(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__12451 = new goog.fx.dom.FadeOut(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12451, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12451.play()
  }, callback)
};
enfocus.core.en_fade_in = function en_fade_in(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__12453 = new goog.fx.dom.FadeIn(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12453, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12453.play()
  }, callback)
};
enfocus.core.en_resize = function en_resize(wth, hgt, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var csize__12460 = goog.style.getContentBoxSize(pnod);
    var start__12461 = [csize__12460.width, csize__12460.height];
    var wth__12462 = cljs.core._EQ_.call(null, "\ufdd0'curwidth", wth) ? csize__12460.width : wth;
    var hgt__12463 = cljs.core._EQ_.call(null, "\ufdd0'curheight", hgt) ? csize__12460.height : hgt;
    var end__12464 = [wth__12462, hgt__12463];
    var anim__12465 = new goog.fx.dom.Resize(pnod, start__12461, end__12464, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12465, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12465.play()
  }, callback)
};
enfocus.core.en_move = function en_move(xpos, ypos, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var cpos__12472 = goog.style.getPosition(pnod);
    var start__12473 = [cpos__12472.x, cpos__12472.y];
    var xpos__12474 = cljs.core._EQ_.call(null, "\ufdd0'curx", xpos) ? cpos__12472.x : xpos;
    var ypos__12475 = cljs.core._EQ_.call(null, "\ufdd0'cury", ypos) ? cpos__12472.y : ypos;
    var end__12476 = [xpos__12474, ypos__12475];
    var anim__12477 = new goog.fx.dom.Slide(pnod, start__12473, end__12476, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__12477, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__12477.play()
  }, callback)
};
enfocus.core.en_get_attr = function en_get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.en_get_text = function en_get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.en_get_data = function() {
  var en_get_data = null;
  var en_get_data__1 = function(ky) {
    return en_get_data.call(null, ky, false)
  };
  var en_get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, ky, bubble)
    })
  };
  en_get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return en_get_data__1.call(this, ky);
      case 2:
        return en_get_data__2.call(this, ky, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_get_data.cljs$lang$arity$1 = en_get_data__1;
  en_get_data.cljs$lang$arity$2 = en_get_data__2;
  return en_get_data
}();
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.en_filter = function en_filter(tst, trans) {
  return function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col__12487 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest__12488 = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res__12489 = cljs.core.filter.call(null, ttest__12488, pnod_col__12487);
      if(chain == null) {
        return trans.call(null, res__12489)
      }else {
        return trans.call(null, res__12489, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    filt.cljs$lang$arity$1 = filt__1;
    filt.cljs$lang$arity$2 = filt__2;
    return filt
  }()
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0'selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0'checked", enfocus.core.checked_radio_checkbox);
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12490_SHARP_) {
      if(cljs.core.symbol_QMARK_.call(null, p1__12490_SHARP_)) {
        return enfocus.core.css_syms.call(null, p1__12490_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__12490_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__12490_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__12490_SHARP_)) {
            return create_sel_str.call(null, p1__12490_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__12490_SHARP_)) {
              return p1__12490_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_sel_str.cljs$lang$arity$1 = create_sel_str__1;
  create_sel_str.cljs$lang$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    enfocus.core.log_debug.call(null, dom_node);
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, css_sel));
    var sel__12493 = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret__12494 = domina.css.sel.call(null, dom_node, sel__12493);
    return ret__12494
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  css_select.cljs$lang$arity$1 = css_select__1;
  css_select.cljs$lang$arity$2 = css_select__2;
  css_select.cljs$lang$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3824__auto____12496 = func;
  if(cljs.core.truth_(or__3824__auto____12496)) {
    return or__3824__auto____12496
  }else {
    return enfocus.core.en_remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      var G__12516__12517 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans));
      if(G__12516__12517) {
        var G__12519__12521 = cljs.core.first.call(null, G__12516__12517);
        var vec__12520__12522 = G__12519__12521;
        var sel__12523 = cljs.core.nth.call(null, vec__12520__12522, 0, null);
        var t__12524 = cljs.core.nth.call(null, vec__12520__12522, 1, null);
        var G__12516__12525 = G__12516__12517;
        var G__12519__12526 = G__12519__12521;
        var G__12516__12527 = G__12516__12525;
        while(true) {
          var vec__12528__12529 = G__12519__12526;
          var sel__12530 = cljs.core.nth.call(null, vec__12528__12529, 0, null);
          var t__12531 = cljs.core.nth.call(null, vec__12528__12529, 1, null);
          var G__12516__12532 = G__12516__12527;
          enfocus.core.nil_t.call(null, t__12531).call(null, enfocus.core.css_select.call(null, id_mask, node, sel__12530));
          var temp__3974__auto____12533 = cljs.core.next.call(null, G__12516__12532);
          if(temp__3974__auto____12533) {
            var G__12516__12534 = temp__3974__auto____12533;
            var G__12535 = cljs.core.first.call(null, G__12516__12534);
            var G__12536 = G__12516__12534;
            G__12519__12526 = G__12535;
            G__12516__12527 = G__12536;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__12537) {
    var id_mask = cljs.core.first(arglist__12537);
    var node = cljs.core.first(cljs.core.next(arglist__12537));
    var trans = cljs.core.rest(cljs.core.next(arglist__12537));
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$lang$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__12538) {
    var node = cljs.core.first(arglist__12538);
    var trans = cljs.core.rest(arglist__12538);
    return at__delegate(node, trans)
  };
  at.cljs$lang$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__12545) {
        var vec__12546__12547 = p__12545;
        var ky__12548 = cljs.core.nth.call(null, vec__12546__12547, 0, null);
        var sel__12549 = cljs.core.nth.call(null, vec__12546__12547, 1, null);
        var ext__12550 = cljs.core.nth.call(null, vec__12546__12547, 2, null);
        return cljs.core.PersistentVector.fromArray([ky__12548, ext__12550.call(null, enfocus.core.css_select.call(null, "", node, sel__12549))], true)
      }, cljs.core.partition.call(null, 3, trans)))
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__12551) {
    var node = cljs.core.first(arglist__12551);
    var trans = cljs.core.rest(arglist__12551);
    return from__delegate(node, trans)
  };
  from.cljs$lang$arity$variadic = from__delegate;
  return from
}();
Text.prototype.domina$DomContent$ = true;
Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
  return cljs.core.PersistentVector.fromArray([content], true)
};
Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
  return content
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____13508 = reader;
    if(and__3822__auto____13508) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____13508
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2363__auto____13509 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13510 = cljs.reader.read_char[goog.typeOf(x__2363__auto____13509)];
      if(or__3824__auto____13510) {
        return or__3824__auto____13510
      }else {
        var or__3824__auto____13511 = cljs.reader.read_char["_"];
        if(or__3824__auto____13511) {
          return or__3824__auto____13511
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____13516 = reader;
    if(and__3822__auto____13516) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____13516
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2363__auto____13517 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13518 = cljs.reader.unread[goog.typeOf(x__2363__auto____13517)];
      if(or__3824__auto____13518) {
        return or__3824__auto____13518
      }else {
        var or__3824__auto____13519 = cljs.reader.unread["_"];
        if(or__3824__auto____13519) {
          return or__3824__auto____13519
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__13520 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__13520.buffer_atom))) {
    var idx__13521 = cljs.core.deref.call(null, this__13520.index_atom);
    cljs.core.swap_BANG_.call(null, this__13520.index_atom, cljs.core.inc);
    return this__13520.s[idx__13521]
  }else {
    var buf__13522 = cljs.core.deref.call(null, this__13520.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__13520.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__13522)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__13523 = this;
  return cljs.core.swap_BANG_.call(null, this__13523.buffer_atom, function(p1__13503_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__13503_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____13525 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____13525)) {
    return or__3824__auto____13525
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____13530 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____13530) {
    return or__3824__auto____13530
  }else {
    var and__3822__auto____13532 = function() {
      var or__3824__auto____13531 = "+" === initch;
      if(or__3824__auto____13531) {
        return or__3824__auto____13531
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____13532)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__13533 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__13533);
        return next_ch__13533
      }())
    }else {
      return and__3822__auto____13532
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13534) {
    var rdr = cljs.core.first(arglist__13534);
    var msg = cljs.core.rest(arglist__13534);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____13538 = !(ch === "#");
  if(and__3822__auto____13538) {
    var and__3822__auto____13539 = !(ch === "'");
    if(and__3822__auto____13539) {
      var and__3822__auto____13540 = !(ch === ":");
      if(and__3822__auto____13540) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____13540
      }
    }else {
      return and__3822__auto____13539
    }
  }else {
    return and__3822__auto____13538
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__13545 = new goog.string.StringBuffer(initch);
  var ch__13546 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____13547 = ch__13546 == null;
      if(or__3824__auto____13547) {
        return or__3824__auto____13547
      }else {
        var or__3824__auto____13548 = cljs.reader.whitespace_QMARK_.call(null, ch__13546);
        if(or__3824__auto____13548) {
          return or__3824__auto____13548
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__13546)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__13546);
      return sb__13545.toString()
    }else {
      var G__13549 = function() {
        sb__13545.append(ch__13546);
        return sb__13545
      }();
      var G__13550 = cljs.reader.read_char.call(null, rdr);
      sb__13545 = G__13549;
      ch__13546 = G__13550;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__13554 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____13555 = ch__13554 === "n";
      if(or__3824__auto____13555) {
        return or__3824__auto____13555
      }else {
        var or__3824__auto____13556 = ch__13554 === "r";
        if(or__3824__auto____13556) {
          return or__3824__auto____13556
        }else {
          return ch__13554 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__13558 = re.exec(s);
  if(matches__13558 == null) {
    return null
  }else {
    if(matches__13558.length === 1) {
      return matches__13558[0]
    }else {
      return matches__13558
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__13566 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__13567 = groups__13566[2];
  if(!function() {
    var or__3824__auto____13568 = group3__13567 == null;
    if(or__3824__auto____13568) {
      return or__3824__auto____13568
    }else {
      return group3__13567.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__13569 = "-" === groups__13566[1] ? -1 : 1;
    var a__13570 = cljs.core.truth_(groups__13566[3]) ? [groups__13566[3], 10] : cljs.core.truth_(groups__13566[4]) ? [groups__13566[4], 16] : cljs.core.truth_(groups__13566[5]) ? [groups__13566[5], 8] : cljs.core.truth_(groups__13566[7]) ? [groups__13566[7], parseInt(groups__13566[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__13571 = a__13570[0];
    var radix__13572 = a__13570[1];
    if(n__13571 == null) {
      return null
    }else {
      return negate__13569 * parseInt(n__13571, radix__13572)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__13576 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__13577 = groups__13576[1];
  var denominator__13578 = groups__13576[2];
  return parseInt(numinator__13577) / parseInt(denominator__13578)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__13581 = re.exec(s);
  if(function() {
    var and__3822__auto____13582 = !(matches__13581 == null);
    if(and__3822__auto____13582) {
      return matches__13581[0] === s
    }else {
      return and__3822__auto____13582
    }
  }()) {
    if(matches__13581.length === 1) {
      return matches__13581[0]
    }else {
      return matches__13581
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__13584 = parseInt(code_str, 16);
  return String.fromCharCode(code__13584)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__13587 = cljs.reader.read_char.call(null, reader);
  var mapresult__13588 = cljs.reader.escape_char_map.call(null, ch__13587);
  if(cljs.core.truth_(mapresult__13588)) {
    return mapresult__13588
  }else {
    if(ch__13587 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__13587, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__13587 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__13587, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__13587)) {
          return String.fromCharCode(ch__13587)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__13587)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__13590 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__13590))) {
      var G__13591 = cljs.reader.read_char.call(null, rdr);
      ch__13590 = G__13591;
      continue
    }else {
      return ch__13590
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__13598 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__13599 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__13599)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__13599) {
      return cljs.core.persistent_BANG_.call(null, a__13598)
    }else {
      var temp__3971__auto____13600 = cljs.reader.macros.call(null, ch__13599);
      if(cljs.core.truth_(temp__3971__auto____13600)) {
        var macrofn__13601 = temp__3971__auto____13600;
        var mret__13602 = macrofn__13601.call(null, rdr, ch__13599);
        var G__13604 = mret__13602 === rdr ? a__13598 : cljs.core.conj_BANG_.call(null, a__13598, mret__13602);
        a__13598 = G__13604;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__13599);
        var o__13603 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13605 = o__13603 === rdr ? a__13598 : cljs.core.conj_BANG_.call(null, a__13598, o__13603);
        a__13598 = G__13605;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__13610 = cljs.reader.read_char.call(null, rdr);
  var dm__13611 = cljs.reader.dispatch_macros.call(null, ch__13610);
  if(cljs.core.truth_(dm__13611)) {
    return dm__13611.call(null, rdr, _)
  }else {
    var temp__3971__auto____13612 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__13610);
    if(cljs.core.truth_(temp__3971__auto____13612)) {
      var obj__13613 = temp__3971__auto____13612;
      return obj__13613
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__13610)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__13615 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__13615))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__13615)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__13622 = new goog.string.StringBuffer(initch);
  var ch__13623 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____13624 = ch__13623 == null;
      if(or__3824__auto____13624) {
        return or__3824__auto____13624
      }else {
        var or__3824__auto____13625 = cljs.reader.whitespace_QMARK_.call(null, ch__13623);
        if(or__3824__auto____13625) {
          return or__3824__auto____13625
        }else {
          return cljs.reader.macros.call(null, ch__13623)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__13623);
      var s__13626 = buffer__13622.toString();
      var or__3824__auto____13627 = cljs.reader.match_number.call(null, s__13626);
      if(cljs.core.truth_(or__3824__auto____13627)) {
        return or__3824__auto____13627
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__13626, "]")
      }
    }else {
      var G__13628 = function() {
        buffer__13622.append(ch__13623);
        return buffer__13622
      }();
      var G__13629 = cljs.reader.read_char.call(null, reader);
      buffer__13622 = G__13628;
      ch__13623 = G__13629;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__13632 = new goog.string.StringBuffer;
  var ch__13633 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__13633 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__13633) {
        var G__13634 = function() {
          buffer__13632.append(cljs.reader.escape_char.call(null, buffer__13632, reader));
          return buffer__13632
        }();
        var G__13635 = cljs.reader.read_char.call(null, reader);
        buffer__13632 = G__13634;
        ch__13633 = G__13635;
        continue
      }else {
        if('"' === ch__13633) {
          return buffer__13632.toString()
        }else {
          if("\ufdd0'default") {
            var G__13636 = function() {
              buffer__13632.append(ch__13633);
              return buffer__13632
            }();
            var G__13637 = cljs.reader.read_char.call(null, reader);
            buffer__13632 = G__13636;
            ch__13633 = G__13637;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__13639 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__13639, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__13639, 0, token__13639.indexOf("/")), cljs.core.subs.call(null, token__13639, token__13639.indexOf("/") + 1, token__13639.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__13639, cljs.core.symbol.call(null, token__13639))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__13649 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__13650 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__13649);
  var token__13651 = a__13650[0];
  var ns__13652 = a__13650[1];
  var name__13653 = a__13650[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____13655 = function() {
      var and__3822__auto____13654 = !(void 0 === ns__13652);
      if(and__3822__auto____13654) {
        return ns__13652.substring(ns__13652.length - 2, ns__13652.length) === ":/"
      }else {
        return and__3822__auto____13654
      }
    }();
    if(cljs.core.truth_(or__3824__auto____13655)) {
      return or__3824__auto____13655
    }else {
      var or__3824__auto____13656 = name__13653[name__13653.length - 1] === ":";
      if(or__3824__auto____13656) {
        return or__3824__auto____13656
      }else {
        return!(token__13651.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__13651)
  }else {
    if(function() {
      var and__3822__auto____13657 = !(ns__13652 == null);
      if(and__3822__auto____13657) {
        return ns__13652.length > 0
      }else {
        return and__3822__auto____13657
      }
    }()) {
      return cljs.core.keyword.call(null, ns__13652.substring(0, ns__13652.indexOf("/")), name__13653)
    }else {
      return cljs.core.keyword.call(null, token__13651)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__13663 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__13663)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__13664 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__13665__13666 = o__13664;
    if(G__13665__13666) {
      if(function() {
        var or__3824__auto____13667 = G__13665__13666.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____13667) {
          return or__3824__auto____13667
        }else {
          return G__13665__13666.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__13665__13666.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13665__13666)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13665__13666)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__13664, cljs.core.merge.call(null, cljs.core.meta.call(null, o__13664), m__13663))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__13671 = cljs.reader.read_char.call(null, reader);
    if(ch__13671 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__13671)) {
        var G__13674 = reader;
        var G__13675 = eof_is_error;
        var G__13676 = sentinel;
        var G__13677 = is_recursive;
        reader = G__13674;
        eof_is_error = G__13675;
        sentinel = G__13676;
        is_recursive = G__13677;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__13671)) {
          var G__13678 = cljs.reader.read_comment.call(null, reader, ch__13671);
          var G__13679 = eof_is_error;
          var G__13680 = sentinel;
          var G__13681 = is_recursive;
          reader = G__13678;
          eof_is_error = G__13679;
          sentinel = G__13680;
          is_recursive = G__13681;
          continue
        }else {
          if("\ufdd0'else") {
            var f__13672 = cljs.reader.macros.call(null, ch__13671);
            var res__13673 = cljs.core.truth_(f__13672) ? f__13672.call(null, reader, ch__13671) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__13671) ? cljs.reader.read_number.call(null, reader, ch__13671) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__13671) : null;
            if(res__13673 === reader) {
              var G__13682 = reader;
              var G__13683 = eof_is_error;
              var G__13684 = sentinel;
              var G__13685 = is_recursive;
              reader = G__13682;
              eof_is_error = G__13683;
              sentinel = G__13684;
              is_recursive = G__13685;
              continue
            }else {
              return res__13673
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__13687 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__13687, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__13689 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__13689.getLength() < width) {
            var G__13690 = b__13689.append("0");
            b__13689 = G__13690;
            continue
          }else {
            return b__13689.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____13693 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____13693)) {
    var or__3824__auto____13694 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____13694)) {
      return or__3824__auto____13694
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____13693
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__13699 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__13700 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__13700 : dim_norm__13699, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__13701 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__13703 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____13702 = low <= n;
      if(and__3822__auto____13702) {
        return n <= high
      }else {
        return and__3822__auto____13702
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____13704 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__13701, ts)));
    if(cljs.core.truth_(temp__3974__auto____13704)) {
      var vec__13705__13708 = temp__3974__auto____13704;
      var vec__13706__13709 = cljs.core.nth.call(null, vec__13705__13708, 0, null);
      var ___13710 = cljs.core.nth.call(null, vec__13706__13709, 0, null);
      var years__13711 = cljs.core.nth.call(null, vec__13706__13709, 1, null);
      var months__13712 = cljs.core.nth.call(null, vec__13706__13709, 2, null);
      var days__13713 = cljs.core.nth.call(null, vec__13706__13709, 3, null);
      var hours__13714 = cljs.core.nth.call(null, vec__13706__13709, 4, null);
      var minutes__13715 = cljs.core.nth.call(null, vec__13706__13709, 5, null);
      var seconds__13716 = cljs.core.nth.call(null, vec__13706__13709, 6, null);
      var milliseconds__13717 = cljs.core.nth.call(null, vec__13706__13709, 7, null);
      var vec__13707__13718 = cljs.core.nth.call(null, vec__13705__13708, 1, null);
      var ___13719 = cljs.core.nth.call(null, vec__13707__13718, 0, null);
      var ___13720 = cljs.core.nth.call(null, vec__13707__13718, 1, null);
      var ___13721 = cljs.core.nth.call(null, vec__13707__13718, 2, null);
      var V__13722 = vec__13705__13708;
      var vec__13723__13726 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__13698_SHARP_) {
          return parseInt(p1__13698_SHARP_, 10)
        }, v)
      }, cljs.core.map.call(null, function(p1__13696_SHARP_, p2__13695_SHARP_) {
        return cljs.core.update_in.call(null, p2__13695_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__13696_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__13697_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__13697_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__13722));
      var vec__13724__13727 = cljs.core.nth.call(null, vec__13723__13726, 0, null);
      var ___13728 = cljs.core.nth.call(null, vec__13724__13727, 0, null);
      var y__13729 = cljs.core.nth.call(null, vec__13724__13727, 1, null);
      var mo__13730 = cljs.core.nth.call(null, vec__13724__13727, 2, null);
      var d__13731 = cljs.core.nth.call(null, vec__13724__13727, 3, null);
      var h__13732 = cljs.core.nth.call(null, vec__13724__13727, 4, null);
      var m__13733 = cljs.core.nth.call(null, vec__13724__13727, 5, null);
      var s__13734 = cljs.core.nth.call(null, vec__13724__13727, 6, null);
      var ms__13735 = cljs.core.nth.call(null, vec__13724__13727, 7, null);
      var vec__13725__13736 = cljs.core.nth.call(null, vec__13723__13726, 1, null);
      var offset_sign__13737 = cljs.core.nth.call(null, vec__13725__13736, 0, null);
      var offset_hours__13738 = cljs.core.nth.call(null, vec__13725__13736, 1, null);
      var offset_minutes__13739 = cljs.core.nth.call(null, vec__13725__13736, 2, null);
      var offset__13740 = offset_sign__13737 * (offset_hours__13738 * 60 + offset_minutes__13739);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__13711) ? 1970 : y__13729, cljs.core.not.call(null, months__13712) ? 1 : check__13703.call(null, 1, mo__13730, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__13713) ? 1 : check__13703.call(null, 1, d__13731, cljs.reader.days_in_month.call(null, mo__13730, cljs.reader.leap_year_QMARK_.call(null, y__13729)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__13714) ? 0 : check__13703.call(null, 0, h__13732, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__13715) ? 0 : check__13703.call(null, 0, m__13733, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__13716) ? 0 : check__13703.call(null, 0, s__13734, cljs.core._EQ_.call(null, m__13733, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__13717) ? 0 : check__13703.call(null, 
      0, ms__13735, 999, "timestamp millisecond field must be in range 0..999"), offset__13740], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____13752 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____13752)) {
    var vec__13753__13754 = temp__3971__auto____13752;
    var years__13755 = cljs.core.nth.call(null, vec__13753__13754, 0, null);
    var months__13756 = cljs.core.nth.call(null, vec__13753__13754, 1, null);
    var days__13757 = cljs.core.nth.call(null, vec__13753__13754, 2, null);
    var hours__13758 = cljs.core.nth.call(null, vec__13753__13754, 3, null);
    var minutes__13759 = cljs.core.nth.call(null, vec__13753__13754, 4, null);
    var seconds__13760 = cljs.core.nth.call(null, vec__13753__13754, 5, null);
    var ms__13761 = cljs.core.nth.call(null, vec__13753__13754, 6, null);
    var offset__13762 = cljs.core.nth.call(null, vec__13753__13754, 7, null);
    return new Date(Date.UTC(years__13755, months__13756 - 1, days__13757, hours__13758, minutes__13759, seconds__13760, ms__13761) - offset__13762 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__13766 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____13767 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__13766), null);
  if(cljs.core.truth_(temp__3971__auto____13767)) {
    var pfn__13768 = temp__3971__auto____13767;
    return pfn__13768.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__13766), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__13771 = cljs.core.name.call(null, tag);
  var old_parser__13772 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13771, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__13771, f);
  return old_parser__13772
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__13775 = cljs.core.name.call(null, tag);
  var old_parser__13776 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13775, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__13775);
  return old_parser__13776
};
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__13468 = {};
  var G__13469__13470 = cljs.core.seq.call(null, m);
  if(G__13469__13470) {
    var G__13472__13474 = cljs.core.first.call(null, G__13469__13470);
    var vec__13473__13475 = G__13472__13474;
    var k__13476 = cljs.core.nth.call(null, vec__13473__13475, 0, null);
    var v__13477 = cljs.core.nth.call(null, vec__13473__13475, 1, null);
    var G__13469__13478 = G__13469__13470;
    var G__13472__13479 = G__13472__13474;
    var G__13469__13480 = G__13469__13478;
    while(true) {
      var vec__13481__13482 = G__13472__13479;
      var k__13483 = cljs.core.nth.call(null, vec__13481__13482, 0, null);
      var v__13484 = cljs.core.nth.call(null, vec__13481__13482, 1, null);
      var G__13469__13485 = G__13469__13480;
      out__13468[cljs.core.name.call(null, k__13483)] = v__13484;
      var temp__3974__auto____13486 = cljs.core.next.call(null, G__13469__13485);
      if(temp__3974__auto____13486) {
        var G__13469__13487 = temp__3974__auto____13486;
        var G__13488 = cljs.core.first.call(null, G__13469__13487);
        var G__13489 = G__13469__13487;
        G__13472__13479 = G__13488;
        G__13469__13480 = G__13489;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return out__13468
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__13491 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__13491)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__13492) {
    var v = cljs.core.first(arglist__13492);
    var text = cljs.core.rest(arglist__13492);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__13498) {
          var vec__13499__13500 = p__13498;
          var k__13501 = cljs.core.nth.call(null, vec__13499__13500, 0, null);
          var v__13502 = cljs.core.nth.call(null, vec__13499__13500, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__13501), clj__GT_js.call(null, v__13502))
        }, cljs.core.ObjMap.EMPTY, x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("jayq.util");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____13269 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____13269)) {
        var cm__13270 = temp__3971__auto____13269;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__13270), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__13271) {
    var vec__13275__13276 = p__13271;
    var context__13277 = cljs.core.nth.call(null, vec__13275__13276, 0, null);
    if(cljs.core.not.call(null, context__13277)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__13277)
    }
  };
  var $ = function(sel, var_args) {
    var p__13271 = null;
    if(goog.isDef(var_args)) {
      p__13271 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__13271)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__13278) {
    var sel = cljs.core.first(arglist__13278);
    var p__13271 = cljs.core.rest(arglist__13278);
    return $__delegate(sel, p__13271)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, this$, f)
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, this$, f, start)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____13279 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____13279)) {
    return or__3824__auto____13279
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__13280 = null;
  var G__13280__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__13280__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__13280 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13280__2.call(this, _, k);
      case 3:
        return G__13280__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__13280
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function text($elem, txt) {
  return $elem.text(txt)
};
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__13281) {
    var vec__13286__13287 = p__13281;
    var v__13288 = cljs.core.nth.call(null, vec__13286__13287, 0, null);
    var a__13289 = cljs.core.name.call(null, a);
    if(cljs.core.not.call(null, v__13288)) {
      return $elem.attr(a__13289)
    }else {
      return $elem.attr(a__13289, v__13288)
    }
  };
  var attr = function($elem, a, var_args) {
    var p__13281 = null;
    if(goog.isDef(var_args)) {
      p__13281 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__13281)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__13290) {
    var $elem = cljs.core.first(arglist__13290);
    var a = cljs.core.first(cljs.core.next(arglist__13290));
    var p__13281 = cljs.core.rest(cljs.core.next(arglist__13290));
    return attr__delegate($elem, a, p__13281)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.remove_attr = function remove_attr($elem, a) {
  return $elem.removeAttr(cljs.core.name.call(null, a))
};
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__13291) {
    var vec__13296__13297 = p__13291;
    var v__13298 = cljs.core.nth.call(null, vec__13296__13297, 0, null);
    var k__13299 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__13298)) {
      return $elem.data(k__13299)
    }else {
      return $elem.data(k__13299, v__13298)
    }
  };
  var data = function($elem, k, var_args) {
    var p__13291 = null;
    if(goog.isDef(var_args)) {
      p__13291 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__13291)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__13300) {
    var $elem = cljs.core.first(arglist__13300);
    var k = cljs.core.first(cljs.core.next(arglist__13300));
    var p__13291 = cljs.core.rest(cljs.core.next(arglist__13300));
    return data__delegate($elem, k, p__13291)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__13302 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__13302)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__13304 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__13304)
};
jayq.core.toggle_class = function toggle_class($elem, cl) {
  var cl__13306 = cljs.core.name.call(null, cl);
  return $elem.toggleClass(cl__13306)
};
jayq.core.has_class = function has_class($elem, cl) {
  var cl__13308 = cljs.core.name.call(null, cl);
  return $elem.hasClass(cl__13308)
};
jayq.core.after = function after($elem, content) {
  return $elem.after(content)
};
jayq.core.before = function before($elem, content) {
  return $elem.before(content)
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content)
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__13309) {
    var vec__13314__13315 = p__13309;
    var speed__13316 = cljs.core.nth.call(null, vec__13314__13315, 0, null);
    var on_finish__13317 = cljs.core.nth.call(null, vec__13314__13315, 1, null);
    return $elem.hide(speed__13316, on_finish__13317)
  };
  var hide = function($elem, var_args) {
    var p__13309 = null;
    if(goog.isDef(var_args)) {
      p__13309 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__13309)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__13318) {
    var $elem = cljs.core.first(arglist__13318);
    var p__13309 = cljs.core.rest(arglist__13318);
    return hide__delegate($elem, p__13309)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__13319) {
    var vec__13324__13325 = p__13319;
    var speed__13326 = cljs.core.nth.call(null, vec__13324__13325, 0, null);
    var on_finish__13327 = cljs.core.nth.call(null, vec__13324__13325, 1, null);
    return $elem.show(speed__13326, on_finish__13327)
  };
  var show = function($elem, var_args) {
    var p__13319 = null;
    if(goog.isDef(var_args)) {
      p__13319 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__13319)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__13328) {
    var $elem = cljs.core.first(arglist__13328);
    var p__13319 = cljs.core.rest(arglist__13328);
    return show__delegate($elem, p__13319)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__13329) {
    var vec__13334__13335 = p__13329;
    var speed__13336 = cljs.core.nth.call(null, vec__13334__13335, 0, null);
    var on_finish__13337 = cljs.core.nth.call(null, vec__13334__13335, 1, null);
    return $elem.toggle(speed__13336, on_finish__13337)
  };
  var toggle = function($elem, var_args) {
    var p__13329 = null;
    if(goog.isDef(var_args)) {
      p__13329 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__13329)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__13338) {
    var $elem = cljs.core.first(arglist__13338);
    var p__13329 = cljs.core.rest(arglist__13338);
    return toggle__delegate($elem, p__13329)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__13339) {
    var vec__13344__13345 = p__13339;
    var speed__13346 = cljs.core.nth.call(null, vec__13344__13345, 0, null);
    var on_finish__13347 = cljs.core.nth.call(null, vec__13344__13345, 1, null);
    return $elem.fadeOut(speed__13346, on_finish__13347)
  };
  var fade_out = function($elem, var_args) {
    var p__13339 = null;
    if(goog.isDef(var_args)) {
      p__13339 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__13339)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__13348) {
    var $elem = cljs.core.first(arglist__13348);
    var p__13339 = cljs.core.rest(arglist__13348);
    return fade_out__delegate($elem, p__13339)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__13349) {
    var vec__13354__13355 = p__13349;
    var speed__13356 = cljs.core.nth.call(null, vec__13354__13355, 0, null);
    var on_finish__13357 = cljs.core.nth.call(null, vec__13354__13355, 1, null);
    return $elem.fadeIn(speed__13356, on_finish__13357)
  };
  var fade_in = function($elem, var_args) {
    var p__13349 = null;
    if(goog.isDef(var_args)) {
      p__13349 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__13349)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__13358) {
    var $elem = cljs.core.first(arglist__13358);
    var p__13349 = cljs.core.rest(arglist__13358);
    return fade_in__delegate($elem, p__13349)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__13359) {
    var vec__13364__13365 = p__13359;
    var speed__13366 = cljs.core.nth.call(null, vec__13364__13365, 0, null);
    var on_finish__13367 = cljs.core.nth.call(null, vec__13364__13365, 1, null);
    return $elem.slideUp(speed__13366, on_finish__13367)
  };
  var slide_up = function($elem, var_args) {
    var p__13359 = null;
    if(goog.isDef(var_args)) {
      p__13359 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__13359)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__13368) {
    var $elem = cljs.core.first(arglist__13368);
    var p__13359 = cljs.core.rest(arglist__13368);
    return slide_up__delegate($elem, p__13359)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__13369) {
    var vec__13374__13375 = p__13369;
    var speed__13376 = cljs.core.nth.call(null, vec__13374__13375, 0, null);
    var on_finish__13377 = cljs.core.nth.call(null, vec__13374__13375, 1, null);
    return $elem.slideDown(speed__13376, on_finish__13377)
  };
  var slide_down = function($elem, var_args) {
    var p__13369 = null;
    if(goog.isDef(var_args)) {
      p__13369 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__13369)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__13378) {
    var $elem = cljs.core.first(arglist__13378);
    var p__13369 = cljs.core.rest(arglist__13378);
    return slide_down__delegate($elem, p__13369)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.closest = function() {
  var closest__delegate = function($elem, selector, p__13379) {
    var vec__13383__13384 = p__13379;
    var context__13385 = cljs.core.nth.call(null, vec__13383__13384, 0, null);
    return $elem.closest(selector, context__13385)
  };
  var closest = function($elem, selector, var_args) {
    var p__13379 = null;
    if(goog.isDef(var_args)) {
      p__13379 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return closest__delegate.call(this, $elem, selector, p__13379)
  };
  closest.cljs$lang$maxFixedArity = 2;
  closest.cljs$lang$applyTo = function(arglist__13386) {
    var $elem = cljs.core.first(arglist__13386);
    var selector = cljs.core.first(cljs.core.next(arglist__13386));
    var p__13379 = cljs.core.rest(cljs.core.next(arglist__13386));
    return closest__delegate($elem, selector, p__13379)
  };
  closest.cljs$lang$arity$variadic = closest__delegate;
  return closest
}();
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__13387) {
    var vec__13391__13392 = p__13387;
    var v__13393 = cljs.core.nth.call(null, vec__13391__13392, 0, null);
    if(cljs.core.truth_(v__13393)) {
      return $elem.val(v__13393)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__13387 = null;
    if(goog.isDef(var_args)) {
      p__13387 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__13387)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__13394) {
    var $elem = cljs.core.first(arglist__13394);
    var p__13387 = cljs.core.rest(arglist__13394);
    return val__delegate($elem, p__13387)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.serialize = function serialize($elem) {
  return $elem.serialize()
};
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__13395, content, callback) {
  var vec__13401__13402 = p__13395;
  var method__13403 = cljs.core.nth.call(null, vec__13401__13402, 0, null);
  var uri__13404 = cljs.core.nth.call(null, vec__13401__13402, 1, null);
  var params__13405 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__13403)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__13404, params__13405)
};
jayq.core.ajax = function() {
  var ajax = null;
  var ajax__1 = function(settings) {
    return jQuery.ajax(jayq.util.clj__GT_js.call(null, settings))
  };
  var ajax__2 = function(url, settings) {
    return jQuery.ajax(url, jayq.util.clj__GT_js.call(null, settings))
  };
  ajax = function(url, settings) {
    switch(arguments.length) {
      case 1:
        return ajax__1.call(this, url);
      case 2:
        return ajax__2.call(this, url, settings)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ajax.cljs$lang$arity$1 = ajax__1;
  ajax.cljs$lang$arity$2 = ajax__2;
  return ajax
}();
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.unbind = function() {
  var unbind__delegate = function($elem, ev, p__13406) {
    var vec__13410__13411 = p__13406;
    var func__13412 = cljs.core.nth.call(null, vec__13410__13411, 0, null);
    return $elem.unbind(cljs.core.name.call(null, ev), func__13412)
  };
  var unbind = function($elem, ev, var_args) {
    var p__13406 = null;
    if(goog.isDef(var_args)) {
      p__13406 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unbind__delegate.call(this, $elem, ev, p__13406)
  };
  unbind.cljs$lang$maxFixedArity = 2;
  unbind.cljs$lang$applyTo = function(arglist__13413) {
    var $elem = cljs.core.first(arglist__13413);
    var ev = cljs.core.first(cljs.core.next(arglist__13413));
    var p__13406 = cljs.core.rest(cljs.core.next(arglist__13413));
    return unbind__delegate($elem, ev, p__13406)
  };
  unbind.cljs$lang$arity$variadic = unbind__delegate;
  return unbind
}();
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.coll_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__13414) {
    var vec__13420__13421 = p__13414;
    var sel__13422 = cljs.core.nth.call(null, vec__13420__13421, 0, null);
    var data__13423 = cljs.core.nth.call(null, vec__13420__13421, 1, null);
    var handler__13424 = cljs.core.nth.call(null, vec__13420__13421, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__13422), data__13423, handler__13424)
  };
  var on = function($elem, events, var_args) {
    var p__13414 = null;
    if(goog.isDef(var_args)) {
      p__13414 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__13414)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__13425) {
    var $elem = cljs.core.first(arglist__13425);
    var events = cljs.core.first(cljs.core.next(arglist__13425));
    var p__13414 = cljs.core.rest(cljs.core.next(arglist__13425));
    return on__delegate($elem, events, p__13414)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__13426) {
    var vec__13432__13433 = p__13426;
    var sel__13434 = cljs.core.nth.call(null, vec__13432__13433, 0, null);
    var data__13435 = cljs.core.nth.call(null, vec__13432__13433, 1, null);
    var handler__13436 = cljs.core.nth.call(null, vec__13432__13433, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__13434), data__13435, handler__13436)
  };
  var one = function($elem, events, var_args) {
    var p__13426 = null;
    if(goog.isDef(var_args)) {
      p__13426 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__13426)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__13437) {
    var $elem = cljs.core.first(arglist__13437);
    var events = cljs.core.first(cljs.core.next(arglist__13437));
    var p__13426 = cljs.core.rest(cljs.core.next(arglist__13437));
    return one__delegate($elem, events, p__13426)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__13438) {
    var vec__13443__13444 = p__13438;
    var sel__13445 = cljs.core.nth.call(null, vec__13443__13444, 0, null);
    var handler__13446 = cljs.core.nth.call(null, vec__13443__13444, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__13445), handler__13446)
  };
  var off = function($elem, events, var_args) {
    var p__13438 = null;
    if(goog.isDef(var_args)) {
      p__13438 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__13438)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__13447) {
    var $elem = cljs.core.first(arglist__13447);
    var events = cljs.core.first(cljs.core.next(arglist__13447));
    var p__13438 = cljs.core.rest(cljs.core.next(arglist__13447));
    return off__delegate($elem, events, p__13438)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("cljsbinding");
goog.require("cljs.core");
goog.require("jayq.core");
goog.require("jayq.core");
goog.require("cljs.reader");
cljsbinding.BindMonitor = cljs.core.atom.call(null, false);
cljsbinding.BindDependencies = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljsbinding.BindFn = cljs.core.atom.call(null, null);
cljsbinding.dynamic_bindings = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
cljsbinding.binding_key = cljs.core.atom.call(null, 0);
cljsbinding.make_js_map = function make_js_map(cljmap) {
  var out__13044 = {};
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__13042_SHARP_) {
    return out__13044[cljs.core.name.call(null, cljs.core.first.call(null, p1__13042_SHARP_))] = cljs.core.second.call(null, p1__13042_SHARP_)
  }, cljmap));
  return out__13044
};
cljsbinding.translate = function translate(data) {
  if(cljs.core.map_QMARK_.call(null, data)) {
    return cljsbinding.make_js_map.call(null, data)
  }else {
    return data
  }
};
cljsbinding.visible = function visible(elem, v) {
  if(cljs.core.truth_(v)) {
    return jayq.core.show.call(null, elem)
  }else {
    return jayq.core.hide.call(null, elem)
  }
};
cljsbinding.checked = function checked(elem, c) {
  elem.removeAttr("checked");
  if(cljs.core.truth_(c)) {
    return jayq.core.attr.call(null, elem, "checked", "checked")
  }else {
    return null
  }
};
cljsbinding.setclass = function setclass(elem, c) {
  elem.removeClass();
  return elem.addClass(c)
};
cljsbinding.bindings = cljs.core.ObjMap.fromObject(["visible", "class", "checked"], {"visible":cljsbinding.visible, "class":cljsbinding.setclass, "checked":cljsbinding.checked});
cljsbinding.fnhandlers = cljs.core.PersistentHashSet.fromArray(["click", "dblclick"]);
cljsbinding.in_bindseq_QMARK_ = function in_bindseq_QMARK_(elem) {
  var or__3824__auto____13046 = cljs.core.count.call(null, elem.filter("*[bindseq]")) > 0;
  if(or__3824__auto____13046) {
    return or__3824__auto____13046
  }else {
    return cljs.core.count.call(null, elem.parents("*[bindseq]")) > 0
  }
};
cljsbinding.valuefn = function valuefn(elem, fnstr, ctx, bindingname) {
  if(cljs.core.contains_QMARK_.call(null, cljsbinding.fnhandlers, bindingname)) {
    if(cljs.core.truth_(cljsbinding.in_bindseq_QMARK_.call(null, elem))) {
      return function() {
        return eval(fnstr).call(null, ctx)
      }
    }else {
      return function() {
        return eval(fnstr).call(null)
      }
    }
  }else {
    if(cljs.core.truth_(cljsbinding.in_bindseq_QMARK_.call(null, elem))) {
      return cljsbinding.translate.call(null, eval(fnstr).call(null, ctx))
    }else {
      return cljsbinding.translate.call(null, eval(fnstr).call(null))
    }
  }
};
cljsbinding.bind_elem = function bind_elem(elem, bindingname, f) {
  if(cljs.core.contains_QMARK_.call(null, cljsbinding.bindings, bindingname)) {
    return function() {
      return cljsbinding.bindings.call(null, bindingname).call(null, elem, f.call(null))
    }
  }else {
    return function() {
      return elem[bindingname].call(elem, f.call(null))
    }
  }
};
cljsbinding.bindfn = function bindfn(elem, data, ctx) {
  var bindingname__13049 = clojure.string.trim.call(null, cljs.core.first.call(null, data));
  var fname__13050 = clojure.string.trim.call(null, cljs.core.second.call(null, data));
  return cljsbinding.bind_elem.call(null, elem, bindingname__13049, function() {
    return cljsbinding.valuefn.call(null, elem, fname__13050, ctx, bindingname__13049)
  })
};
cljsbinding.run_bind_fn = function run_bind_fn(f) {
  cljs.core.reset_BANG_.call(null, cljsbinding.BindMonitor, true);
  cljs.core.reset_BANG_.call(null, cljsbinding.BindFn, f);
  f.call(null);
  return cljs.core.reset_BANG_.call(null, cljsbinding.BindMonitor, false)
};
cljsbinding.bind_jq_elem = function bind_jq_elem(elem, data, ctx) {
  return cljsbinding.run_bind_fn.call(null, cljsbinding.bindfn.call(null, elem, data, ctx))
};
cljsbinding.bind = function bind(elem, ctx) {
  var G__13057__13058 = cljs.core.seq.call(null, jayq.core.attr.call(null, elem, "bind").split(";"));
  if(G__13057__13058) {
    var data__13059 = cljs.core.first.call(null, G__13057__13058);
    var G__13057__13060 = G__13057__13058;
    while(true) {
      cljsbinding.bind_jq_elem.call(null, elem, data__13059.split(":"), ctx);
      var temp__3974__auto____13061 = cljs.core.next.call(null, G__13057__13060);
      if(temp__3974__auto____13061) {
        var G__13057__13062 = temp__3974__auto____13061;
        var G__13063 = cljs.core.first.call(null, G__13057__13062);
        var G__13064 = G__13057__13062;
        data__13059 = G__13063;
        G__13057__13060 = G__13064;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljsbinding.atom_val = function atom_val(elem, atm) {
  var aval__13067 = cljs.core.deref.call(null, atm);
  if(cljs.core.map_QMARK_.call(null, aval__13067)) {
    return aval__13067.call(null, cljs.core.keyword.call(null, jayq.core.attr.call(null, elem, "id")))
  }else {
    return aval__13067
  }
};
cljsbinding.reset_atom_val = function reset_atom_val(elem, atom, val) {
  if(cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, atom))) {
    return cljs.core.swap_BANG_.call(null, atom, function(p1__13065_SHARP_) {
      return cljs.core.assoc.call(null, p1__13065_SHARP_, cljs.core.keyword.call(null, jayq.core.attr.call(null, elem, "id")), val)
    })
  }else {
    return cljs.core.reset_BANG_.call(null, atom, val)
  }
};
cljsbinding.bind_input_atom = function bind_input_atom(elem, atm) {
  cljsbinding.run_bind_fn.call(null, function() {
    return elem["val"].call(elem, cljsbinding.atom_val.call(null, elem, atm))
  });
  return elem.change(function() {
    cljsbinding.reset_atom_val.call(null, elem, atm, elem.val());
    return false
  })
};
cljsbinding.bind_checkbox_atom = function bind_checkbox_atom(elem, atm) {
  cljsbinding.run_bind_fn.call(null, function() {
    return cljsbinding.checked.call(null, elem, cljsbinding.atom_val.call(null, elem, atm))
  });
  return elem.change(function() {
    cljsbinding.reset_atom_val.call(null, elem, atm, elem.is(":checked"));
    return false
  })
};
cljsbinding.bind_text_atom = function bind_text_atom(elem, atm) {
  return cljsbinding.run_bind_fn.call(null, function() {
    return elem["text"].call(elem, cljsbinding.atom_val.call(null, elem, atm))
  })
};
cljsbinding.bind_elem_to_atom = function bind_elem_to_atom(elem, atm) {
  if(cljs.core.truth_(elem.is("input"))) {
    if(cljs.core._EQ_.call(null, "checkbox", jayq.core.attr.call(null, elem, "type"))) {
      return cljsbinding.bind_checkbox_atom.call(null, elem, atm)
    }else {
      return cljsbinding.bind_input_atom.call(null, elem, atm)
    }
  }else {
    return cljsbinding.bind_text_atom.call(null, elem, atm)
  }
};
cljsbinding.bindatom = function bindatom(elem) {
  var atm__13069 = eval(jayq.core.attr.call(null, elem, "bindatom"));
  return cljsbinding.bind_elem_to_atom.call(null, elem, atm__13069)
};
cljsbinding.insert_seq_item = function insert_seq_item(parent, item, elem, bindfn) {
  jayq.core.append.call(null, parent, elem);
  return bindfn.call(null, elem, item)
};
cljsbinding.insertseq = function insertseq(seq, parent, template, bindfn) {
  jayq.core.remove.call(null, parent.children());
  var G__13076__13077 = cljs.core.seq.call(null, seq);
  if(G__13076__13077) {
    var item__13078 = cljs.core.first.call(null, G__13076__13077);
    var G__13076__13079 = G__13076__13077;
    while(true) {
      cljsbinding.insert_seq_item.call(null, parent, item__13078, template.clone(), bindfn);
      var temp__3974__auto____13080 = cljs.core.next.call(null, G__13076__13079);
      if(temp__3974__auto____13080) {
        var G__13076__13081 = temp__3974__auto____13080;
        var G__13082 = cljs.core.first.call(null, G__13076__13081);
        var G__13083 = G__13076__13081;
        item__13078 = G__13082;
        G__13076__13079 = G__13083;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljsbinding.bindseq = function bindseq(elem, elparent, bindfn) {
  var atom__13086 = eval(jayq.core.attr.call(null, elem, "bindseq"));
  cljsbinding.insertseq.call(null, cljs.core.deref.call(null, atom__13086), elparent, elem, bindfn);
  return cljs.core.add_watch.call(null, atom__13086, "\ufdd0'seq-binding-watch", function(key, a, old_val, new_val) {
    return cljsbinding.insertseq.call(null, new_val, elparent, elem, bindfn)
  })
};
cljsbinding.dobind = function dobind(parent, ctx) {
  var seqs__13132 = jayq.core.$.call(null, parent.find("*[bindseq]"));
  var seqparents__13133 = cljs.core.seq.call(null, cljs.core.map.call(null, function(p1__13084_SHARP_) {
    return jayq.core.$.call(null, p1__13084_SHARP_).parent()
  }, jayq.core.$.call(null, parent.find("*[bindseq]"))));
  var G__13134__13135 = cljs.core.seq.call(null, seqs__13132);
  if(G__13134__13135) {
    var elem__13136 = cljs.core.first.call(null, G__13134__13135);
    var G__13134__13137 = G__13134__13135;
    while(true) {
      jayq.core.remove.call(null, jayq.core.$.call(null, elem__13136));
      var temp__3974__auto____13138 = cljs.core.next.call(null, G__13134__13137);
      if(temp__3974__auto____13138) {
        var G__13134__13139 = temp__3974__auto____13138;
        var G__13177 = cljs.core.first.call(null, G__13134__13139);
        var G__13178 = G__13134__13139;
        elem__13136 = G__13177;
        G__13134__13137 = G__13178;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__13140__13141 = cljs.core.seq.call(null, parent.filter("*[bind]"));
  if(G__13140__13141) {
    var elem__13142 = cljs.core.first.call(null, G__13140__13141);
    var G__13140__13143 = G__13140__13141;
    while(true) {
      cljsbinding.bind.call(null, jayq.core.$.call(null, elem__13142), ctx);
      var temp__3974__auto____13144 = cljs.core.next.call(null, G__13140__13143);
      if(temp__3974__auto____13144) {
        var G__13140__13145 = temp__3974__auto____13144;
        var G__13179 = cljs.core.first.call(null, G__13140__13145);
        var G__13180 = G__13140__13145;
        elem__13142 = G__13179;
        G__13140__13143 = G__13180;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__13146__13147 = cljs.core.seq.call(null, parent.find("*[bind]"));
  if(G__13146__13147) {
    var elem__13148 = cljs.core.first.call(null, G__13146__13147);
    var G__13146__13149 = G__13146__13147;
    while(true) {
      cljsbinding.bind.call(null, jayq.core.$.call(null, elem__13148), ctx);
      var temp__3974__auto____13150 = cljs.core.next.call(null, G__13146__13149);
      if(temp__3974__auto____13150) {
        var G__13146__13151 = temp__3974__auto____13150;
        var G__13181 = cljs.core.first.call(null, G__13146__13151);
        var G__13182 = G__13146__13151;
        elem__13148 = G__13181;
        G__13146__13149 = G__13182;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__13152__13153 = cljs.core.seq.call(null, parent.find("*[bindatom]"));
  if(G__13152__13153) {
    var elem__13154 = cljs.core.first.call(null, G__13152__13153);
    var G__13152__13155 = G__13152__13153;
    while(true) {
      cljsbinding.bindatom.call(null, jayq.core.$.call(null, elem__13154));
      var temp__3974__auto____13156 = cljs.core.next.call(null, G__13152__13155);
      if(temp__3974__auto____13156) {
        var G__13152__13157 = temp__3974__auto____13156;
        var G__13183 = cljs.core.first.call(null, G__13152__13157);
        var G__13184 = G__13152__13157;
        elem__13154 = G__13183;
        G__13152__13155 = G__13184;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__13158__13159 = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.list, seqs__13132, seqparents__13133));
  if(G__13158__13159) {
    var G__13161__13163 = cljs.core.first.call(null, G__13158__13159);
    var vec__13162__13164 = G__13161__13163;
    var elem__13165 = cljs.core.nth.call(null, vec__13162__13164, 0, null);
    var parent__13166 = cljs.core.nth.call(null, vec__13162__13164, 1, null);
    var G__13158__13167 = G__13158__13159;
    var G__13161__13168 = G__13161__13163;
    var G__13158__13169 = G__13158__13167;
    while(true) {
      var vec__13170__13171 = G__13161__13168;
      var elem__13172 = cljs.core.nth.call(null, vec__13170__13171, 0, null);
      var parent__13173 = cljs.core.nth.call(null, vec__13170__13171, 1, null);
      var G__13158__13174 = G__13158__13169;
      cljsbinding.bindseq.call(null, jayq.core.$.call(null, elem__13172), parent__13173, dobind);
      var temp__3974__auto____13175 = cljs.core.next.call(null, G__13158__13174);
      if(temp__3974__auto____13175) {
        var G__13158__13176 = temp__3974__auto____13175;
        var G__13185 = cljs.core.first.call(null, G__13158__13176);
        var G__13186 = G__13158__13176;
        G__13161__13168 = G__13185;
        G__13158__13169 = G__13186;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljsbinding.bindall = function() {
  var bindall = null;
  var bindall__1 = function(elem) {
    return cljsbinding.dobind.call(null, elem, null)
  };
  var bindall__2 = function(elem, ctx) {
    return cljsbinding.dobind.call(null, elem, ctx)
  };
  bindall = function(elem, ctx) {
    switch(arguments.length) {
      case 1:
        return bindall__1.call(this, elem);
      case 2:
        return bindall__2.call(this, elem, ctx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  bindall.cljs$lang$arity$1 = bindall__1;
  bindall.cljs$lang$arity$2 = bindall__2;
  return bindall
}();
goog.exportSymbol("cljsbinding.bindall", cljsbinding.bindall);
cljsbinding.init = function init() {
  return cljsbinding.bindall.call(null, jayq.core.$.call(null, "body"), null)
};
goog.exportSymbol("cljsbinding.init", cljsbinding.init);
cljsbinding.seq_contains_QMARK_ = function seq_contains_QMARK_(sequence, item) {
  if(cljs.core.empty_QMARK_.call(null, sequence)) {
    return false
  }else {
    return cljs.core.reduce.call(null, function(p1__13187_SHARP_, p2__13188_SHARP_) {
      var or__3824__auto____13191 = p1__13187_SHARP_;
      if(cljs.core.truth_(or__3824__auto____13191)) {
        return or__3824__auto____13191
      }else {
        return p2__13188_SHARP_
      }
    }, cljs.core.map.call(null, function(p1__13189_SHARP_) {
      return cljs.core._EQ_.call(null, p1__13189_SHARP_, item)
    }, sequence))
  }
};
cljsbinding.add_binding = function add_binding(atom, m) {
  return cljs.core.assoc.call(null, m, atom, cljs.core.cons.call(null, cljs.core.deref.call(null, cljsbinding.BindFn), m.call(null, atom)))
};
cljsbinding.run_bindings = function run_bindings(key, a, old_val, new_val) {
  var G__13198__13199 = cljs.core.seq.call(null, cljs.core.deref.call(null, cljsbinding.BindDependencies).call(null, a));
  if(G__13198__13199) {
    var f__13200 = cljs.core.first.call(null, G__13198__13199);
    var G__13198__13201 = G__13198__13199;
    while(true) {
      f__13200.call(null);
      var temp__3974__auto____13202 = cljs.core.next.call(null, G__13198__13201);
      if(temp__3974__auto____13202) {
        var G__13198__13203 = temp__3974__auto____13202;
        var G__13204 = cljs.core.first.call(null, G__13198__13203);
        var G__13205 = G__13198__13203;
        f__13200 = G__13204;
        G__13198__13201 = G__13205;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljsbinding.next_binding_key = function next_binding_key() {
  return cljs.core.swap_BANG_.call(null, cljsbinding.binding_key, cljs.core.inc)
};
cljsbinding.register_bindingsource = function register_bindingsource(source) {
  var bindingkey__13208 = [cljs.core.str(cljsbinding.next_binding_key.call(null))].join("");
  cljs.core.swap_BANG_.call(null, cljsbinding.dynamic_bindings, function(p1__13206_SHARP_) {
    return cljs.core.assoc.call(null, p1__13206_SHARP_, bindingkey__13208, source)
  });
  return bindingkey__13208
};
cljsbinding.apply_binding = function apply_binding(elem, source) {
  if(cljs.core.map_QMARK_.call(null, source)) {
    var G__13228__13229 = cljs.core.seq.call(null, source);
    if(G__13228__13229) {
      var G__13231__13233 = cljs.core.first.call(null, G__13228__13229);
      var vec__13232__13234 = G__13231__13233;
      var bindingname__13235 = cljs.core.nth.call(null, vec__13232__13234, 0, null);
      var f__13236 = cljs.core.nth.call(null, vec__13232__13234, 1, null);
      var G__13228__13237 = G__13228__13229;
      var G__13231__13238 = G__13231__13233;
      var G__13228__13239 = G__13228__13237;
      while(true) {
        var vec__13240__13241 = G__13231__13238;
        var bindingname__13242 = cljs.core.nth.call(null, vec__13240__13241, 0, null);
        var f__13243 = cljs.core.nth.call(null, vec__13240__13241, 1, null);
        var G__13228__13244 = G__13228__13239;
        cljsbinding.run_bind_fn.call(null, cljsbinding.bind_elem.call(null, elem, cljs.core.name.call(null, bindingname__13242), f__13243));
        var temp__3974__auto____13245 = cljs.core.next.call(null, G__13228__13244);
        if(temp__3974__auto____13245) {
          var G__13228__13246 = temp__3974__auto____13245;
          var G__13247 = cljs.core.first.call(null, G__13228__13246);
          var G__13248 = G__13228__13246;
          G__13231__13238 = G__13247;
          G__13228__13239 = G__13248;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    return cljsbinding.bind_elem_to_atom.call(null, elem, source)
  }
};
cljsbinding.apply_bindingsource = function apply_bindingsource(elem, bindingkey) {
  var G__13255__13256 = cljs.core.seq.call(null, cljs.core.deref.call(null, cljsbinding.dynamic_bindings).call(null, bindingkey));
  if(G__13255__13256) {
    var source__13257 = cljs.core.first.call(null, G__13255__13256);
    var G__13255__13258 = G__13255__13256;
    while(true) {
      cljsbinding.apply_binding.call(null, elem, source__13257);
      var temp__3974__auto____13259 = cljs.core.next.call(null, G__13255__13258);
      if(temp__3974__auto____13259) {
        var G__13255__13260 = temp__3974__auto____13259;
        var G__13261 = cljs.core.first.call(null, G__13255__13260);
        var G__13262 = G__13255__13260;
        source__13257 = G__13261;
        G__13255__13258 = G__13262;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljsbinding.register = function register(atom) {
  cljs.core.reset_BANG_.call(null, cljsbinding.BindMonitor, false);
  cljs.core.swap_BANG_.call(null, cljsbinding.BindDependencies, cljs.core.partial.call(null, cljsbinding.add_binding, atom));
  cljs.core.add_watch.call(null, atom, "\ufdd0'binding-watch", cljsbinding.run_bindings);
  return cljs.core.reset_BANG_.call(null, cljsbinding.BindMonitor, true)
};
goog.exportSymbol("cljsbinding.register", cljsbinding.register);
cljsbinding.cljsderef = function cljsderef() {
  return cljs.core._deref
};
goog.exportSymbol("cljsbinding.cljsderef", cljsbinding.cljsderef);
cljsbinding.shouldregister = function shouldregister(drf) {
  return drf.call(null, cljsbinding.BindMonitor)
};
goog.exportSymbol("cljsbinding.shouldregister", cljsbinding.shouldregister);
cljsbinding.boot = function boot() {
  return eval("    \n    var derefName = eval('cljsbinding.cljsderef.toString().match(/return.(.*$)\\\\s/m)[1]')\n    if (derefName[derefName.length-1] == ';')\n      derefName = derefName.substr(0,derefName.length-1)\n    var deref = eval(derefName)\n    eval(derefName +' = function (a) { if (cljsbinding.shouldregister(deref)) { cljsbinding.register(a) };return deref(a); }')\n    cljsbinding.init()")
};
goog.exportSymbol("cljsbinding.boot", cljsbinding.boot);
cljsbinding.uuid = function uuid() {
  var r__13264 = cljs.core.repeatedly.call(null, 30, function() {
    return cljs.core.rand_int.call(null, 16).toString(16)
  });
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.take.call(null, 8, r__13264), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.take.call(null, 4, cljs.core.drop.call(null, 8, r__13264)), cljs.core.PersistentVector.fromArray(["-4"], true), cljs.core.take.call(null, 3, cljs.core.drop.call(null, 12, r__13264)), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.PersistentVector.fromArray([(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16)], 
  true), cljs.core.take.call(null, 3, cljs.core.drop.call(null, 15, r__13264)), cljs.core.PersistentVector.fromArray(["-"], true), cljs.core.take.call(null, 12, cljs.core.drop.call(null, 18, r__13264))))
};
goog.exportSymbol("cljsbinding.uuid", cljsbinding.uuid);
cljsbinding.bind_atom_to_localstorage = function bind_atom_to_localstorage(name, atom) {
  cljs.core.add_watch.call(null, atom, "\ufdd0'binding-localstorage-watch", function(key, a, old_val, new_val) {
    return localStorage[name] = cljs.core.pr_str.call(null, new_val)
  });
  var storedValue__13266 = localStorage[name];
  if(!(storedValue__13266 == null)) {
    return cljs.core.reset_BANG_.call(null, atom, cljs.reader.read_string.call(null, storedValue__13266))
  }else {
    return null
  }
};
goog.exportSymbol("cljsbinding.bind_atom_to_localstorage", cljsbinding.bind_atom_to_localstorage);
goog.provide("faiz.reg.base");
goog.require("cljs.core");
goog.require("cljsbinding");
goog.require("enfocus.core");
faiz.reg.base.init = function init() {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#main"], true), enfocus.core.en_content.call(null, "Hello World"))
};
jayq.core.document_ready.call(null, function() {
  return faiz.reg.base.init.call(null)
});
